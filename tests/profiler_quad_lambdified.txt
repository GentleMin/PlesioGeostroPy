         290429 function calls (246853 primitive calls) in 0.148 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      2/1    0.000    0.000    0.148    0.148 {built-in method builtins.exec}
        1    0.000    0.000    0.148    0.148 <string>:1(<module>)
        1    0.000    0.000    0.148    0.148 949653852.py:1(int_jacobi_numpy)
        1    0.000    0.000    0.076    0.076 lambdify.py:181(lambdify)
    123/1    0.000    0.000    0.071    0.071 operations.py:453(doit)
    123/1    0.000    0.000    0.071    0.071 operations.py:455(<listcomp>)
        3    0.000    0.000    0.071    0.024 function.py:2230(doit)
5724/4457    0.005    0.000    0.063    0.000 cache.py:67(wrapper)
       70    0.000    0.000    0.054    0.001 basic.py:1125(xreplace)
  2002/70    0.003    0.000    0.054    0.001 basic.py:1190(_xreplace)
        1    0.000    0.000    0.053    0.053 lambdify.py:1103(doprint)
   799/11    0.005    0.000    0.041    0.004 printer.py:294(_print)
        6    0.000    0.000    0.038    0.006 function.py:1237(__new__)
        3    0.000    0.000    0.037    0.012 expr.py:3553(diff)
        3    0.000    0.000    0.037    0.012 function.py:1906(_derivative_dispatch)
5873/1475    0.002    0.000    0.037    0.000 assumptions.py:477(getit)
   239/22    0.011    0.000    0.036    0.002 assumptions.py:489(_ask)
   461/14    0.001    0.000    0.035    0.003 str.py:33(parenthesize)
   112/10    0.001    0.000    0.035    0.003 str.py:50(_print_Add)
        1    0.000    0.000    0.030    0.030 lambdify.py:1163(_preprocess)
        7    0.000    0.000    0.024    0.003 codeprinter.py:118(doprint)
        1    0.000    0.000    0.024    0.024 lambdify.py:936(_recursive_to_string)
        1    0.000    0.000    0.023    0.023 exprtools.py:1167(factor_terms)
    183/1    0.001    0.000    0.023    0.023 exprtools.py:1228(do)
     64/1    0.001    0.000    0.023    0.023 codeprinter.py:514(_print_Mul)
  592/559    0.001    0.000    0.022    0.000 {built-in method builtins.any}
       20    0.000    0.000    0.021    0.001 power.py:282(__new__)
  138/124    0.001    0.000    0.021    0.000 expr.py:1113(as_ordered_terms)
        3    0.000    0.000    0.021    0.007 lambdify.py:1206(_subexpr)
       10    0.000    0.000    0.021    0.002 add.py:455(_eval_power)
       30    0.000    0.000    0.020    0.001 add.py:458(<genexpr>)
        9    0.000    0.000    0.018    0.002 _print_helpers.py:27(__str__)
        9    0.000    0.000    0.018    0.002 printer.py:371(__call__)
        9    0.000    0.000    0.018    0.002 str.py:982(sstr)
        9    0.000    0.000    0.018    0.002 printer.py:290(doprint)
     64/1    0.001    0.000    0.018    0.018 str.py:263(_print_Mul)
    90/80    0.002    0.000    0.018    0.000 expr.py:1167(as_terms)
     25/1    0.000    0.000    0.018    0.018 exprtools.py:1253(<listcomp>)
     62/1    0.000    0.000    0.017    0.017 codeprinter.py:557(<listcomp>)
       25    0.000    0.000    0.017    0.001 exprtools.py:991(gcd_terms)
     64/2    0.000    0.000    0.017    0.009 str.py:366(<listcomp>)
     23/6    0.000    0.000    0.017    0.003 exprtools.py:1274(<listcomp>)
       25    0.000    0.000    0.017    0.001 exprtools.py:926(_gcd_terms)
  103/100    0.001    0.000    0.016    0.000 operations.py:52(__new__)
      112    0.000    0.000    0.016    0.000 printer.py:340(_as_ordered_terms)
     2401    0.001    0.000    0.014    0.000 sympify.py:503(_sympify)
3154/2830    0.004    0.000    0.013    0.000 sympify.py:102(sympify)
      7/1    0.000    0.000    0.013    0.013 simplify.py:349(signsimp)
       11    0.000    0.000    0.012    0.001 function.py:445(__new__)
    71/69    0.002    0.000    0.012    0.000 mul.py:197(flatten)
       11    0.000    0.000    0.012    0.001 function.py:294(__new__)
      432    0.001    0.000    0.012    0.000 exprtools.py:300(__init__)
    28/21    0.000    0.000    0.012    0.001 exprtools.py:1241(<listcomp>)
       21    0.000    0.000    0.012    0.001 basic.py:449(atoms)
       21    0.001    0.000    0.012    0.001 basic.py:523(<setcomp>)
       11    0.000    0.000    0.011    0.001 polynomials.py:126(eval)
      206    0.001    0.000    0.011    0.000 expr.py:353(__complex__)
     4093    0.001    0.000    0.011    0.000 traversal.py:163(__next__)
     1074    0.001    0.000    0.010    0.000 numbers.py:2238(__eq__)
      896    0.001    0.000    0.010    0.000 numbers.py:1867(__eq__)
     4851    0.006    0.000    0.010    0.000 random.py:293(shuffle)
    31/28    0.000    0.000    0.010    0.000 mul.py:1284(_eval_is_infinite)
    97/88    0.000    0.000    0.010    0.000 mul.py:1285(<genexpr>)
     4093    0.001    0.000    0.010    0.000 {built-in method builtins.next}
28807/4093    0.007    0.000    0.009    0.000 traversal.py:120(_preorder_traversal)
       54    0.000    0.000    0.008    0.000 exprtools.py:878(quo)
        3    0.000    0.000    0.008    0.003 symbol.py:130(uniquely_named_symbol)
        1    0.000    0.000    0.008    0.008 simplify.py:410(<listcomp>)
        7    0.000    0.000    0.008    0.001 cse_opts.py:10(sub_pre)
       54    0.000    0.000    0.007    0.000 exprtools.py:866(mul)
  229/213    0.000    0.000    0.007    0.000 {method 'sort' of 'list' objects}
      432    0.000    0.000    0.007    0.000 containers.py:332(<lambda>)
  481/394    0.000    0.000    0.007    0.000 logic.py:43(_fuzzy_group)
        8    0.000    0.000    0.007    0.001 add.py:693(_eval_is_zero)
  930/882    0.001    0.000    0.007    0.000 {built-in method builtins.sorted}
      432    0.002    0.000    0.007    0.000 containers.py:255(__new__)
  140/124    0.000    0.000    0.007    0.000 mul.py:2010(as_ordered_factors)
       16    0.000    0.000    0.006    0.000 power.py:1428(_eval_is_algebraic)
    57/12    0.000    0.000    0.006    0.000 expr.py:113(sort_key)
       16    0.000    0.000    0.006    0.000 power.py:1429(_is_one)
     1358    0.001    0.000    0.006    0.000 precedence.py:118(precedence)
  372/324    0.000    0.000    0.006    0.000 mul.py:2024(<lambda>)
       23    0.000    0.000    0.006    0.000 basic.py:1326(replace)
1935/1448    0.003    0.000    0.006    0.000 basic.py:350(__eq__)
      216    0.001    0.000    0.005    0.000 exprtools.py:821(__init__)
  323/195    0.001    0.000    0.005    0.000 sorting.py:10(default_sort_key)
30140/30084    0.005    0.000    0.005    0.000 {built-in method builtins.isinstance}
       25    0.000    0.000    0.005    0.000 numpy.py:209(_print_Pow)
       25    0.000    0.000    0.005    0.000 pycode.py:334(_hprint_Pow)
      206    0.001    0.000    0.005    0.000 expr.py:1904(as_real_imag)
       25    0.000    0.000    0.005    0.000 str.py:609(_print_Pow)
      316    0.000    0.000    0.005    0.000 mul.py:176(could_extract_minus_sign)
  1404/23    0.001    0.000    0.005    0.000 basic.py:1550(walk)
      493    0.001    0.000    0.004    0.000 mul.py:182(__neg__)
   575/17    0.000    0.000    0.004    0.000 basic.py:1556(<listcomp>)
      254    0.000    0.000    0.004    0.000 precedence.py:61(precedence_Mul)
        3    0.000    0.000    0.004    0.001 symbol.py:198(<listcomp>)
     5723    0.003    0.000    0.004    0.000 random.py:250(_randbelow_with_getrandbits)
      108    0.000    0.000    0.004    0.000 exprtools.py:464(mul)
        3    0.000    0.000    0.004    0.001 symbol.py:197(<listcomp>)
      113    0.000    0.000    0.004    0.000 mul.py:1521(_eval_pos_neg)
      206    0.001    0.000    0.004    0.000 evalf.py:1570(evalf)
       54    0.000    0.000    0.003    0.000 exprtools.py:497(normal)
       60    0.000    0.000    0.003    0.000 add.py:415(could_extract_minus_sign)
       60    0.000    0.000    0.003    0.000 add.py:20(_could_extract_minus_sign)
       18    0.000    0.000    0.003    0.000 power.py:619(_eval_is_zero)
  764/658    0.001    0.000    0.003    0.000 sorting.py:203(ordered)
      618    0.001    0.000    0.003    0.000 numbers.py:1369(__eq__)
     9905    0.002    0.000    0.003    0.000 {built-in method builtins.getattr}
     1404    0.000    0.000    0.003    0.000 basic.py:1571(rec_replace)
    57/38    0.000    0.000    0.003    0.000 add.py:1157(as_content_primitive)
      262    0.000    0.000    0.003    0.000 decorators.py:224(_func)
    88/54    0.000    0.000    0.003    0.000 mul.py:1984(as_content_primitive)
8659/8092    0.002    0.000    0.003    0.000 basic.py:153(__hash__)
 1147/813    0.000    0.000    0.002    0.000 {built-in method builtins.all}
      125    0.001    0.000    0.002    0.000 mul.py:1330(_eval_is_integer)
       41    0.000    0.000    0.002    0.000 mul.py:1590(_eval_is_even)
       82    0.000    0.000    0.002    0.000 power.py:594(_eval_is_extended_negative)
       56    0.000    0.000    0.002    0.000 mul.py:1503(_eval_is_extended_positive)
       41    0.000    0.000    0.002    0.000 radsimp.py:1053(fraction)
      262    0.000    0.000    0.002    0.000 decorators.py:99(binary_op_wrapper)
      893    0.001    0.000    0.002    0.000 operations.py:108(_from_args)
       47    0.000    0.000    0.002    0.000 power.py:559(_eval_is_negative)
    57/38    0.000    0.000    0.002    0.000 add.py:1177(<listcomp>)
    14928    0.002    0.000    0.002    0.000 basic.py:750(args)
  425/298    0.000    0.000    0.002    0.000 decorators.py:58(__sympifyit_wrapper)
    46/24    0.000    0.000    0.002    0.000 expr.py:142(<listcomp>)
       16    0.000    0.000    0.002    0.000 add.py:750(_eval_is_extended_positive)
       16    0.000    0.000    0.002    0.000 str.py:159(_print_Function)
       16    0.000    0.000    0.002    0.000 pycode.py:66(_print_known_func)
      579    0.001    0.000    0.002    0.000 numbers.py:2200(__mul__)
       16    0.000    0.000    0.002    0.000 str.py:39(stringify)
  330/324    0.000    0.000    0.002    0.000 {method 'join' of 'str' objects}
       16    0.000    0.000    0.002    0.000 str.py:40(<listcomp>)
      142    0.001    0.000    0.002    0.000 mul.py:467(_gather)
      434    0.000    0.000    0.002    0.000 numbers.py:678(__float__)
  854/138    0.000    0.000    0.002    0.000 {built-in method builtins.sum}
       15    0.000    0.000    0.002    0.000 add.py:834(_eval_is_extended_negative)
       29    0.000    0.000    0.002    0.000 exprtools.py:889(gcd)
       64    0.000    0.000    0.002    0.000 pycode.py:69(<lambda>)
    402/1    0.001    0.000    0.002    0.002 lambdify.py:1275(_imp_namespace)
       57    0.000    0.000    0.001    0.000 mul.py:1556(_eval_is_extended_negative)
     1475    0.001    0.000    0.001    0.000 numbers.py:808(__hash__)
    15529    0.001    0.000    0.001    0.000 {method 'get' of 'dict' objects}
     1033    0.001    0.000    0.001    0.000 numbers.py:1970(__hash__)
      194    0.000    0.000    0.001    0.000 mul.py:1292(_eval_is_rational)
      415    0.000    0.000    0.001    0.000 simplify.py:405(<lambda>)
      110    0.000    0.000    0.001    0.000 numbers.py:1954(__lt__)
       58    0.000    0.000    0.001    0.000 exprtools.py:729(gcd)
       79    0.000    0.000    0.001    0.000 exprtools.py:863(as_expr)
    64/59    0.000    0.000    0.001    0.000 str.py:367(<listcomp>)
      188    0.000    0.000    0.001    0.000 containers.py:52(__new__)
       17    0.000    0.000    0.001    0.000 mul.py:1414(_eval_is_extended_real)
  201/126    0.000    0.000    0.001    0.000 basic.py:204(compare)
       17    0.000    0.000    0.001    0.000 mul.py:1417(_eval_real_imag)
      156    0.000    0.000    0.001    0.000 expr.py:215(__mul__)
     1634    0.001    0.000    0.001    0.000 basic.py:126(__new__)
      110    0.000    0.000    0.001    0.000 numbers.py:1917(_Rrel)
      432    0.000    0.000    0.001    0.000 containers.py:259(<listcomp>)
    84/78    0.000    0.000    0.001    0.000 sorting.py:180(_nodes)
       71    0.000    0.000    0.001    0.000 mul.py:33(_mulsort)
        7    0.000    0.000    0.001    0.000 cse_opts.py:41(sub_post)
      420    0.000    0.000    0.001    0.000 mul.py:2060(_keep_coeff)
        7    0.000    0.000    0.001    0.000 cse_opts.py:14(<listcomp>)
    82/64    0.000    0.000    0.001    0.000 power.py:1853(as_content_primitive)
  578/251    0.001    0.000    0.001    0.000 expr.py:408(is_number)
      122    0.001    0.000    0.001    0.000 basic.py:1920(_exec_constructor_postprocessors)
       65    0.000    0.000    0.001    0.000 mul.py:1301(_eval_is_algebraic)
       25    0.000    0.000    0.001    0.000 exprtools.py:977(<listcomp>)
     4901    0.001    0.000    0.001    0.000 {method 'update' of 'set' objects}
      140    0.000    0.000    0.001    0.000 numbers.py:1734(__mul__)
     1491    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:389(parent)
     9285    0.001    0.000    0.001    0.000 {built-in method builtins.hasattr}
      434    0.001    0.000    0.001    0.000 numbers.py:149(mpf_norm)
      199    0.000    0.000    0.001    0.000 mul.py:1302(<genexpr>)
    64/59    0.000    0.000    0.001    0.000 codeprinter.py:558(<listcomp>)
       43    0.000    0.000    0.001    0.000 basic.py:1738(doit)
       31    0.000    0.000    0.001    0.000 add.py:184(flatten)
      206    0.000    0.000    0.001    0.000 numbers.py:1178(_new)
      594    0.000    0.000    0.001    0.000 mul.py:1293(<genexpr>)
        7    0.000    0.000    0.001    0.000 codeprinter.py:114(_handle_UnevaluatedExpr)
      396    0.001    0.000    0.001    0.000 mul.py:826(as_coeff_Mul)
       34    0.000    0.000    0.001    0.000 power.py:740(_eval_is_imaginary)
      412    0.000    0.000    0.001    0.000 numbers.py:1463(__hash__)
       80    0.000    0.000    0.001    0.000 mul.py:1559(_eval_is_odd)
       48    0.000    0.000    0.001    0.000 mul.py:1268(_eval_is_complex)
       23    0.000    0.000    0.001    0.000 add.py:635(<lambda>)
2833/2466    0.001    0.000    0.001    0.000 {built-in method builtins.hash}
       50    0.000    0.000    0.001    0.000 mul.py:1489(_eval_is_irrational)
      206    0.001    0.000    0.001    0.000 evalf.py:1462(evalf)
      564    0.000    0.000    0.001    0.000 containers.py:54(<genexpr>)
     2207    0.001    0.000    0.001    0.000 numbers.py:2284(__hash__)
      104    0.000    0.000    0.001    0.000 add.py:23(<genexpr>)
       23    0.000    0.000    0.001    0.000 add.py:645(<lambda>)
       69    0.000    0.000    0.001    0.000 add.py:636(<genexpr>)
       47    0.000    0.000    0.001    0.000 add.py:1254(__neg__)
10645/10642    0.001    0.000    0.001    0.000 {built-in method builtins.len}
       15    0.000    0.000    0.001    0.000 power.py:643(_eval_is_integer)
       61    0.000    0.000    0.001    0.000 mul.py:1277(_eval_is_finite)
       69    0.000    0.000    0.001    0.000 add.py:646(<genexpr>)
      148    0.000    0.000    0.001    0.000 mul.py:1269(<genexpr>)
      432    0.000    0.000    0.001    0.000 exprtools.py:381(<listcomp>)
 1583/632    0.000    0.000    0.001    0.000 expr.py:458(<genexpr>)
      127    0.000    0.000    0.001    0.000 numbers.py:738(__mul__)
   791/78    0.000    0.000    0.001    0.000 sorting.py:169(_node_count)
      206    0.000    0.000    0.001    0.000 expr.py:1064(key)
       23    0.000    0.000    0.001    0.000 add.py:730(_eval_is_odd)
       63    0.000    0.000    0.001    0.000 add.py:1077(primitive)
        1    0.001    0.001    0.001    0.001 {built-in method builtins.compile}
      640    0.000    0.000    0.001    0.000 iterables.py:2898(iterable)
     9026    0.001    0.000    0.001    0.000 {method 'getrandbits' of '_random.Random' objects}
       23    0.000    0.000    0.001    0.000 add.py:731(<listcomp>)
   303/18    0.000    0.000    0.001    0.000 basic.py:528(free_symbols)
        1    0.001    0.001    0.001    0.001 <lambdifygenerated-5>:1(_lambdifygenerated)
       12    0.000    0.000    0.001    0.000 add.py:647(<lambda>)
      376    0.000    0.000    0.001    0.000 core.py:73(__cmp__)
      228    0.000    0.000    0.001    0.000 numbers.py:1220(_as_mpf_val)
      124    0.000    0.000    0.001    0.000 numbers.py:2248(__gt__)
       41    0.000    0.000    0.001    0.000 mul.py:1310(_eval_is_zero)
       36    0.000    0.000    0.001    0.000 add.py:648(<genexpr>)
       10    0.000    0.000    0.001    0.000 add.py:639(<lambda>)
   648/63    0.000    0.000    0.001    0.000 basic.py:544(<genexpr>)
     5846    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}
        2    0.000    0.000    0.001    0.000 textwrap.py:342(wrap)
       15    0.000    0.000    0.001    0.000 sets.py:1921(__new__)
       63    0.000    0.000    0.001    0.000 exprtools.py:1255(<genexpr>)
       30    0.000    0.000    0.001    0.000 add.py:640(<genexpr>)
      293    0.000    0.000    0.001    0.000 exprtools.py:216(decompose_power)
       23    0.000    0.000    0.001    0.000 add.py:737(_eval_is_irrational)
        1    0.000    0.000    0.001    0.001 textwrap.py:368(wrap)
       70    0.000    0.000    0.001    0.000 numbers.py:2257(__lt__)
      207    0.000    0.000    0.001    0.000 simplify.py:416(<lambda>)
       18    0.000    0.000    0.001    0.000 power.py:798(_eval_is_finite)
      187    0.000    0.000    0.001    0.000 mul.py:1278(<genexpr>)
       23    0.000    0.000    0.001    0.000 add.py:651(<lambda>)
        9    0.000    0.000    0.001    0.000 power.py:1401(_eval_is_rational)
        9    0.000    0.000    0.001    0.000 add.py:643(<lambda>)
       38    0.000    0.000    0.001    0.000 expr.py:2196(extract_multiplicatively)
      183    0.000    0.000    0.001    0.000 exprtools.py:438(as_expr)
      537    0.000    0.000    0.001    0.000 operations.py:429(make_args)
       78    0.000    0.000    0.000    0.000 sympify.py:68(_is_numpy_instance)
       27    0.000    0.000    0.000    0.000 add.py:644(<genexpr>)
       19    0.000    0.000    0.000    0.000 power.py:732(_eval_is_complex)
       43    0.000    0.000    0.000    0.000 basic.py:1758(<listcomp>)
       69    0.000    0.000    0.000    0.000 add.py:652(<genexpr>)
      202    0.000    0.000    0.000    0.000 operations.py:125(_new_rawargs)
      188    0.000    0.000    0.000    0.000 core.py:101(__gt__)
       11    0.000    0.000    0.000    0.000 add.py:649(<lambda>)
      281    0.000    0.000    0.000    0.000 libmpf.py:330(from_int)
      155    0.000    0.000    0.000    0.000 mul.py:478(<listcomp>)
       21    0.000    0.000    0.000    0.000 mul.py:1459(_eval_is_imaginary)
       18    0.000    0.000    0.000    0.000 add.py:819(_eval_is_extended_nonpositive)
     4636    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
     3147    0.000    0.000    0.000    0.000 expr.py:149(_hashable_content)
       49    0.000    0.000    0.000    0.000 power.py:555(_eval_is_even)
       33    0.000    0.000    0.000    0.000 add.py:650(<genexpr>)
       54    0.000    0.000    0.000    0.000 exprtools.py:875(inv)
      140    0.000    0.000    0.000    0.000 expr.py:1280(args_cnc)
      206    0.000    0.000    0.000    0.000 libmpf.py:64(dps_to_prec)
      324    0.000    0.000    0.000    0.000 basic.py:331(_do_eq_sympify)
       38    0.000    0.000    0.000    0.000 power.py:737(<genexpr>)
      206    0.000    0.000    0.000    0.000 numbers.py:2078(_as_mpf_val)
       67    0.000    0.000    0.000    0.000 mul.py:1460(<genexpr>)
       90    0.000    0.000    0.000    0.000 expr.py:1046(_parse_order)
     5723    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
      152    0.000    0.000    0.000    0.000 basic.py:392(__ne__)
      188    0.000    0.000    0.000    0.000 core.py:96(__lt__)
     1634    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x00007FFE7E65CC90}
       16    0.000    0.000    0.000    0.000 add.py:767(<listcomp>)
      699    0.000    0.000    0.000    0.000 libmpf.py:153(_normalize)
        2    0.000    0.000    0.000    0.000 textwrap.py:233(_wrap_chunks)
     1491    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      265    0.000    0.000    0.000    0.000 libmpf.py:291(from_man_exp)
       49    0.000    0.000    0.000    0.000 power.py:789(_eval_is_odd)
      206    0.000    0.000    0.000    0.000 expr.py:1061(neg)
      259    0.000    0.000    0.000    0.000 numbers.py:1692(__neg__)
       15    0.000    0.000    0.000    0.000 add.py:851(<listcomp>)
       16    0.000    0.000    0.000    0.000 expr.py:205(__sub__)
      466    0.000    0.000    0.000    0.000 power.py:962(as_base_exp)
      510    0.000    0.000    0.000    0.000 expr.py:1133(<lambda>)
       65    0.000    0.000    0.000    0.000 logic.py:115(fuzzy_and)
      434    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
       49    0.000    0.000    0.000    0.000 power.py:814(_eval_is_prime)
       47    0.000    0.000    0.000    0.000 add.py:1257(<listcomp>)
      165    0.000    0.000    0.000    0.000 containers.py:108(__hash__)
     2603    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 textwrap.py:336(_split_chunks)
      235    0.000    0.000    0.000    0.000 numbers.py:2130(__neg__)
       60    0.000    0.000    0.000    0.000 expr.py:252(__truediv__)
        9    0.000    0.000    0.000    0.000 symbol.py:426(__new__)
      338    0.000    0.000    0.000    0.000 basic.py:1934(<genexpr>)
       18    0.000    0.000    0.000    0.000 add.py:36(_addsort)
        2    0.000    0.000    0.000    0.000 textwrap.py:160(_split)
      404    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
       73    0.000    0.000    0.000    0.000 add.py:441(as_coeff_Add)
       60    0.000    0.000    0.000    0.000 expr.py:851(_eval_is_extended_positive_negative)
       80    0.000    0.000    0.000    0.000 mul.py:1603(_eval_is_composite)
       30    0.000    0.000    0.000    0.000 expr.py:230(__pow__)
     1481    0.000    0.000    0.000    0.000 power.py:387(base)
       21    0.000    0.000    0.000    0.000 add.py:656(_eval_is_infinite)
       75    0.000    0.000    0.000    0.000 numbers.py:1748(__truediv__)
      126    0.000    0.000    0.000    0.000 {built-in method _functools.reduce}
        2    0.000    0.000    0.000    0.000 {method 'split' of 're.Pattern' objects}
       12    0.000    0.000    0.000    0.000 symbol.py:298(__xnew__)
      210    0.000    0.000    0.000    0.000 numbers.py:2014(as_content_primitive)
     1390    0.000    0.000    0.000    0.000 inspect.py:487(getmro)
       37    0.000    0.000    0.000    0.000 power.py:664(_eval_is_extended_real)
      313    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
      411    0.000    0.000    0.000    0.000 iterables.py:2956(is_sequence)
       82    0.000    0.000    0.000    0.000 pycode.py:564(_print_Symbol)
       47    0.000    0.000    0.000    0.000 facts.py:499(deduce_all_facts)
      324    0.000    0.000    0.000    0.000 exprtools.py:481(<genexpr>)
    28/14    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       32    0.000    0.000    0.000    0.000 power.py:565(_eval_is_extended_positive)
     1757    0.000    0.000    0.000    0.000 core.py:71(<lambda>)
       14    0.000    0.000    0.000    0.000 numbers.py:2139(__divmod__)
      618    0.000    0.000    0.000    0.000 {built-in method builtins.max}
       51    0.000    0.000    0.000    0.000 assumptions.py:449(__init__)
        3    0.000    0.000    0.000    0.000 basic.py:802(subs)
       20    0.000    0.000    0.000    0.000 add.py:669(_eval_is_imaginary)
      206    0.000    0.000    0.000    0.000 expr.py:1062(<listcomp>)
        8    0.000    0.000    0.000    0.000 {built-in method numpy.array}
      176    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
       59    0.000    0.000    0.000    0.000 evalf.py:491(evalf_integer)
       17    0.000    0.000    0.000    0.000 add.py:804(_eval_is_extended_nonnegative)
      267    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
     1149    0.000    0.000    0.000    0.000 basic.py:724(func)
        4    0.000    0.000    0.000    0.000 function.py:503(class_key)
       27    0.000    0.000    0.000    0.000 mul.py:1237(as_base_exp)
      398    0.000    0.000    0.000    0.000 operations.py:63(<genexpr>)
      143    0.000    0.000    0.000    0.000 str.py:678(_print_Integer)
      159    0.000    0.000    0.000    0.000 numbers.py:419(ilcm)
      212    0.000    0.000    0.000    0.000 containers.py:70(__iter__)
        3    0.000    0.000    0.000    0.000 function.py:1670(free_symbols)
      855    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
       30    0.000    0.000    0.000    0.000 expr.py:893(_eval_is_extended_negative)
       49    0.000    0.000    0.000    0.000 power.py:821(_eval_is_composite)
       56    0.000    0.000    0.000    0.000 exponential.py:212(__instancecheck__)
      408    0.000    0.000    0.000    0.000 basic.py:1498(<lambda>)
        4    0.000    0.000    0.000    0.000 function.py:226(nargs)
       29    0.000    0.000    0.000    0.000 numbers.py:1993(gcd)
      3/2    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
      151    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
      338    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
      374    0.000    0.000    0.000    0.000 function.py:1468(<lambda>)
       74    0.000    0.000    0.000    0.000 pycode.py:558(_print_Half)
       30    0.000    0.000    0.000    0.000 expr.py:890(_eval_is_extended_positive)
      104    0.000    0.000    0.000    0.000 pycode.py:555(_print_Rational)
       90    0.000    0.000    0.000    0.000 orderings.py:200(monomial_key)
      678    0.000    0.000    0.000    0.000 power.py:391(exp)
       36    0.000    0.000    0.000    0.000 expr.py:184(__neg__)
  136/129    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
      206    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(meshgrid)
      216    0.000    0.000    0.000    0.000 exprtools.py:419(is_zero)
      594    0.000    0.000    0.000    0.000 containers.py:258(<genexpr>)
      166    0.000    0.000    0.000    0.000 str.py:272(<genexpr>)
       54    0.000    0.000    0.000    0.000 numbers.py:1763(__rtruediv__)
       85    0.000    0.000    0.000    0.000 mul.py:1469(_eval_herm_antiherm)
       64    0.000    0.000    0.000    0.000 mul.py:1463(_eval_is_hermitian)
       17    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
      234    0.000    0.000    0.000    0.000 sympify.py:74(<genexpr>)
        1    0.000    0.000    0.000    0.000 function_base.py:4805(meshgrid)
      252    0.000    0.000    0.000    0.000 sympify.py:18(__init__)
      275    0.000    0.000    0.000    0.000 facts.py:482(_tell)
       82    0.000    0.000    0.000    0.000 codeprinter.py:409(_print_Symbol)
       24    0.000    0.000    0.000    0.000 pycode.py:122(_module_format)
       15    0.000    0.000    0.000    0.000 basic.py:556(as_dummy)
       61    0.000    0.000    0.000    0.000 numbers.py:2180(__sub__)
       11    0.000    0.000    0.000    0.000 function.py:471(<listcomp>)
        3    0.000    0.000    0.000    0.000 symbol.py:64(_symbol)
       39    0.000    0.000    0.000    0.000 assumptions.py:461(copy)
       11    0.000    0.000    0.000    0.000 function.py:613(_eval_is_commutative)
      228    0.000    0.000    0.000    0.000 {built-in method math.ldexp}
        3    0.000    0.000    0.000    0.000 symbol.py:285(__new__)
      242    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      240    0.000    0.000    0.000    0.000 printer.py:283(order)
       14    0.000    0.000    0.000    0.000 numbers.py:1914(__ne__)
       64    0.000    0.000    0.000    0.000 str.py:713(_print_Rational)
        3    0.000    0.000    0.000    0.000 sorting.py:142(<listcomp>)
       26    0.000    0.000    0.000    0.000 numbers.py:2211(__rmul__)
      158    0.000    0.000    0.000    0.000 {method 'copy' of 'collections.defaultdict' objects}
       44    0.000    0.000    0.000    0.000 function.py:479(_should_evalf)
       44    0.000    0.000    0.000    0.000 numbers.py:2011(as_numer_denom)
      228    0.000    0.000    0.000    0.000 logic.py:92(fuzzy_bool)
      217    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        6    0.000    0.000    0.000    0.000 str.py:333(apow)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(broadcast_arrays)
       30    0.000    0.000    0.000    0.000 expr.py:225(_pow)
      390    0.000    0.000    0.000    0.000 numbers.py:2034(as_coeff_Mul)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:479(broadcast_arrays)
       22    0.000    0.000    0.000    0.000 numbers.py:2159(__add__)
        3    0.000    0.000    0.000    0.000 basic.py:2016(_aresame)
      214    0.000    0.000    0.000    0.000 operations.py:121(<genexpr>)
       50    0.000    0.000    0.000    0.000 numbers.py:625(could_extract_minus_sign)
      500    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       19    0.000    0.000    0.000    0.000 add.py:637(<lambda>)
       20    0.000    0.000    0.000    0.000 add.py:641(<lambda>)
       25    0.000    0.000    0.000    0.000 exprtools.py:1052(mask)
      275    0.000    0.000    0.000    0.000 expr.py:2006(as_base_exp)
       45    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        3    0.000    0.000    0.000    0.000 symbol.py:323(__xnew_cached_)
       11    0.000    0.000    0.000    0.000 printer.py:258(__init__)
      296    0.000    0.000    0.000    0.000 expr.py:1148(<genexpr>)
      103    0.000    0.000    0.000    0.000 operations.py:91(<listcomp>)
        1    0.000    0.000    0.000    0.000 textwrap.py:381(fill)
       16    0.000    0.000    0.000    0.000 mul.py:1265(<lambda>)
      230    0.000    0.000    0.000    0.000 precedence.py:73(precedence_Integer)
      444    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      208    0.000    0.000    0.000    0.000 precedence.py:67(precedence_Rational)
      187    0.000    0.000    0.000    0.000 mul.py:1280(<genexpr>)
       30    0.000    0.000    0.000    0.000 numbers.py:3414(__hash__)
      191    0.000    0.000    0.000    0.000 boolalg.py:460(<lambda>)
      306    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
        1    0.000    0.000    0.000    0.000 stride_tricks.py:545(<listcomp>)
        7    0.000    0.000    0.000    0.000 evalf.py:152(pure_complex)
      206    0.000    0.000    0.000    0.000 numbers.py:1199(_hashable_content)
      338    0.000    0.000    0.000    0.000 {built-in method from_iterable}
       36    0.000    0.000    0.000    0.000 numbers.py:2245(__ne__)
       64    0.000    0.000    0.000    0.000 printer.py:324(<genexpr>)
        3    0.000    0.000    0.000    0.000 stride_tricks.py:339(_broadcast_to)
       12    0.000    0.000    0.000    0.000 symbol.py:254(_sanitize)
        6    0.000    0.000    0.000    0.000 symbol.py:340(_hashable_content)
        9    0.000    0.000    0.000    0.000 sorting.py:196(<genexpr>)
        1    0.000    0.000    0.000    0.000 textwrap.py:356(fill)
      309    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 evalf.py:487(evalf_rational)
       45    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
      166    0.000    0.000    0.000    0.000 str.py:847(_print_Symbol)
        1    0.000    0.000    0.000    0.000 numpy.py:317(__init__)
       10    0.000    0.000    0.000    0.000 add.py:493(<listcomp>)
        1    0.000    0.000    0.000    0.000 numpy.py:45(__init__)
        8    0.000    0.000    0.000    0.000 add.py:653(<lambda>)
       63    0.000    0.000    0.000    0.000 symbol.py:378(free_symbols)
        8    0.000    0.000    0.000    0.000 libmpf.py:491(from_rational)
       21    0.000    0.000    0.000    0.000 mul.py:1466(_eval_is_antihermitian)
       26    0.000    0.000    0.000    0.000 mul.py:813(as_coeff_mul)
        3    0.000    0.000    0.000    0.000 symbol.py:452(_hashable_content)
       34    0.000    0.000    0.000    0.000 traversal.py:116(__init__)
       15    0.000    0.000    0.000    0.000 sets.py:90(_infimum_key)
        2    0.000    0.000    0.000    0.000 pycode.py:99(__init__)
       31    0.000    0.000    0.000    0.000 exprtools.py:31(_monotonic_sign)
       90    0.000    0.000    0.000    0.000 expr.py:1165(<listcomp>)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(sum)
      145    0.000    0.000    0.000    0.000 numbers.py:3196(__neg__)
      206    0.000    0.000    0.000    0.000 expr.py:1068(<listcomp>)
        6    0.000    0.000    0.000    0.000 symbol.py:447(sort_key)
       55    0.000    0.000    0.000    0.000 function.py:614(<genexpr>)
       96    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        2    0.000    0.000    0.000    0.000 textwrap.py:179(<listcomp>)
        3    0.000    0.000    0.000    0.000 function.py:1488(_sort_variable_count)
       14    0.000    0.000    0.000    0.000 numbers.py:2220(__mod__)
        1    0.000    0.000    0.000    0.000 lambdify.py:1077(__init__)
      206    0.000    0.000    0.000    0.000 orderings.py:43(__call__)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2160(sum)
       85    0.000    0.000    0.000    0.000 numbers.py:2133(__abs__)
       87    0.000    0.000    0.000    0.000 expr.py:3519(as_coeff_Mul)
       63    0.000    0.000    0.000    0.000 add.py:1123(<listcomp>)
      105    0.000    0.000    0.000    0.000 expr.py:2107(as_content_primitive)
        7    0.000    0.000    0.000    0.000 numbers.py:1846(__abs__)
       51    0.000    0.000    0.000    0.000 facts.py:479(__init__)
       94    0.000    0.000    0.000    0.000 numbers.py:3140(__neg__)
      246    0.000    0.000    0.000    0.000 basic.py:1992(doit)
       57    0.000    0.000    0.000    0.000 add.py:638(<genexpr>)
       78    0.000    0.000    0.000    0.000 function.py:643(as_base_exp)
       40    0.000    0.000    0.000    0.000 add.py:642(<genexpr>)
        6    0.000    0.000    0.000    0.000 symbol.py:352(assumptions0)
       83    0.000    0.000    0.000    0.000 function.py:372(func)
       11    0.000    0.000    0.000    0.000 printer.py:250(_get_initial_settings)
        2    0.000    0.000    0.000    0.000 textwrap.py:146(_munge_whitespace)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:69(_wrapreduction)
       32    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
       81    0.000    0.000    0.000    0.000 evalf.py:1426(<lambda>)
        3    0.000    0.000    0.000    0.000 function.py:1897(_dispatch_eval_derivative_n_times)
       78    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       47    0.000    0.000    0.000    0.000 numbers.py:814(as_coeff_mul)
       63    0.000    0.000    0.000    0.000 add.py:1124(<listcomp>)
        7    0.000    0.000    0.000    0.000 codeprinter.py:134(_handle_assign_to)
        8    0.000    0.000    0.000    0.000 libmpf.py:950(mpf_div)
       25    0.000    0.000    0.000    0.000 exprtools.py:1055(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       21    0.000    0.000    0.000    0.000 basic.py:520(<listcomp>)
       52    0.000    0.000    0.000    0.000 mul.py:1265(<genexpr>)
      107    0.000    0.000    0.000    0.000 boolalg.py:420(__bool__)
        1    0.000    0.000    0.000    0.000 function_base.py:4949(<listcomp>)
        2    0.000    0.000    0.000    0.000 codeprinter.py:108(__init__)
       71    0.000    0.000    0.000    0.000 mul.py:555(<listcomp>)
        1    0.000    0.000    0.000    0.000 function_base.py:4936(<listcomp>)
        3    0.000    0.000    0.000    0.000 basic.py:944(<listcomp>)
       71    0.000    0.000    0.000    0.000 mul.py:653(<listcomp>)
       32    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        3    0.000    0.000    0.000    0.000 symbol.py:357(sort_key)
        6    0.000    0.000    0.000    0.000 numbers.py:2191(__rsub__)
       81    0.000    0.000    0.000    0.000 boolalg.py:345(__bool__)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:415(_broadcast_shape)
        3    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       41    0.000    0.000    0.000    0.000 evalf.py:1425(<lambda>)
        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       45    0.000    0.000    0.000    0.000 add.py:214(<genexpr>)
       72    0.000    0.000    0.000    0.000 numbers.py:3104(__bool__)
       24    0.000    0.000    0.000    0.000 add.py:653(<genexpr>)
        6    0.000    0.000    0.000    0.000 containers.py:64(__len__)
        6    0.000    0.000    0.000    0.000 containers.py:58(__getitem__)
       40    0.000    0.000    0.000    0.000 str.py:274(<genexpr>)
        2    0.000    0.000    0.000    0.000 textwrap.py:115(__init__)
       12    0.000    0.000    0.000    0.000 symbol.py:201(<genexpr>)
        1    0.000    0.000    0.000    0.000 iterables.py:58(flatten)
       34    0.000    0.000    0.000    0.000 numbers.py:3192(__abs__)
        2    0.000    0.000    0.000    0.000 {method 'translate' of 'str' objects}
        3    0.000    0.000    0.000    0.000 numbers.py:2171(__radd__)
        8    0.000    0.000    0.000    0.000 {method 'splitlines' of 'str' objects}
        6    0.000    0.000    0.000    0.000 function.py:1911(<genexpr>)
        7    0.000    0.000    0.000    0.000 codeprinter.py:37(_convert_python_lists)
       11    0.000    0.000    0.000    0.000 function.py:265(_valid_nargs)
       25    0.000    0.000    0.000    0.000 exprtools.py:945(<listcomp>)
        3    0.000    0.000    0.000    0.000 function.py:1353(<listcomp>)
       32    0.000    0.000    0.000    0.000 numbers.py:3714(__eq__)
       26    0.000    0.000    0.000    0.000 add.py:397(class_key)
       17    0.000    0.000    0.000    0.000 evalf.py:1430(<lambda>)
        6    0.000    0.000    0.000    0.000 add.py:1182(<genexpr>)
       30    0.000    0.000    0.000    0.000 add.py:494(<genexpr>)
        3    0.000    0.000    0.000    0.000 lambdify.py:1158(_is_safe_ident)
       20    0.000    0.000    0.000    0.000 basic.py:1995(class_key)
        3    0.000    0.000    0.000    0.000 lambdify.py:921(_get_namespace)
       40    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       34    0.000    0.000    0.000    0.000 traversal.py:166(__iter__)
       40    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        5    0.000    0.000    0.000    0.000 exprtools.py:27(_isnumber)
        1    0.000    0.000    0.000    0.000 lambdify.py:1154(<listcomp>)
        3    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.000    0.000 symbol.py:354(<dictcomp>)
        4    0.000    0.000    0.000    0.000 lambdify.py:913(_module_present)
        1    0.000    0.000    0.000    0.000 inspect.py:1520(currentframe)
       24    0.000    0.000    0.000    0.000 expr.py:2458(could_extract_minus_sign)
       25    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 numbers.py:1683(_hashable_content)
        3    0.000    0.000    0.000    0.000 iterables.py:105(<lambda>)
       16    0.000    0.000    0.000    0.000 mul.py:747(class_key)
        6    0.000    0.000    0.000    0.000 function.py:1662(variable_count)
        2    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
        8    0.000    0.000    0.000    0.000 libmpf.py:208(_normalize1)
        3    0.000    0.000    0.000    0.000 function_base.py:346(iterable)
       15    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       12    0.000    0.000    0.000    0.000 stride_tricks.py:344(<genexpr>)
        6    0.000    0.000    0.000    0.000 function.py:1637(expr)
        4    0.000    0.000    0.000    0.000 lambdify.py:896(<genexpr>)
        5    0.000    0.000    0.000    0.000 expr.py:2010(as_coeff_mul)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:537(<listcomp>)
        2    0.000    0.000    0.000    0.000 lambdify.py:119(_import)
        3    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
        4    0.000    0.000    0.000    0.000 lambdify.py:1179(<genexpr>)
        1    0.000    0.000    0.000    0.000 inspect.py:158(isfunction)
        6    0.000    0.000    0.000    0.000 symbol.py:240(_diff_wrt)
        2    0.000    0.000    0.000    0.000 stride_tricks.py:541(<genexpr>)
        1    0.000    0.000    0.000    0.000 inspect.py:72(isclass)
        3    0.000    0.000    0.000    0.000 stride_tricks.py:25(_maybe_view_as_subclass)
        6    0.000    0.000    0.000    0.000 expr.py:977(_eval_power)
        7    0.000    0.000    0.000    0.000 pycode.py:132(_format_code)
        4    0.000    0.000    0.000    0.000 expr.py:1075(as_ordered_factors)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:70(<dictcomp>)
        2    0.000    0.000    0.000    0.000 numbers.py:3136(__abs__)
        2    0.000    0.000    0.000    0.000 boolalg.py:426(__eq__)
        1    0.000    0.000    0.000    0.000 <lambdifygenerated-5>:1(<module>)
        2    0.000    0.000    0.000    0.000 numbers.py:2115(__int__)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 numbers.py:3250(__abs__)
        2    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
        1    0.000    0.000    0.000    0.000 boolalg.py:351(__eq__)
        1    0.000    0.000    0.000    0.000 function_base.py:4800(_meshgrid_dispatcher)
        3    0.000    0.000    0.000    0.000 {built-in method numpy.asanyarray}
        1    0.000    0.000    0.000    0.000 fromnumeric.py:2155(_sum_dispatcher)
        1    0.000    0.000    0.000    0.000 stride_tricks.py:475(_broadcast_arrays_dispatcher)
        1    0.000    0.000    0.000    0.000 lambdify.py:1227(_print_funcargwrapping)