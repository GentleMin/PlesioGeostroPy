         2863800978 function calls (2764925541 primitive calls) in 1715.237 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     44/1    0.002    0.000 1715.443 1715.443 {built-in method builtins.exec}
        1    0.000    0.000 1715.442 1715.442 <string>:2(<module>)
        1    0.000    0.000 1715.435 1715.435 eigen.py:495(compute_matrix_numerics)
        2    0.000    0.000 1714.968  857.484 matrices.py:628(expand)
        2    0.005    0.003 1714.968  857.484 matrices.py:644(_expand_dense)
        5    0.043    0.009 1713.427  342.685 matrices.py:300(gramian)
        5    0.777    0.155 1710.769  342.154 matrices.py:375(_quad_sympy_outer)
32361916/7272421   51.109    0.000 1295.426    0.000 cache.py:67(wrapper)
    50195    1.148    0.000  940.813    0.019 basic.py:802(subs)
5859356/40479    9.163    0.000  936.469    0.023 basic.py:1002(_subs)
2272595/33185   18.439    0.000  934.063    0.028 basic.py:1074(fallback)
14602381/6270085   11.074    0.000  894.359    0.000 assumptions.py:477(getit)
2908546/2417028   16.838    0.000  718.835    0.000 assumptions.py:489(_ask)
3279358/3031880   29.660    0.000  701.630    0.000 operations.py:52(__new__)
      255    0.084    0.000  676.914    2.655 matrices.py:398(<listcomp>)
140772/520    0.278    0.000  621.577    1.195 operations.py:453(doit)
140772/520    0.211    0.000  621.438    1.195 operations.py:455(<listcomp>)
      624    0.021    0.000  619.097    0.992 function.py:2230(doit)
91417/1710    1.272    0.000  600.759    0.351 function.py:1237(__new__)
90559/852    0.582    0.000  600.305    0.705 function.py:1906(_derivative_dispatch)
90349/642    0.137    0.000  600.189    0.935 expr.py:3553(diff)
2742249/2734435   55.264    0.000  560.745    0.000 mul.py:197(flatten)
32824/20852    0.273    0.000  460.657    0.022 exprtools.py:31(_monotonic_sign)
  5382799  186.139    0.000  412.903    0.000 facts.py:499(deduce_all_facts)
     6618    0.027    0.000  374.511    0.057 polytools.py:6575(real_roots)
10262/7143    0.138    0.000  307.518    0.043 add.py:834(_eval_is_extended_negative)
     6623    0.019    0.000  295.245    0.045 polytools.py:3590(real_roots)
     6623    0.021    0.000  295.226    0.045 rootoftools.py:409(real_roots)
     6623    0.164    0.000  295.206    0.045 rootoftools.py:757(_get_roots)
     6623    0.080    0.000  279.391    0.042 rootoftools.py:670(_real_roots)
10019/7209    0.136    0.000  266.735    0.037 add.py:750(_eval_is_extended_positive)
58772/31665    0.120    0.000  258.248    0.008 mul.py:1310(_eval_is_zero)
      255    0.082    0.000  243.355    0.954 matrices.py:390(<listcomp>)
 12990439   88.398    0.000  208.545    0.000 basic.py:2016(_aresame)
162942337/162166834   44.799    0.000  201.041    0.000 {built-in method builtins.all}
  2665551    2.162    0.000  183.112    0.000 assumptions.py:461(copy)
     6623    0.013    0.000  181.030    0.027 rootoftools.py:110(_pure_factors)
  2673429    6.426    0.000  181.026    0.000 assumptions.py:449(__init__)
     6757    0.018    0.000  180.734    0.027 polytools.py:3331(factor_list)
     6757    0.015    0.000  180.669    0.027 polyclasses.py:821(factor_list)
     6757    0.008    0.000  180.633    0.027 factortools.py:1390(dmp_factor_list)
     6757    0.036    0.000  180.625    0.027 factortools.py:1313(dup_factor_list)
     6757    0.049    0.000  180.478    0.027 factortools.py:619(dup_zz_factor)
      760    0.318    0.000  179.002    0.236 factortools.py:314(dup_zz_zassenhaus)
41997/8028    0.031    0.000  173.228    0.022 function.py:1897(_dispatch_eval_derivative_n_times)
1991097/1986145    1.724    0.000  170.123    0.000 decorators.py:224(_func)
7552/2602    0.165    0.000  167.272    0.064 mul.py:970(_eval_derivative_n_times)
1988035/1983083    1.644    0.000  166.962    0.000 decorators.py:99(binary_op_wrapper)
19177/6876    0.043    0.000  165.600    0.024 mul.py:986(<listcomp>)
13840/11741    0.033    0.000  141.308    0.012 add.py:730(_eval_is_odd)
13840/11771    0.038    0.000  140.818    0.012 add.py:731(<listcomp>)
11661918/8539432    6.791    0.000  131.995    0.000 decorators.py:58(__sympifyit_wrapper)
449546981   99.728    0.000  125.723    0.000 facts.py:533(<genexpr>)
10262/8626    0.028    0.000  120.739    0.014 add.py:851(<listcomp>)
    35241    0.109    0.000  114.485    0.003 rootisolation.py:1849(_inner_refine)
    40249    0.139    0.000  114.311    0.003 rootisolation.py:269(dup_inner_refine_real_root)
    35245    0.248    0.000  114.095    0.003 rootisolation.py:223(dup_step_refine_real_root)
   903644    7.004    0.000  106.761    0.000 power.py:833(_eval_subs)
    12062    0.270    0.000  103.874    0.009 rootoftools.py:919(eval_rational)
    12078    0.409    0.000  101.091    0.008 rootisolation.py:1867(refine_size)
      760    0.003    0.000   96.237    0.127 galoistools.py:2108(gf_factor_sqf)
      760    0.057    0.000   96.226    0.127 galoistools.py:2058(gf_zassenhaus)
    64558    0.183    0.000   93.877    0.001 polytools.py:162(__new__)
     6623    0.025    0.000   92.694    0.014 rootoftools.py:442(_get_reals)
    20480    0.036    0.000   91.686    0.004 polytools.py:308(_from_expr)
    20749    0.124    0.000   90.787    0.004 polyutils.py:345(_dict_from_expr)
176135/175880    0.465    0.000   89.260    0.001 mul.py:1521(_eval_pos_neg)
1119557/934057   10.030    0.000   88.909    0.000 power.py:282(__new__)
      420    0.058    0.000   88.166    0.210 expr.py:3598(expand)
1023494/3780    2.196    0.000   88.105    0.023 expr.py:3568(_expand_hint)
1143491/1140179   65.894    0.000   84.890    0.000 densearith.py:735(dup_mul)
   340595    7.252    0.000   84.263    0.000 add.py:184(flatten)
3750180/3482323    6.759    0.000   83.649    0.000 numbers.py:1291(__mul__)
31141323/31141303   35.055    0.000   82.046    0.000 sympify.py:503(_sympify)
10019/8749    0.027    0.000   80.309    0.009 add.py:767(<listcomp>)
   684670   62.323    0.000   75.251    0.000 galoistools.py:658(gf_div)
   662648    0.341    0.000   75.006    0.000 galoistools.py:712(gf_rem)
    42408    0.207    0.000   74.157    0.002 rootisolation.py:114(dup_root_lower_bound)
895492/895300    0.608    0.000   74.068    0.000 expr.py:230(__pow__)
    42408   35.216    0.001   73.842    0.002 rootisolation.py:70(dup_root_upper_bound)
      509    0.002    0.000   73.137    0.144 exprtools.py:1167(factor_terms)
372914/509    1.871    0.000   73.135    0.144 exprtools.py:1228(do)
      760    0.372    0.000   71.124    0.094 galoistools.py:1798(gf_ddf_zassenhaus)
895492/895300    0.654    0.000   70.990    0.000 expr.py:225(_pow)
        5    0.010    0.002   70.571   14.114 quadrature.py:454(gauss_jacobi)
 6562/760    0.404    0.000   68.252    0.090 factortools.py:250(dup_zz_hensel_lift)
      100    0.002    0.000   66.868    0.669 rootoftools.py:419(_get_reals_sqf)
      100    0.038    0.000   66.864    0.669 rootisolation.py:558(dup_isolate_real_roots_sqf)
    19004    0.468    0.000   65.173    0.003 factortools.py:193(dup_zz_hensel_step)
 10016725   24.872    0.000   57.902    0.000 numbers.py:1369(__eq__)
41852/406    0.067    0.000   55.500    0.137 exprtools.py:1253(<listcomp>)
    82499   54.476    0.001   54.487    0.001 densetools.py:870(dup_shift)
631306/631303    0.393    0.000   52.106    0.000 expr.py:215(__mul__)
114922/114884    0.769    0.000   51.630    0.000 mul.py:916(_eval_expand_mul)
595719/595716    0.498    0.000   50.947    0.000 numbers.py:738(__mul__)
81187/5955    0.093    0.000   50.656    0.009 exprtools.py:1274(<listcomp>)
33664603/33033631   15.721    0.000   49.983    0.000 sympify.py:102(sympify)
    40249    0.767    0.000   49.128    0.001 rootisolation.py:1738(__init__)
      100    0.011    0.000   49.057    0.491 rootisolation.py:590(<listcomp>)
89066/89059    0.039    0.000   48.765    0.001 mul.py:1503(_eval_is_extended_positive)
     5008    0.611    0.000   48.300    0.010 densetools.py:893(dup_transform)
  8692338    6.803    0.000   47.828    0.000 numbers.py:1867(__eq__)
    35773    0.033    0.000   46.800    0.001 exprtools.py:129(<genexpr>)
36833/36709    0.282    0.000   46.633    0.001 expr.py:851(_eval_is_extended_positive_negative)
24354/24334    0.033    0.000   46.175    0.002 expr.py:890(_eval_is_extended_positive)
    11754    0.024    0.000   44.172    0.004 rootoftools.py:914(_eval_evalf)
    41852    0.261    0.000   42.485    0.001 exprtools.py:991(gcd_terms)
8662266/8662224    5.437    0.000   42.027    0.000 numbers.py:2238(__eq__)
110941620   41.635    0.000   41.635    0.000 facts.py:482(_tell)
    41852    0.480    0.000   41.372    0.001 exprtools.py:926(_gcd_terms)
227364262/226930230   39.163    0.000   40.906    0.000 {built-in method builtins.isinstance}
2544098/2543826    3.309    0.000   40.720    0.000 numbers.py:1734(__mul__)
87069/86907    0.037    0.000   40.588    0.000 mul.py:1556(_eval_is_extended_negative)
5999106/5966055   10.933    0.000   38.102    0.000 numbers.py:2200(__mul__)
     3903    0.103    0.000   37.447    0.010 galoistools.py:872(gf_frobenius_monomial_base)
    12896    0.410    0.000   36.423    0.003 polyutils.py:375(expr_from_dict)
 5415/515    0.036    0.000   35.934    0.070 simplify.py:349(signsimp)
   152597    0.139    0.000   34.737    0.000 expr.py:195(__add__)
   933529    0.723    0.000   34.494    0.000 numbers.py:625(could_extract_minus_sign)
28463/9958    0.152    0.000   34.345    0.003 basic.py:1774(_eval_derivative_n_times)
  352/252    0.002    0.000   33.476    0.133 add.py:506(_eval_derivative)
 31226038   22.576    0.000   33.474    0.000 integerring.py:124(log)
14005773/11319362   21.063    0.000   33.241    0.000 basic.py:350(__eq__)
  352/252    0.009    0.000   32.616    0.129 add.py:508(<listcomp>)
    41862    0.061    0.000   31.843    0.001 densearith.py:1515(dup_div)
    41862    2.932    0.000   31.781    0.001 densearith.py:1308(dup_rr_div)
    16058    0.260    0.000   31.703    0.002 galoistools.py:1007(gf_gcd)
  7878396    9.141    0.000   30.059    0.000 numbers.py:1178(_new)
93689/93662    0.537    0.000   29.505    0.000 evalf.py:1570(evalf)
    25172    0.073    0.000   29.212    0.001 power.py:1165(_eval_expand_multinomial)
319999443   29.067    0.000   29.068    0.000 {method 'get' of 'dict' objects}
  4813593    2.218    0.000   27.484    0.000 numbers.py:1399(__ne__)
116345/93662    0.361    0.000   27.007    0.000 evalf.py:1462(evalf)
   979664    3.127    0.000   26.989    0.000 exprtools.py:300(__init__)
105181/103471    0.051    0.000   25.756    0.000 basic.py:1125(xreplace)
2245749/103471    3.315    0.000   25.707    0.000 basic.py:1190(_xreplace)
     6623    0.700    0.000   25.642    0.004 rootoftools.py:480(_reals_sorted)
5079/2243    0.024    0.000   25.041    0.011 galoistools.py:1855(gf_edf_zassenhaus)
  1189336    0.398    0.000   24.574    0.000 rootisolation.py:1859(refine_disjoint)
 14106347    9.019    0.000   23.963    0.000 numbers.py:1463(__hash__)
   829572    2.029    0.000   23.679    0.000 numbers.py:1329(_eval_power)
     5337    0.046    0.000   23.327    0.004 cse_opts.py:10(sub_pre)
   227149    1.312    0.000   23.230    0.000 radsimp.py:1053(fraction)
193296/83246    0.457    0.000   21.398    0.000 add.py:1157(as_content_primitive)
 31349878   14.824    0.000   21.361    0.000 <frozen importlib._bootstrap>:389(parent)
     2653    0.057    0.000   21.350    0.008 galoistools.py:941(_gf_pow_pnm1d2)
  2784148    4.255    0.000   21.059    0.000 numbers.py:1277(__add__)
 21611379   20.118    0.000   20.463    0.000 traversal.py:116(__init__)
382771/163095    1.459    0.000   20.347    0.000 mul.py:1984(as_content_primitive)
38708/37066    0.045    0.000   20.075    0.001 exprtools.py:1241(<listcomp>)
 72182629   19.281    0.000   19.315    0.000 {built-in method builtins.max}
 18793548   10.841    0.000   19.059    0.000 numbers.py:808(__hash__)
 24634895    5.954    0.000   19.042    0.000 traversal.py:163(__next__)
 45199962   12.772    0.000   19.014    0.000 {built-in method builtins.getattr}
49110586/45140403   13.447    0.000   18.494    0.000 basic.py:153(__hash__)
193296/83246    0.486    0.000   17.773    0.000 add.py:1177(<listcomp>)
      200    0.059    0.000   17.744    0.089 rootisolation.py:358(dup_inner_isolate_real_roots)
   122458    0.099    0.000   17.600    0.000 exprtools.py:878(quo)
  5481376    9.977    0.000   17.337    0.000 mul.py:467(_gather)
   122458    0.348    0.000   16.519    0.000 exprtools.py:866(mul)
4260386/4138923    3.284    0.000   16.498    0.000 {built-in method builtins.any}
   979664    0.889    0.000   16.099    0.000 containers.py:332(<lambda>)
  1080035    1.718    0.000   15.196    0.000 densearith.py:590(dup_sub)
   979664    4.030    0.000   15.098    0.000 containers.py:255(__new__)
  7947467   13.226    0.000   14.850    0.000 numbers.py:149(mpf_norm)
    52285    0.225    0.000   14.788    0.000 basic.py:1326(replace)
 66046675   14.636    0.000   14.637    0.000 {built-in method builtins.min}
  3078268    1.955    0.000   14.464    0.000 {method 'sort' of 'list' objects}
      384    0.004    0.000   14.327    0.037 simplify.py:410(<listcomp>)
    27469    1.189    0.000   13.638    0.000 galoistools.py:904(gf_frobenius_map)
  3178289    9.250    0.000   13.399    0.000 basic.py:1920(_exec_constructor_postprocessors)
24637925/24637923    4.749    0.000   13.121    0.000 {built-in method builtins.next}
2962367/52285    2.492    0.000   12.635    0.000 basic.py:1550(walk)
  1745935    0.825    0.000   12.557    0.000 numbers.py:2245(__ne__)
   489832    0.864    0.000   12.444    0.000 exprtools.py:821(__init__)
2383256/1305602    5.877    0.000   12.368    0.000 basic.py:204(compare)
  2309975    1.715    0.000   12.224    0.000 numbers.py:674(_as_mpf_op)
1282983/44429    1.057    0.000   12.073    0.000 basic.py:1556(<listcomp>)
  1029266   11.942    0.000   11.942    0.000 densearith.py:613(<listcomp>)
  2794278    2.412    0.000   11.749    0.000 numbers.py:703(_eval_subs)
   990099    1.084    0.000   11.500    0.000 densearith.py:140(dup_mul_term)
   337482    0.197    0.000   10.956    0.000 add.py:36(_addsort)
 31231225   10.911    0.000   10.911    0.000 {built-in method math.log}
 19894452   10.546    0.000   10.546    0.000 {method 'update' of 'set' objects}
   990099   10.416    0.000   10.416    0.000 densearith.py:157(<listcomp>)
667246/595504    0.401    0.000   10.219    0.000 logic.py:43(_fuzzy_group)
63187919/46133511    9.022    0.000   10.105    0.000 traversal.py:120(_preorder_traversal)
 12803934    7.036    0.000   10.084    0.000 basic.py:126(__new__)
404384/258314    1.260    0.000   10.014    0.000 power.py:1853(as_content_primitive)
3027/2964    0.008    0.000    9.646    0.003 add.py:656(_eval_is_infinite)
  3992233    5.267    0.000    9.562    0.000 random.py:293(shuffle)
  1939693    9.284    0.000    9.284    0.000 mul.py:1620(_eval_subs)
      100    0.002    0.000    8.970    0.090 rootisolation.py:492(dup_inner_isolate_positive_roots)
      100    0.003    0.000    8.795    0.088 rootisolation.py:516(dup_inner_isolate_negative_roots)
   244916    0.524    0.000    8.736    0.000 exprtools.py:464(mul)
104231332    8.671    0.000    8.671    0.000 {method 'append' of 'list' objects}
  4287090    1.641    0.000    8.564    0.000 basic.py:392(__ne__)
  1192115    0.885    0.000    8.421    0.000 rootisolation.py:1841(is_disjoint)
8773/8402    0.032    0.000    8.238    0.001 add.py:693(_eval_is_zero)
    75002    7.231    0.000    8.148    0.000 galoistools.py:524(gf_mul)
  4711542    5.038    0.000    8.118    0.000 operations.py:108(_from_args)
  2962367    1.025    0.000    8.067    0.000 basic.py:1571(rec_replace)
    16749    0.009    0.000    8.013    0.000 add.py:415(could_extract_minus_sign)
    16749    0.069    0.000    8.005    0.000 add.py:20(_could_extract_minus_sign)
     7302    0.017    0.000    7.686    0.001 polytools.py:208(expr)
  2624320    2.587    0.000    7.527    0.000 rootisolation.py:1777(a)
836446/799408    6.438    0.000    7.495    0.000 libmpf.py:1042(mpf_pow_int)
3509894/181941    4.861    0.000    7.458    0.000 basic.py:528(free_symbols)
  4687101    3.197    0.000    7.333    0.000 numbers.py:1970(__hash__)
  1027037    1.125    0.000    7.277    0.000 galoistools.py:454(gf_add)
   122458    0.406    0.000    7.158    0.000 exprtools.py:497(normal)
  1307610    0.958    0.000    7.085    0.000 numbers.py:1840(_as_mpf_val)
7273225/582247    1.426    0.000    7.045    0.000 basic.py:544(<genexpr>)
   250882    0.306    0.000    6.708    0.000 expr.py:252(__truediv__)
   112222    0.279    0.000    6.689    0.000 mul.py:1590(_eval_is_even)
   738473    1.101    0.000    6.657    0.000 mul.py:182(__neg__)
1518843/1514235    0.861    0.000    6.579    0.000 mul.py:2060(_keep_coeff)
 31349878    6.537    0.000    6.537    0.000 {method 'rpartition' of 'str' objects}
18607333/16698651    3.961    0.000    6.493    0.000 {built-in method builtins.hash}
   164310    0.272    0.000    6.351    0.000 exprtools.py:863(as_expr)
  3642206    4.197    0.000    6.325    0.000 libmpf.py:850(gmpy_mpf_mul)
  1342342    1.494    0.000    6.278    0.000 libmpf.py:491(from_rational)
 35708693    6.152    0.000    6.190    0.000 {method 'items' of 'dict' objects}
    10314    0.090    0.000    6.188    0.001 power.py:1370(_eval_derivative)
  1214323    0.577    0.000    5.990    0.000 numbers.py:1914(__ne__)
    41852    0.055    0.000    5.981    0.000 exprtools.py:977(<listcomp>)
    10674    0.028    0.000    5.914    0.001 basic.py:449(atoms)
    10674    0.680    0.000    5.870    0.001 basic.py:523(<setcomp>)
11598/10530    0.036    0.000    5.774    0.001 add.py:804(_eval_is_extended_nonnegative)
23965/926    0.105    0.000    5.619    0.006 expr.py:113(sort_key)
   233049    1.054    0.000    5.612    0.000 add.py:1077(primitive)
1499114/1362401    2.202    0.000    5.587    0.000 sorting.py:203(ordered)
    43350    0.587    0.000    5.568    0.000 rootoftools.py:594(_reals_index)
    65795    0.149    0.000    5.549    0.000 expr.py:353(__complex__)
 16731374    5.418    0.000    5.419    0.000 {built-in method gmpy2.gmpy2._mpmath_normalize}
11509/10736    0.033    0.000    5.339    0.000 add.py:819(_eval_is_extended_nonpositive)
  1097733    0.418    0.000    5.333    0.000 galoistools.py:417(gf_mul_ground)
  1367384    1.569    0.000    5.309    0.000 polytools.py:4298(__eq__)
     5337    0.008    0.000    5.296    0.001 cse_opts.py:14(<listcomp>)
   270276    4.599    0.000    5.212    0.000 densetools.py:432(dup_trunc)
 12697207    3.734    0.000    5.096    0.000 numbers.py:2284(__hash__)
 32600349    5.066    0.000    5.066    0.000 basic.py:750(args)
    26904    0.062    0.000    4.924    0.000 add.py:1254(__neg__)
   772936    4.915    0.000    4.915    0.000 galoistools.py:434(<listcomp>)
  2728937    1.300    0.000    4.852    0.000 mul.py:33(_mulsort)
76060/76044    0.207    0.000    4.831    0.000 function.py:445(__new__)
6129279/6129243    3.517    0.000    4.824    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
11957/10242    0.098    0.000    4.792    0.000 expr.py:1113(as_ordered_terms)
     6623    0.007    0.000    4.770    0.001 polytools.py:212(args)
 35878263    4.765    0.000    4.766    0.000 {built-in method builtins.hasattr}
    25137    0.202    0.000    4.739    0.000 add.py:455(_eval_power)
 12797571    2.757    0.000    4.713    0.000 operations.py:63(<genexpr>)
  2784148    3.550    0.000    4.711    0.000 libmpf.py:702(mpf_add)
   568484    1.140    0.000    4.706    0.000 containers.py:52(__new__)
285042/285036    1.295    0.000    4.601    0.000 mul.py:1330(_eval_is_integer)
57497140/57495623    4.557    0.000    4.558    0.000 {built-in method builtins.len}
  1290485    0.828    0.000    4.542    0.000 rootisolation.py:1792(b)
     1688    0.009    0.000    4.497    0.003 mul.py:718(_eval_power)
11927/10213    0.354    0.000    4.394    0.000 expr.py:1167(as_terms)
1783876/147582    0.492    0.000    4.275    0.000 {built-in method builtins.sum}
  4066166    1.722    0.000    4.266    0.000 libmpf.py:330(from_int)
76056/76040    0.366    0.000    4.208    0.000 function.py:294(__new__)
   950226    0.274    0.000    4.194    0.000 simplify.py:405(<lambda>)
100557/27596    0.401    0.000    4.192    0.000 sorting.py:10(default_sort_key)
    75411    0.023    0.000    4.181    0.000 add.py:458(<genexpr>)
    80606    0.165    0.000    4.086    0.000 exprtools.py:889(gcd)
   247651    0.376    0.000    4.036    0.000 numbers.py:1695(__add__)
1307010/1291151    0.982    0.000    4.003    0.000 {built-in method builtins.sorted}
  5684573    2.878    0.000    3.991    0.000 random.py:250(_randbelow_with_getrandbits)
24659/24393    0.098    0.000    3.881    0.000 power.py:1428(_eval_is_algebraic)
      532    0.006    0.000    3.720    0.007 polynomials.py:126(eval)
      509    0.029    0.000    3.717    0.007 orthopolys.py:32(jacobi_poly)
  2005787    1.796    0.000    3.574    0.000 numbers.py:2130(__neg__)
  1538085    1.834    0.000    3.564    0.000 numbers.py:1692(__neg__)
   375270    3.533    0.000    3.533    0.000 galoistools.py:477(<listcomp>)
14439/12972    0.017    0.000    3.527    0.000 mul.py:1284(_eval_is_infinite)
53574/49040    0.016    0.000    3.496    0.000 mul.py:1285(<genexpr>)
   370472    0.435    0.000    3.451    0.000 exprtools.py:438(as_expr)
   161212    0.228    0.000    3.419    0.000 exprtools.py:729(gcd)
   517086    0.829    0.000    3.398    0.000 numbers.py:1272(__neg__)
24659/24393    0.026    0.000    3.373    0.000 power.py:1429(_is_one)
  4180852    1.471    0.000    3.335    0.000 numbers.py:1226(_as_mpf_op)
  1351274    1.622    0.000    3.318    0.000 mul.py:826(as_coeff_Mul)
  2712185    1.633    0.000    3.302    0.000 integerring.py:66(get_field)
   458453    0.748    0.000    3.175    0.000 numbers.py:2159(__add__)
 13028306    3.120    0.000    3.120    0.000 {built-in method __new__ of type object at 0x00007FFF0DC2CC90}
  1704762    0.770    0.000    3.035    0.000 containers.py:54(<genexpr>)
     5337    0.378    0.000    2.994    0.001 cse_opts.py:41(sub_post)
 29774467    2.957    0.000    2.957    0.000 core.py:71(<lambda>)
      679    0.001    0.000    2.924    0.004 polytools.py:1061(as_expr)
      210    0.004    0.000    2.807    0.013 function.py:2346(_eval_subs)
  4759916    1.988    0.000    2.758    0.000 core.py:73(__cmp__)
  1374623    0.975    0.000    2.744    0.000 polyclasses.py:1037(__eq__)
   979664    0.353    0.000    2.735    0.000 containers.py:259(<listcomp>)
423357/410146    0.999    0.000    2.733    0.000 numbers.py:1585(__new__)
  7379956    2.725    0.000    2.725    0.000 numbers.py:1269(__bool__)
23340/1097    0.035    0.000    2.682    0.002 expr.py:142(<listcomp>)
    75055    0.239    0.000    2.675    0.000 expr.py:1904(as_real_imag)
    89969    0.060    0.000    2.665    0.000 add.py:23(<genexpr>)
  3457785    2.617    0.000    2.617    0.000 {built-in method gmpy2.gmpy2._mpmath_create}
    46042    2.249    0.000    2.597    0.000 densetools.py:1143(dup_sign_variations)
   135298    0.172    0.000    2.571    0.000 mul.py:176(could_extract_minus_sign)
        5    0.000    0.000    2.544    0.509 matrices.py:435(_output_form)
   124210    0.566    0.000    2.514    0.000 sorting.py:180(_nodes)
       10    0.011    0.001    2.513    0.251 {method 'astype' of 'numpy.ndarray' objects}
   190549    0.367    0.000    2.494    0.000 numbers.py:1252(_eval_is_extended_negative)
425587/425535    0.616    0.000    2.423    0.000 mul.py:1292(_eval_is_rational)
   144803    0.087    0.000    2.353    0.000 mul.py:1559(_eval_is_odd)
  4179630    2.283    0.000    2.283    0.000 libmpf.py:537(mpf_eq)
    19004    0.017    0.000    2.268    0.000 densearith.py:701(dup_sub_mul)
  2379958    0.860    0.000    2.253    0.000 core.py:101(__gt__)
  2379958    0.880    0.000    2.245    0.000 core.py:96(__lt__)
  1394566    1.551    0.000    2.240    0.000 libmpf.py:950(mpf_div)
     2901    0.067    0.000    2.224    0.001 galoistools.py:1073(gf_gcdex)
   443170    0.476    0.000    2.196    0.000 densearith.py:513(dup_add)
   326970    2.173    0.000    2.173    0.000 galoistools.py:486(<listcomp>)
  1101315    0.745    0.000    2.133    0.000 numbers.py:2078(_as_mpf_val)
  3023497    1.071    0.000    2.119    0.000 domain.py:379(__call__)
   797247    0.563    0.000    2.117    0.000 mul.py:478(<listcomp>)
   977293    0.531    0.000    2.116    0.000 numbers.py:2014(as_content_primitive)
    98935    0.140    0.000    2.056    0.000 polyoptions.py:740(build_options)
     3022    0.017    0.000    2.052    0.001 function.py:2341(_hashable_content)
37989/37851    0.019    0.000    2.051    0.000 mul.py:1414(_eval_is_extended_real)
38120/37980    0.122    0.000    2.032    0.000 mul.py:1417(_eval_real_imag)
  2604318    1.125    0.000    2.019    0.000 assumptions.py:464(generator)
    43350    0.046    0.000    1.992    0.000 rootoftools.py:746(_postprocess_root)
 21611379    1.979    0.000    1.979    0.000 traversal.py:166(__iter__)
  2873265    1.970    0.000    1.970    0.000 basic.py:1934(<genexpr>)
 14606200    1.966    0.000    1.966    0.000 expr.py:149(_hashable_content)
398642/258054    0.218    0.000    1.961    0.000 {built-in method builtins.divmod}
   671374    0.419    0.000    1.953    0.000 operations.py:125(_new_rawargs)
    38112    0.116    0.000    1.926    0.000 power.py:594(_eval_is_extended_negative)
   287105    0.560    0.000    1.921    0.000 numbers.py:229(igcd)
    78583    0.990    0.000    1.904    0.000 polyoptions.py:128(__init__)
     3837    0.023    0.000    1.873    0.000 galoistools.py:958(gf_pow_mod)
     1612    0.003    0.000    1.856    0.001 function.py:2330(__eq__)
    10188    0.014    0.000    1.848    0.000 expr.py:2565(is_polynomial)
  2710326    1.333    0.000    1.776    0.000 power.py:962(as_base_exp)
   140588    0.217    0.000    1.771    0.000 numbers.py:2139(__divmod__)
  1374623    1.245    0.000    1.769    0.000 polyclasses.py:172(unify)
19188/19164    0.031    0.000    1.766    0.000 mul.py:1459(_eval_is_imaginary)
  3279162    1.739    0.000    1.739    0.000 operations.py:91(<listcomp>)
1760504/124210    1.072    0.000    1.732    0.000 sorting.py:169(_node_count)
71316/71242    0.029    0.000    1.718    0.000 mul.py:1460(<genexpr>)
  2193189    0.895    0.000    1.693    0.000 {method 'setdefault' of 'dict' objects}
  6083265    1.237    0.000    1.681    0.000 densebasic.py:134(dup_degree)
     1794    0.007    0.000    1.679    0.001 galoistools.py:1515(gf_sqf_p)
    53531    0.047    0.000    1.650    0.000 numbers.py:1938(__gt__)
      222    0.005    0.000    1.648    0.007 function.py:2165(__new__)
    55299    0.197    0.000    1.618    0.000 numbers.py:1917(_Rrel)
    23112    0.011    0.000    1.612    0.000 power.py:559(_eval_is_negative)
  1432457    0.954    0.000    1.611    0.000 iterables.py:2898(iterable)
    36700    0.095    0.000    1.607    0.000 rootoftools.py:362(_new)
   990099    1.470    0.000    1.535    0.000 densearith.py:14(dup_add_term)
   979664    0.358    0.000    1.532    0.000 exprtools.py:381(<listcomp>)
        5    0.000    0.000    1.528    0.306 matrices.py:134(__init__)
1273109/1272953    0.276    0.000    1.527    0.000 mul.py:1293(<genexpr>)
   129323    0.106    0.000    1.514    0.000 exprtools.py:1255(<genexpr>)
 11849611    1.508    0.000    1.508    0.000 {method 'extend' of 'list' objects}
26019/24304    0.041    0.000    1.491    0.000 mul.py:1268(_eval_is_complex)
     6623    0.020    0.000    1.476    0.000 rootoftools.py:729(_preprocess_roots)
     6623    0.051    0.000    1.453    0.000 polyroots.py:729(preprocess_roots)
3913/3822    0.006    0.000    1.438    0.000 add.py:639(<lambda>)
   920636    1.025    0.000    1.426    0.000 basic.py:331(_do_eq_sympify)
28420/27625    0.009    0.000    1.425    0.000 add.py:640(<genexpr>)
97014/91552    0.026    0.000    1.422    0.000 mul.py:1269(<genexpr>)
4393/4385    0.007    0.000    1.381    0.000 add.py:645(<lambda>)
22101/22077    0.009    0.000    1.367    0.000 add.py:646(<genexpr>)
5537/5529    0.009    0.000    1.349    0.000 add.py:635(<lambda>)
36346/36322    0.013    0.000    1.331    0.000 add.py:636(<genexpr>)
    38242    0.030    0.000    1.329    0.000 galoistools.py:613(gf_sub_mul)
    87472    0.489    0.000    1.324    0.000 expr.py:2196(extract_multiplicatively)
   225476    1.314    0.000    1.314    0.000 densearith.py:536(<listcomp>)
     6752    0.011    0.000    1.305    0.000 polyutils.py:311(_dict_from_expr_no_gens)
     6842    0.195    0.000    1.303    0.000 polyutils.py:231(_parallel_dict_from_expr_no_gens)
    91751    0.194    0.000    1.290    0.000 libelefun.py:318(mpf_pow)
     3868    0.011    0.000    1.259    0.000 function.py:1670(free_symbols)
   171740    0.228    0.000    1.236    0.000 symbol.py:340(_hashable_content)
     7239    0.007    0.000    1.206    0.000 polytools.py:4246(__ne__)
   146597    0.254    0.000    1.193    0.000 polyutils.py:171(_not_a_coeff)
     7239    0.037    0.000    1.189    0.000 polytools.py:4228(__eq__)
      760    0.008    0.000    1.183    0.002 sqfreetools.py:196(dup_sqf_part)
35174/10188    0.030    0.000    1.173    0.000 add.py:621(_eval_is_polynomial)
21421/20655    0.029    0.000    1.157    0.000 mul.py:1277(_eval_is_finite)
     9091    0.018    0.000    1.153    0.000 power.py:798(_eval_is_finite)
   723202    0.524    0.000    1.149    0.000 ring.py:38(invert)
129753/54795    0.050    0.000    1.148    0.000 add.py:622(<genexpr>)
      210    0.004    0.000    1.145    0.005 function.py:1682(_eval_subs)
   135235    0.299    0.000    1.139    0.000 numbers.py:2211(__rmul__)
   190549    0.135    0.000    1.134    0.000 ctx_mp_python.py:179(__lt__)
  2770465    1.123    0.000    1.123    0.000 densebasic.py:252(dup_strip)
2801/2742    0.005    0.000    1.117    0.000 add.py:643(<lambda>)
19758/19140    0.007    0.000    1.107    0.000 add.py:644(<genexpr>)
  1333592    0.729    0.000    1.103    0.000 numbers.py:828(as_coeff_Mul)
  4231480    1.095    0.000    1.095    0.000 basic.py:724(func)
   434032    0.988    0.000    1.093    0.000 exponential.py:212(__instancecheck__)
55906/30920    0.045    0.000    1.087    0.000 mul.py:1252(_eval_is_polynomial)
79140/76750    0.022    0.000    1.082    0.000 mul.py:1278(<genexpr>)
  3023407    1.047    0.000    1.047    0.000 domain.py:371(new)
  7247570    1.047    0.000    1.047    0.000 {built-in method gmpy2.gmpy2.bit_length}
     3022    0.013    0.000    1.044    0.000 basic.py:602(canonical_variables)
   130716    0.128    0.000    1.044    0.000 mul.py:1603(_eval_is_composite)
    98799    0.161    0.000    1.040    0.000 basic.py:1738(doit)
    27372    0.117    0.000    1.031    0.000 polytools.py:243(_from_dict)
174492/99534    0.054    0.000    1.029    0.000 mul.py:1253(<genexpr>)
   373401    0.141    0.000    1.026    0.000 densearith.py:255(dup_mul_ground)
   466104    0.393    0.000    1.025    0.000 {built-in method _functools.reduce}
63082/38378    0.219    0.000    1.024    0.000 power.py:1391(_eval_is_polynomial)
484909/177655    0.527    0.000    1.009    0.000 expr.py:408(is_number)
   190549    0.331    0.000    1.000    0.000 ctx_mp_python.py:169(_cmp)
      630    0.001    0.000    0.994    0.002 function.py:1719(<genexpr>)
   190549    0.299    0.000    0.993    0.000 numbers.py:1216(num)
137092/137067    0.203    0.000    0.991    0.000 mul.py:1301(_eval_is_algebraic)
  3285471    0.991    0.000    0.991    0.000 {method 'copy' of 'dict' objects}
     3022    0.013    0.000    0.989    0.000 function.py:2312(free_symbols)
   122458    0.156    0.000    0.982    0.000 exprtools.py:875(inv)
  2673429    0.975    0.000    0.975    0.000 facts.py:479(__init__)
     4211    0.057    0.000    0.963    0.000 expr.py:3946(_eval_derivative_n_times)
  2850452    0.744    0.000    0.952    0.000 domain.py:821(__eq__)
     9479    0.029    0.000    0.950    0.000 power.py:619(_eval_is_zero)
    26904    0.057    0.000    0.942    0.000 add.py:1257(<listcomp>)
    13997    0.012    0.000    0.928    0.000 polyutils.py:305(_dict_from_expr_if_gens)
      903    0.001    0.000    0.921    0.001 function.py:2335(__ne__)
6992/6934    0.011    0.000    0.919    0.000 add.py:637(<lambda>)
    13997    0.176    0.000    0.915    0.000 polyutils.py:180(_parallel_dict_from_expr_if_gens)
   145310    0.146    0.000    0.899    0.000 rootoftools.py:85(__getitem__)
  2740688    0.518    0.000    0.893    0.000 mul.py:653(<listcomp>)
   140402    0.134    0.000    0.892    0.000 mul.py:1489(_eval_is_irrational)
86912/86738    0.024    0.000    0.891    0.000 add.py:638(<genexpr>)
   216503    0.885    0.000    0.885    0.000 densearith.py:272(<listcomp>)
  1374623    0.381    0.000    0.854    0.000 domain.py:825(__ne__)
      760    0.003    0.000    0.834    0.001 euclidtools.py:1591(dup_gcd)
      760    0.002    0.000    0.831    0.001 euclidtools.py:1473(dup_inner_gcd)
  2077169    0.830    0.000    0.830    0.000 numbers.py:3577(_as_mpf_val)
      760    0.015    0.000    0.828    0.001 euclidtools.py:1145(dup_zz_heu_gcd)
  2873265    0.826    0.000    0.826    0.000 {method 'mro' of 'type' objects}
  3383582    0.813    0.000    0.813    0.000 numbers.py:1199(_hashable_content)
     6623    0.027    0.000    0.811    0.000 polytools.py:828(retract)
  3123892    0.572    0.000    0.810    0.000 galoistools.py:130(gf_degree)
    98250    0.067    0.000    0.805    0.000 densetools.py:658(dup_primitive)
   287105    0.299    0.000    0.772    0.000 numbers.py:257(<listcomp>)
    85272    0.139    0.000    0.772    0.000 numbers.py:4450(sympify_mpq)
    32144    0.066    0.000    0.764    0.000 basic.py:971(<listcomp>)
    99770    0.353    0.000    0.758    0.000 densetools.py:571(dup_content)
   796268    0.240    0.000    0.756    0.000 abc.py:96(__instancecheck__)
    21752    0.038    0.000    0.726    0.000 power.py:643(_eval_is_integer)
   601426    0.401    0.000    0.725    0.000 operations.py:429(make_args)
  8973638    0.718    0.000    0.718    0.000 {method 'getrandbits' of '_random.Random' objects}
  2185800    0.715    0.000    0.715    0.000 numbers.py:1266(_eval_is_zero)
      509    0.164    0.000    0.709    0.001 orthopolys.py:15(dup_jacobi)
     8422    0.021    0.000    0.703    0.000 relational.py:613(__new__)
   347366    0.378    0.000    0.703    0.000 numbers.py:2084(__new__)
1701858/1630584    0.295    0.000    0.702    0.000 {built-in method builtins.abs}
410073/409998    0.101    0.000    0.695    0.000 mul.py:1302(<genexpr>)
   190549    0.539    0.000    0.694    0.000 ctx_mp_python.py:47(__new__)
1230522/436711    0.247    0.000    0.689    0.000 expr.py:458(<genexpr>)
  2301273    0.658    0.000    0.658    0.000 power.py:391(exp)
   686006    0.599    0.000    0.654    0.000 numbers.py:419(ilcm)
  3890136    0.645    0.000    0.645    0.000 inspect.py:487(getmro)
     7045    0.017    0.000    0.640    0.000 power.py:732(_eval_is_complex)
   157166    0.158    0.000    0.636    0.000 polyoptions.py:140(preprocess_options)
       10    0.000    0.000    0.636    0.064 matrices.py:195(get_powers)
   865333    0.394    0.000    0.624    0.000 misc.py:491(as_int)
     8422    0.088    0.000    0.613    0.000 relational.py:1408(is_eq)
   171740    0.151    0.000    0.606    0.000 symbol.py:352(assumptions0)
    20642    0.168    0.000    0.601    0.000 constructor.py:266(construct_domain)
    97569    0.345    0.000    0.595    0.000 libmpf.py:1368(mpf_sqrt)
12544/12532    0.022    0.000    0.595    0.000 add.py:647(<lambda>)
13242/13226    0.024    0.000    0.590    0.000 add.py:651(<lambda>)
  2964781    0.587    0.000    0.587    0.000 {method 'insert' of 'list' objects}
    53531    0.064    0.000    0.586    0.000 rootisolation.py:1801(dx)
   319745    0.164    0.000    0.582    0.000 containers.py:108(__hash__)
   295604    0.326    0.000    0.574    0.000 numbers.py:2011(as_numer_denom)
13560/13528    0.016    0.000    0.571    0.000 add.py:737(_eval_is_irrational)
12746/12742    0.022    0.000    0.569    0.000 add.py:649(<lambda>)
    11397    0.039    0.000    0.562    0.000 power.py:740(_eval_is_imaginary)
30989/30953    0.010    0.000    0.562    0.000 add.py:648(<genexpr>)
  1530092    0.257    0.000    0.558    0.000 function.py:1468(<lambda>)
33081/33033    0.012    0.000    0.555    0.000 add.py:652(<genexpr>)
   990099    0.551    0.000    0.551    0.000 ring.py:19(exquo)
   177608    0.267    0.000    0.539    0.000 logic.py:115(fuzzy_and)
31602/31590    0.011    0.000    0.537    0.000 add.py:650(<genexpr>)
   704246    0.344    0.000    0.534    0.000 containers.py:70(__iter__)
    43753    0.045    0.000    0.529    0.000 mul.py:1469(_eval_herm_antiherm)
    10458    0.438    0.000    0.517    0.000 galoistools.py:555(gf_sqr)
   796268    0.516    0.000    0.516    0.000 {built-in method _abc._abc_instancecheck}
    33155    0.050    0.000    0.515    0.000 numbers.py:671(_eval_evalf)
    12479    0.012    0.000    0.510    0.000 expr.py:893(_eval_is_extended_negative)
   703243    0.509    0.000    0.509    0.000 {built-in method gmpy2.gmpy2.gcd}
   356238    0.211    0.000    0.503    0.000 polytools.py:4274(__hash__)
    26352    0.013    0.000    0.500    0.000 mul.py:1463(_eval_is_hermitian)
   726863    0.262    0.000    0.499    0.000 integerring.py:206(gcdex)
   136189    0.280    0.000    0.497    0.000 numbers.py:1748(__truediv__)
    98799    0.112    0.000    0.483    0.000 basic.py:1758(<listcomp>)
   734748    0.209    0.000    0.481    0.000 exprtools.py:481(<genexpr>)
  2074107    0.465    0.000    0.465    0.000 numbers.py:3411(_as_mpf_val)
  3646159    0.459    0.000    0.459    0.000 numbers.py:3104(__bool__)
   132429    0.129    0.000    0.452    0.000 domain.py:403(convert)
  3509894    0.450    0.000    0.450    0.000 {method 'union' of 'set' objects}
    16844    0.441    0.000    0.442    0.000 core.py:12(dispatch)
     6623    0.009    0.000    0.435    0.000 polytools.py:219(from_dict)
   171740    0.435    0.000    0.435    0.000 symbol.py:354(<dictcomp>)
  2740688    0.428    0.000    0.428    0.000 mul.py:555(<listcomp>)
   134652    0.108    0.000    0.428    0.000 numbers.py:678(__float__)
   370100    0.195    0.000    0.427    0.000 polytools.py:324(__hash__)
    27278    0.086    0.000    0.421    0.000 numbers.py:1402(_Frel)
    63157    0.048    0.000    0.417    0.000 numbers.py:2266(__ge__)
  2256087    0.414    0.000    0.414    0.000 numbers.py:1683(_hashable_content)
    20620    0.063    0.000    0.413    0.000 polyoptions.py:282(preprocess)
    81497    0.198    0.000    0.413    0.000 mul.py:1237(as_base_exp)
    70131    0.310    0.000    0.411    0.000 densetools.py:262(dup_eval)
    12062    0.022    0.000    0.408    0.000 rootoftools.py:798(_get_interval)
    80606    0.176    0.000    0.407    0.000 numbers.py:1993(gcd)
   210070    0.158    0.000    0.403    0.000 sympify.py:68(_is_numpy_instance)
   204078    0.158    0.000    0.403    0.000 libmpf.py:626(mpf_lt)
  5684573    0.396    0.000    0.396    0.000 {method 'bit_length' of 'int' objects}
  2873265    0.393    0.000    0.393    0.000 {built-in method from_iterable}
2136740/2136716    0.392    0.000    0.392    0.000 {built-in method builtins.iter}
    62289    0.062    0.000    0.383    0.000 numbers.py:2257(__lt__)
  1922501    0.380    0.000    0.380    0.000 power.py:387(base)
   111243    0.379    0.000    0.379    0.000 galoistools.py:795(gf_lshift)
  1029859    0.376    0.000    0.376    0.000 {method 'index' of 'list' objects}
     7239    0.011    0.000    0.374    0.000 polytools.py:598(_eval_subs)
    14023    0.050    0.000    0.369    0.000 polyclasses.py:242(to_sympy_dict)
   403203    0.326    0.000    0.359    0.000 polyoptions.py:65(getter)
    43757    0.049    0.000    0.358    0.000 expr.py:205(__sub__)
    45289    0.046    0.000    0.355    0.000 numbers.py:2248(__gt__)
  1865614    0.349    0.000    0.349    0.000 numbers.py:3714(__eq__)
  3141145    0.348    0.000    0.348    0.000 domain.py:990(is_negative)
    14083    0.058    0.000    0.346    0.000 _print_helpers.py:27(__str__)
    19567    0.027    0.000    0.342    0.000 numbers.py:1431(__gt__)
    13652    0.012    0.000    0.335    0.000 expr.py:220(__rmul__)
    32370    0.024    0.000    0.335    0.000 basic.py:965(<lambda>)
     2601    0.031    0.000    0.332    0.000 mul.py:842(as_real_imag)
    44178    0.049    0.000    0.324    0.000 rootoftools.py:92(__setitem__)
     1561    0.010    0.000    0.320    0.000 mul.py:297(<listcomp>)
    16247    0.051    0.000    0.319    0.000 power.py:565(_eval_is_extended_positive)
    41997    0.064    0.000    0.309    0.000 function.py:1488(_sort_variable_count)
   513086    0.218    0.000    0.309    0.000 symbol.py:378(free_symbols)
      616    0.002    0.000    0.305    0.000 polytools.py:2411(eval)
     6842    0.021    0.000    0.301    0.000 polyutils.py:62(_sort_gens)
   217001    0.158    0.000    0.295    0.000 exprtools.py:216(decompose_power)
     7759    0.011    0.000    0.294    0.000 power.py:1042(_eval_expand_power_base)
    14083    0.024    0.000    0.288    0.000 printer.py:371(__call__)
     6623    0.013    0.000    0.288    0.000 rootoftools.py:112(<listcomp>)
    32216    0.027    0.000    0.287    0.000 rootoftools.py:660(_ensure_reals_init)
    28626    0.036    0.000    0.284    0.000 rationalfield.py:53(to_sympy)
  1139641    0.283    0.000    0.283    0.000 galoistools.py:188(gf_strip)
    27372    0.036    0.000    0.281    0.000 polyclasses.py:276(from_dict)
   223645    0.176    0.000    0.274    0.000 libmpf.py:574(mpf_cmp)
    49853    0.092    0.000    0.274    0.000 galoistools.py:489(gf_sub)
     2909    0.050    0.000    0.273    0.000 evalf.py:636(evalf_mul)
   489832    0.195    0.000    0.272    0.000 exprtools.py:419(is_zero)
   122458    0.193    0.000    0.269    0.000 numbers.py:1763(__rtruediv__)
    14083    0.033    0.000    0.264    0.000 str.py:982(sstr)
  1297418    0.262    0.000    0.262    0.000 numbers.py:2034(as_coeff_Mul)
      760    0.001    0.000    0.260    0.000 densearith.py:1560(dup_quo)
    32316    0.018    0.000    0.260    0.000 rootoftools.py:99(__contains__)
   190549    0.153    0.000    0.259    0.000 ctx_mp_python.py:100(mpf_convert_rhs)
     3062    0.021    0.000    0.257    0.000 expr.py:373(__lt__)
    14305    0.019    0.000    0.256    0.000 printer.py:290(doprint)
    50421    0.100    0.000    0.255    0.000 basic.py:944(<listcomp>)
     3143    0.212    0.000    0.252    0.000 galoistools.py:729(gf_quo)
    23848    0.036    0.000    0.250    0.000 rootisolation.py:1806(center)
  1294673    0.226    0.000    0.249    0.000 containers.py:258(<genexpr>)
        2    0.000    0.000    0.249    0.124 expansion.py:656(apply)
    12062    0.058    0.000    0.247    0.000 rootoftools.py:808(_set_interval)
    78230    0.064    0.000    0.247    0.000 polyutils.py:359(<genexpr>)
      826    0.002    0.000    0.243    0.000 iterables.py:593(sift)
   316203    0.148    0.000    0.242    0.000 numbers.py:2133(__abs__)
    13213    0.068    0.000    0.242    0.000 power.py:664(_eval_is_extended_real)
     6842    0.034    0.000    0.241    0.000 polyutils.py:74(order_key)
    36550    0.023    0.000    0.240    0.000 power.py:814(_eval_is_prime)
     3564    0.003    0.000    0.240    0.000 function.py:2338(__hash__)
      630    0.001    0.000    0.239    0.000 power.py:1078(pred)
   726863    0.237    0.000    0.237    0.000 {built-in method gmpy2.gmpy2.gcdext}
    36545    0.023    0.000    0.237    0.000 power.py:821(_eval_is_composite)
15651/14305    0.120    0.000    0.237    0.000 printer.py:294(_print)
   517086    0.233    0.000    0.233    0.000 libmpf.py:663(mpf_neg)
  1343849    0.230    0.000    0.230    0.000 domain.py:982(is_one)
     3062    0.014    0.000    0.230    0.000 relational.py:822(__new__)
    44078    0.079    0.000    0.224    0.000 polytools.py:285(_from_poly)
   478922    0.083    0.000    0.222    0.000 integerring.py:214(gcd)
    42884    0.034    0.000    0.220    0.000 densearith.py:474(dup_neg)
    13246    0.105    0.000    0.219    0.000 symbol.py:586(symbols)
       36    0.003    0.000    0.214    0.006 sympy_parser.py:912(parse_expr)
   140589    0.160    0.000    0.214    0.000 numbers.py:2220(__mod__)
    20842    0.151    0.000    0.212    0.000 iterables.py:1930(has_dups)
        2    0.000    0.000    0.211    0.106 expansion.py:714(deserialize)
        2    0.000    0.000    0.211    0.106 expansion.py:721(<listcomp>)
        4    0.000    0.000    0.211    0.053 expansion.py:722(<listcomp>)
        8    0.001    0.000    0.211    0.026 expansion.py:701(load_serialized_element)
    27372    0.014    0.000    0.208    0.000 densebasic.py:975(dmp_from_dict)
    43535    0.038    0.000    0.207    0.000 galoistools.py:1139(gf_monic)
    93689    0.097    0.000    0.207    0.000 libmpf.py:64(dps_to_prec)
     3062    0.006    0.000    0.206    0.000 relational.py:850(_eval_relation)
      616    0.002    0.000    0.206    0.000 polyclasses.py:618(eval)
     6623    0.014    0.000    0.204    0.000 polytools.py:3018(primitive)
    11754    0.009    0.000    0.204    0.000 evalf.py:1695(_evalf)
     6623    0.046    0.000    0.203    0.000 polyroots.py:664(_integer_basis)
    17425    0.059    0.000    0.201    0.000 power.py:1401(_eval_is_rational)
   118898    0.164    0.000    0.201    0.000 numbers.py:1034(__new__)
    27372    0.124    0.000    0.194    0.000 densebasic.py:917(dup_from_dict)
    20642    0.056    0.000    0.192    0.000 constructor.py:15(_construct_simple)
    57006    0.192    0.000    0.192    0.000 densearith.py:545(<listcomp>)
    12979    0.012    0.000    0.191    0.000 numbers.py:716(__add__)
     3062    0.002    0.000    0.188    0.000 relational.py:1177(_eval_fuzzy_relation)
      616    0.001    0.000    0.188    0.000 densetools.py:327(dmp_eval_in)
    11849    0.013    0.000    0.187    0.000 mul.py:2010(as_ordered_factors)
      616    0.001    0.000    0.187    0.000 densetools.py:317(_rec_eval_in)
    42884    0.186    0.000    0.186    0.000 densearith.py:488(<listcomp>)
      616    0.001    0.000    0.186    0.000 densetools.py:288(dmp_eval)
     7876    0.040    0.000    0.186    0.000 symbol.py:426(__new__)
     3062    0.004    0.000    0.185    0.000 relational.py:1253(is_lt)
    25839    0.026    0.000    0.185    0.000 numbers.py:1846(__abs__)
     3062    0.043    0.000    0.180    0.000 relational.py:1277(is_ge)
    34732    0.027    0.000    0.178    0.000 evalf.py:487(evalf_rational)
    43350    0.020    0.000    0.178    0.000 rootoftools.py:492(<lambda>)
     6623    0.009    0.000    0.176    0.000 polytools.py:2253(clear_denoms)
    71672    0.042    0.000    0.174    0.000 numbers.py:1220(_as_mpf_val)
      760    0.003    0.000    0.174    0.000 factortools.py:79(dup_trial_division)
    65274    0.150    0.000    0.171    0.000 densebasic.py:369(dup_reverse)
    50753    0.170    0.000    0.170    0.000 densearith.py:622(<listcomp>)
    22815    0.026    0.000    0.167    0.000 polytools.py:522(per)
3752/3743    0.026    0.000    0.165    0.000 numbers.py:2295(_eval_power)
   328620    0.163    0.000    0.163    0.000 {method 'copy' of 'collections.defaultdict' objects}
        4    0.000    0.000    0.163    0.041 eigen.py:552(<lambda>)
  1090280    0.162    0.000    0.162    0.000 densebasic.py:11(poly_LC)
     2653    0.005    0.000    0.160    0.000 galoistools.py:1360(gf_random)
    32454    0.028    0.000    0.160    0.000 galoistools.py:437(gf_quo_ground)
     6623    0.014    0.000    0.158    0.000 rootoftools.py:768(<setcomp>)
     2653    0.057    0.000    0.156    0.000 galoistools.py:1373(<listcomp>)
     6623    0.010    0.000    0.155    0.000 polyclasses.py:724(primitive)
    52790    0.078    0.000    0.154    0.000 expr.py:1064(key)
        5    0.000    0.000    0.151    0.030 repmatrix.py:328(__new__)
        5    0.000    0.000    0.151    0.030 repmatrix.py:331(_new)
    39711    0.041    0.000    0.148    0.000 expr.py:184(__neg__)
   659982    0.125    0.000    0.145    0.000 operations.py:121(<genexpr>)
   515747    0.142    0.000    0.142    0.000 logic.py:92(fuzzy_bool)
    47/10    0.002    0.000    0.142    0.014 matrices.py:24(powers_of)
    91751    0.142    0.000    0.142    0.000 {built-in method gmpy2.gmpy2.isqrt_rem}
    24748    0.014    0.000    0.140    0.000 mul.py:2024(<lambda>)
     4211    0.024    0.000    0.139    0.000 piecewise.py:129(__new__)
    55876    0.079    0.000    0.139    0.000 numbers.py:2171(__radd__)
    56172    0.074    0.000    0.137    0.000 numbers.py:2180(__sub__)
    36552    0.045    0.000    0.136    0.000 power.py:789(_eval_is_odd)
    57458    0.073    0.000    0.135    0.000 polytools.py:193(new)
  1110777    0.134    0.000    0.134    0.000 {method 'keys' of 'dict' objects}
     6623    0.005    0.000    0.132    0.000 densetools.py:691(dmp_ground_primitive)
   149904    0.048    0.000    0.132    0.000 polyutils.py:360(<genexpr>)
     4001    0.011    0.000    0.130    0.000 add.py:669(_eval_is_imaginary)
   181118    0.063    0.000    0.127    0.000 function.py:1911(<genexpr>)
    77600    0.066    0.000    0.127    0.000 integerring.py:53(to_sympy)
     7711    0.009    0.000    0.126    0.000 numbers.py:1447(__lt__)
     7878    0.028    0.000    0.123    0.000 symbol.py:298(__xnew__)
       36    0.008    0.000    0.121    0.003 sympy_parser.py:882(stringify_expr)
   891325    0.116    0.000    0.118    0.000 {built-in method _operator.index}
    41852    0.085    0.000    0.116    0.000 exprtools.py:1052(mask)
        2    0.000    0.000    0.115    0.058 matrices.py:60(<listcomp>)
   179268    0.115    0.000    0.115    0.000 add.py:888(_eval_subs)
     4193    0.017    0.000    0.115    0.000 mul.py:1230(as_numer_denom)
    43416    0.067    0.000    0.114    0.000 add.py:441(as_coeff_Add)
    36551    0.044    0.000    0.113    0.000 power.py:555(_eval_is_even)
    13146    0.044    0.000    0.113    0.000 multinomial.py:55(multinomial_coefficients)
        5    0.011    0.002    0.111    0.022 repmatrix.py:127(_flat_list_to_DomainMatrix)
   629280    0.111    0.000    0.111    0.000 sympify.py:74(<genexpr>)
    20634    0.028    0.000    0.111    0.000 polyclasses.py:169(__hash__)
      444    0.000    0.000    0.109    0.000 function.py:2215(<genexpr>)
      718    0.001    0.000    0.108    0.000 polytools.py:765(to_ring)
     1869    0.006    0.000    0.104    0.000 power.py:415(_eval_power)
      718    0.001    0.000    0.104    0.000 polyclasses.py:285(to_ring)
      222    0.001    0.000    0.102    0.000 function.py:2206(<dictcomp>)
      718    0.002    0.000    0.102    0.000 polyclasses.py:297(convert)
    26729    0.026    0.000    0.101    0.000 multinomial.py:129(multinomial_coefficients_iterator)
     6721    0.006    0.000    0.101    0.000 polytools.py:1035(as_dict)
  1493077    0.101    0.000    0.101    0.000 polyoptions.py:39(postprocess)
     3062    0.009    0.000    0.101    0.000 relational.py:1208(_n2)
   424011    0.101    0.000    0.101    0.000 expr.py:3519(as_coeff_Mul)
      222    0.001    0.000    0.100    0.000 function.py:2202(mystr)
     6623    0.027    0.000    0.100    0.000 polytools.py:327(free_symbols)
      250    0.002    0.000    0.100    0.000 str.py:50(_print_Add)
    36944    0.099    0.000    0.099    0.000 galoistools.py:521(<listcomp>)
   223645    0.098    0.000    0.098    0.000 libmpf.py:692(mpf_sign)
      718    0.001    0.000    0.098    0.000 densebasic.py:541(dmp_convert)
    59852    0.047    0.000    0.098    0.000 function.py:1353(<listcomp>)
      718    0.002    0.000    0.097    0.000 densebasic.py:516(dup_convert)
    15265    0.007    0.000    0.095    0.000 galoistools.py:322(gf_to_int_poly)
    78230    0.039    0.000    0.095    0.000 polyutils.py:364(<genexpr>)
      718    0.009    0.000    0.095    0.000 densebasic.py:538(<listcomp>)
      222    0.001    0.000    0.095    0.000 str.py:609(_print_Pow)
   134652    0.063    0.000    0.094    0.000 libmpf.py:454(to_float)
   157417    0.056    0.000    0.093    0.000 polyutils.py:350(_is_expandable_pow)
    20552    0.029    0.000    0.093    0.000 constructor.py:76(<listcomp>)
     6185    0.008    0.000    0.090    0.000 rootoftools.py:396(_eval_is_real)
     8422    0.016    0.000    0.088    0.000 piecewise.py:21(__new__)
     6623    0.011    0.000    0.088    0.000 polytools.py:910(terms)
    15265    0.043    0.000    0.088    0.000 galoistools.py:339(<listcomp>)
       45    0.000    0.000    0.088    0.002 expr.py:3752(factor)
       45    0.000    0.000    0.087    0.002 polytools.py:6358(factor)
       45    0.000    0.000    0.087    0.002 polytools.py:6124(_generic_factor)
   342877    0.086    0.000    0.086    0.000 expr.py:2006(as_base_exp)
       45    0.000    0.000    0.086    0.002 polytools.py:6065(_symbolic_factor)
        4    0.000    0.000    0.086    0.021 eigen.py:551(<lambda>)
       56    0.055    0.001    0.085    0.002 {built-in method numpy.array}
     1794    0.045    0.000    0.085    0.000 galoistools.py:1164(gf_diff)
    33237    0.015    0.000    0.085    0.000 add.py:1182(<genexpr>)
   233049    0.085    0.000    0.085    0.000 add.py:1123(<listcomp>)
    16816    0.021    0.000    0.079    0.000 symbol.py:285(__new__)
    34369    0.074    0.000    0.078    0.000 random.py:415(uniform)
   105443    0.077    0.000    0.077    0.000 {built-in method builtins.round}
     5865    0.030    0.000    0.076    0.000 power.py:1542(as_numer_denom)
    14305    0.040    0.000    0.075    0.000 printer.py:258(__init__)
   179625    0.075    0.000    0.075    0.000 sympify.py:18(__init__)
      512    0.002    0.000    0.074    0.000 numbers.py:1795(_eval_power)
   209517    0.072    0.000    0.072    0.000 boolalg.py:460(<lambda>)
     7132    0.028    0.000    0.071    0.000 tokenize.py:429(_tokenize)
   195866    0.070    0.000    0.070    0.000 numbers.py:1689(_eval_is_zero)
    24974    0.026    0.000    0.070    0.000 add.py:493(<listcomp>)
      269    0.003    0.000    0.068    0.000 polytools.py:4367(_poly_from_expr)
    13246    0.013    0.000    0.068    0.000 densebasic.py:1713(dmp_list_terms)
   233049    0.068    0.000    0.068    0.000 add.py:1124(<listcomp>)
    24692    0.049    0.000    0.068    0.000 symbol.py:254(_sanitize)
   299791    0.067    0.000    0.067    0.000 expr.py:2107(as_content_primitive)
    52790    0.033    0.000    0.065    0.000 expr.py:1061(neg)
    43457    0.049    0.000    0.065    0.000 polyclasses.py:151(__init__)
   112759    0.041    0.000    0.064    0.000 domain.py:465(of_type)
        5    0.000    0.000    0.064    0.013 matrices.py:252(deduce_params_outer)
     5818    0.012    0.000    0.064    0.000 evalf.py:762(evalf_pow)
      760    0.001    0.000    0.064    0.000 densetools.py:727(dup_extract)
     4193    0.007    0.000    0.062    0.000 mul.py:1234(<listcomp>)
      250    0.001    0.000    0.061    0.000 printer.py:340(_as_ordered_terms)
     4732    0.009    0.000    0.060    0.000 basic.py:1212(has)
     6623    0.008    0.000    0.060    0.000 polytools.py:890(monoms)
     1373    0.003    0.000    0.058    0.000 mul.py:724(<listcomp>)
     6623    0.022    0.000    0.058    0.000 polytools.py:630(replace)
   313236    0.058    0.000    0.058    0.000 {method 'pop' of 'list' objects}
    31081    0.017    0.000    0.058    0.000 galoistools.py:344(gf_neg)
   249093    0.056    0.000    0.056    0.000 numbers.py:3196(__neg__)
    13246    0.036    0.000    0.056    0.000 densebasic.py:1694(_rec_list_terms)
   109394    0.038    0.000    0.055    0.000 {method 'add' of 'set' objects}
     2280    0.003    0.000    0.055    0.000 densearith.py:1705(dup_max_norm)
    14023    0.010    0.000    0.055    0.000 densebasic.py:1071(dmp_to_dict)
    19906    0.041    0.000    0.054    0.000 dispatcher.py:231(__call__)
     2903    0.003    0.000    0.054    0.000 numbers.py:761(__truediv__)
    13842    0.007    0.000    0.053    0.000 galoistools.py:306(gf_from_int_poly)
       36    0.000    0.000    0.053    0.001 sympy_parser.py:901(eval_expr)
       36    0.012    0.000    0.053    0.001 {built-in method builtins.eval}
    35062    0.023    0.000    0.053    0.000 evalf.py:491(evalf_integer)
     5877    0.011    0.000    0.053    0.000 evalf.py:1705(_to_mpmath)
     4734    0.031    0.000    0.052    0.000 basic.py:1291(_has)
     6623    0.012    0.000    0.051    0.000 polyclasses.py:312(monoms)
      718    0.002    0.000    0.051    0.000 polyclasses.py:593(clear_denoms)
    17401    0.007    0.000    0.050    0.000 mul.py:1466(_eval_is_antihermitian)
   309688    0.050    0.000    0.050    0.000 mul.py:951(<genexpr>)
    11927    0.031    0.000    0.049    0.000 expr.py:1046(_parse_order)
       45    0.001    0.000    0.049    0.001 polytools.py:6007(_symbolic_factor_list)
     2280    0.002    0.000    0.049    0.000 densearith.py:435(dup_abs)
     9372    0.043    0.000    0.048    0.000 multinomial.py:4(binomial_coefficients)
    16736    0.006    0.000    0.048    0.000 power.py:737(<genexpr>)
    31113    0.023    0.000    0.047    0.000 domain.py:386(convert_from)
      765    0.025    0.000    0.047    0.000 densetools.py:138(dup_diff)
    19567    0.017    0.000    0.047    0.000 libmpf.py:636(mpf_gt)
      718    0.001    0.000    0.047    0.000 densetools.py:1223(dmp_clear_denoms)
     2280    0.023    0.000    0.047    0.000 densearith.py:449(<listcomp>)
     5008    0.037    0.000    0.046    0.000 densearith.py:835(dup_sqr)
    13842    0.011    0.000    0.046    0.000 galoistools.py:216(gf_trunc)
    20839    0.035    0.000    0.046    0.000 polyoptions.py:205(clone)
      718    0.015    0.000    0.045    0.000 densetools.py:1169(dup_clear_denoms)
   227793    0.045    0.000    0.045    0.000 galoistools.py:109(gf_int)
    14023    0.044    0.000    0.045    0.000 densebasic.py:1019(dup_to_dict)
    24830    0.010    0.000    0.044    0.000 polyutils.py:243(_is_coeff)
    21419    0.017    0.000    0.044    0.000 iterables.py:2956(is_sequence)
      135    0.001    0.000    0.042    0.000 polytools.py:4518(degree)
   311172    0.042    0.000    0.042    0.000 {method 'pop' of 'dict' objects}
    31081    0.041    0.000    0.041    0.000 galoistools.py:358(<listcomp>)
     7282    0.008    0.000    0.041    0.000 symbol.py:452(_hashable_content)
    32287    0.041    0.000    0.041    0.000 rationalfield.py:57(from_sympy)
      135    0.000    0.000    0.040    0.000 polytools.py:4360(poly_from_expr)
     6623    0.012    0.000    0.040    0.000 polytools.py:928(<listcomp>)
    78583    0.040    0.000    0.040    0.000 polyoptions.py:500(postprocess)
        5    0.002    0.000    0.039    0.008 matrices.py:923(_handle_creation_inputs)
    74636    0.018    0.000    0.039    0.000 expr.py:1133(<lambda>)
       19    0.000    0.000    0.039    0.002 mul.py:924(<listcomp>)
     6623    0.006    0.000    0.038    0.000 polyclasses.py:316(terms)
     9695    0.012    0.000    0.037    0.000 polyutils.py:155(_sort_factors)
    11620    0.014    0.000    0.036    0.000 evalf.py:152(pure_complex)
     9594    0.013    0.000    0.036    0.000 mul.py:1265(<lambda>)
    20842    0.021    0.000    0.036    0.000 iterables.py:1950(<genexpr>)
     3953    0.007    0.000    0.036    0.000 add.py:641(<lambda>)
      782    0.004    0.000    0.036    0.000 basic.py:677(is_comparable)
     1907    0.004    0.000    0.035    0.000 rootoftools.py:401(_eval_is_imaginary)
      930    0.013    0.000    0.035    0.000 sympify.py:78(_convert_numpy_types)
    13878    0.035    0.000    0.035    0.000 {method 'match' of 're.Pattern' objects}
     7444    0.012    0.000    0.035    0.000 power.py:1029(_eval_expand_power_exp)
    12667    0.016    0.000    0.034    0.000 iterables.py:524(numbered_symbols)
     6757    0.005    0.000    0.033    0.000 polytools.py:3356(<listcomp>)
    36302    0.028    0.000    0.033    0.000 mul.py:813(as_coeff_mul)
    52790    0.023    0.000    0.033    0.000 expr.py:1062(<listcomp>)
    82789    0.033    0.000    0.033    0.000 numbers.py:814(as_coeff_mul)
    76060    0.033    0.000    0.033    0.000 function.py:265(_valid_nargs)
    15474    0.019    0.000    0.032    0.000 polyclasses.py:202(per)
    13842    0.031    0.000    0.031    0.000 galoistools.py:229(<listcomp>)
    41852    0.031    0.000    0.031    0.000 exprtools.py:1055(<listcomp>)
    65795    0.031    0.000    0.031    0.000 {built-in method math.ldexp}
   346142    0.031    0.000    0.031    0.000 basic.py:1992(doit)
        5    0.000    0.000    0.031    0.006 matrices.py:805(__array__)
        5    0.005    0.001    0.031    0.006 dense.py:151(matrix2numpy)
    51971    0.030    0.000    0.030    0.000 integerring.py:57(from_sympy)
     3062    0.006    0.000    0.030    0.000 numbers.py:3493(__sub__)
     7995    0.009    0.000    0.030    0.000 densearith.py:297(dup_quo_ground)
       93    0.002    0.000    0.030    0.000 mul.py:2101(<listcomp>)
    11754    0.014    0.000    0.029    0.000 libmpf.py:59(prec_to_dps)
        9    0.000    0.000    0.029    0.003 function.py:597(_eval_derivative)
    41240    0.016    0.000    0.028    0.000 polyoptions.py:293(<genexpr>)
     1728    0.002    0.000    0.027    0.000 numbers.py:1954(__lt__)
    32144    0.019    0.000    0.027    0.000 basic.py:968(<listcomp>)
    66858    0.026    0.000    0.026    0.000 numbers.py:3140(__neg__)
    20634    0.017    0.000    0.026    0.000 polyclasses.py:268(to_tuple)
    78583    0.026    0.000    0.026    0.000 polyoptions.py:568(postprocess)
    13852    0.022    0.000    0.026    0.000 expr.py:1280(args_cnc)
    13005    0.004    0.000    0.026    0.000 repmatrix.py:232(__getitem__)
     7906    0.004    0.000    0.026    0.000 add.py:642(<genexpr>)
      222    0.003    0.000    0.026    0.000 str.py:263(_print_Mul)
    14305    0.017    0.000    0.025    0.000 printer.py:250(_get_initial_settings)
   111716    0.016    0.000    0.024    0.000 domain.py:1008(abs)
    78583    0.023    0.000    0.023    0.000 polyoptions.py:631(postprocess)
     8422    0.003    0.000    0.023    0.000 basic.py:24(as_Basic)
    18835    0.004    0.000    0.022    0.000 mul.py:1280(<genexpr>)
     6757    0.006    0.000    0.022    0.000 polyclasses.py:824(<listcomp>)
    13005    0.008    0.000    0.022    0.000 repmatrix.py:673(_getitem_RepMatrix)
     7024    0.005    0.000    0.022    0.000 tokenize.py:98(_compile)
     3062    0.002    0.000    0.021    0.000 numbers.py:3481(evalf)
     7995    0.021    0.000    0.021    0.000 densearith.py:323(<listcomp>)
     5877    0.019    0.000    0.021    0.000 ctx_mp_python.py:597(make_mpf)
      760    0.002    0.000    0.021    0.000 factortools.py:352(<listcomp>)
       90    0.002    0.000    0.020    0.000 constructor.py:131(_construct_composite)
    13952    0.018    0.000    0.019    0.000 polyoptions.py:413(preprocess)
      624    0.001    0.000    0.019    0.000 str.py:33(parenthesize)
    37740    0.019    0.000    0.019    0.000 complexes.py:68(eval)
    90116    0.019    0.000    0.019    0.000 densebasic.py:33(poly_TC)
     3062    0.003    0.000    0.019    0.000 numbers.py:3478(_eval_evalf)
       23    0.000    0.000    0.019    0.001 basic.py:1540(<lambda>)
        4    0.000    0.000    0.019    0.005 mul.py:958(_eval_derivative)
       23    0.000    0.000    0.019    0.001 simplify.py:416(<lambda>)
     6857    0.016    0.000    0.018    0.000 densebasic.py:1631(dup_terms_gcd)
    20726    0.014    0.000    0.018    0.000 domain.py:368(__hash__)
    10636    0.008    0.000    0.018    0.000 primetest.py:499(isprime)
     4211    0.009    0.000    0.017    0.000 piecewise.py:154(eval)
      548    0.002    0.000    0.017    0.000 numbers.py:2408(_eval_is_composite)
    12017    0.010    0.000    0.017    0.000 orderings.py:200(monomial_key)
    86872    0.017    0.000    0.017    0.000 rootoftools.py:378(_hashable_content)
    37740    0.017    0.000    0.017    0.000 complexes.py:190(eval)
    13581    0.012    0.000    0.017    0.000 densebasic.py:157(dmp_degree)
     2833    0.004    0.000    0.017    0.000 add.py:653(<lambda>)
     7024    0.003    0.000    0.016    0.000 re.py:250(compile)
        5    0.000    0.000    0.016    0.003 matrices.py:269(<listcomp>)
    78583    0.016    0.000    0.016    0.000 polyoptions.py:535(postprocess)
    29319    0.016    0.000    0.016    0.000 integerring.py:172(from_QQ)
     3022    0.004    0.000    0.016    0.000 function.py:2343(<listcomp>)
    78583    0.015    0.000    0.015    0.000 polyoptions.py:593(postprocess)
     5008    0.009    0.000    0.015    0.000 rootisolation.py:203(_mobius_from_interval)
   162029    0.015    0.000    0.015    0.000 polyoptions.py:31(default)
    78583    0.015    0.000    0.015    0.000 polyoptions.py:520(postprocess)
      930    0.001    0.000    0.015    0.000 <__array_function__ internals>:177(iscomplex)
    41852    0.015    0.000    0.015    0.000 exprtools.py:945(<listcomp>)
    23201    0.009    0.000    0.015    0.000 mul.py:689(<genexpr>)
      255    0.007    0.000    0.015    0.000 matrices.py:1102(<listcomp>)
     5008    0.005    0.000    0.015    0.000 rootisolation.py:212(_mobius_to_interval)
     6623    0.007    0.000    0.014    0.000 rootoftools.py:635(_count_roots)
     7040    0.008    0.000    0.014    0.000 re.py:289(_compile)
     2602    0.014    0.000    0.014    0.000 densetools.py:826(dup_mirror)
      100    0.000    0.000    0.014    0.000 rootoftools.py:712(_roots_trivial)
      932    0.003    0.000    0.014    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
     2442    0.004    0.000    0.014    0.000 precedence.py:118(precedence)
       91    0.000    0.000    0.014    0.000 polytools.py:6002(_factors_product)
    31416    0.013    0.000    0.013    0.000 numbers.py:3708(_as_mpf_val)
      509    0.002    0.000    0.013    0.000 densebasic.py:340(dmp_validate)
        9    0.000    0.000    0.013    0.001 polynomials.py:164(fdiff)
     7278    0.013    0.000    0.013    0.000 rootoftools.py:452(<listcomp>)
       45    0.000    0.000    0.013    0.000 str.py:159(_print_Function)
   132273    0.013    0.000    0.013    0.000 expr.py:3959(_eval_is_polynomial)
      210    0.000    0.000    0.013    0.000 function.py:2367(<listcomp>)
       45    0.000    0.000    0.013    0.000 str.py:39(stringify)
       45    0.000    0.000    0.013    0.000 str.py:40(<listcomp>)
   102302    0.013    0.000    0.013    0.000 boolalg.py:345(__bool__)
5895/5887    0.006    0.000    0.013    0.000 mul.py:897(_expandsums)
       90    0.000    0.000    0.012    0.000 polyutils.py:317(parallel_dict_from_expr)
       93    0.001    0.000    0.012    0.000 mul.py:2100(<listcomp>)
    47697    0.012    0.000    0.012    0.000 polytools.py:556(get_domain)
       36    0.000    0.000    0.012    0.000 tokenize.py:257(untokenize)
       45    0.000    0.000    0.011    0.000 rationaltools.py:10(together)
   358/45    0.001    0.000    0.011    0.000 rationaltools.py:63(_together)
       36    0.000    0.000    0.011    0.000 tokenize.py:183(untokenize)
    13005    0.007    0.000    0.011    0.000 domainmatrix.py:173(getitem_sympy)
    74922    0.011    0.000    0.011    0.000 add.py:494(<genexpr>)
14334/509    0.009    0.000    0.011    0.000 densebasic.py:312(_rec_validate)
        5    0.000    0.000    0.011    0.002 matrices.py:267(<listcomp>)
       36    0.010    0.000    0.011    0.000 tokenize.py:220(compat)
    56796    0.011    0.000    0.011    0.000 boolalg.py:420(__bool__)
      180    0.001    0.000    0.011    0.000 function.py:122(arity)
       90    0.000    0.000    0.011    0.000 polyutils.py:323(_parallel_dict_from_expr)
    10705    0.008    0.000    0.010    0.000 traversal.py:8(iterargs)
    10946    0.007    0.000    0.010    0.000 containers.py:58(__getitem__)
    29319    0.005    0.000    0.010    0.000 integerring.py:218(lcm)
      930    0.004    0.000    0.010    0.000 type_check.py:210(iscomplex)
    64717    0.010    0.000    0.010    0.000 expr.py:1148(<genexpr>)
    19906    0.010    0.000    0.010    0.000 dispatcher.py:232(<listcomp>)
        5    0.000    0.000    0.010    0.002 matrices.py:294(<listcomp>)
     3062    0.007    0.000    0.010    0.000 numbers.py:3583(__eq__)
    36344    0.008    0.000    0.010    0.000 mul.py:1265(<genexpr>)
       18    0.000    0.000    0.010    0.001 gamma_functions.py:120(eval)
    20634    0.009    0.000    0.009    0.000 densebasic.py:452(dmp_to_tuple)
   104930    0.009    0.000    0.009    0.000 {built-in method builtins.callable}
     4421    0.009    0.000    0.009    0.000 {built-in method math.ceil}
    14822    0.009    0.000    0.009    0.000 {method 'endswith' of 'str' objects}
       36    0.006    0.000    0.009    0.000 sympy_parser.py:665(repeated_decimals)
    63173    0.009    0.000    0.009    0.000 {built-in method builtins.issubclass}
    14505    0.009    0.000    0.009    0.000 polyoptions.py:53(preprocess)
       36    0.007    0.000    0.009    0.000 sympy_parser.py:535(auto_symbol)
    49910    0.009    0.000    0.009    0.000 boolalg.py:426(__eq__)
    60920    0.009    0.000    0.009    0.000 symbol.py:240(_diff_wrt)
     1378    0.004    0.000    0.009    0.000 power.py:46(integer_nthroot)
      444    0.001    0.000    0.009    0.000 precedence.py:61(precedence_Mul)
    65356    0.008    0.000    0.008    0.000 expr.py:977(_eval_power)
       98    0.000    0.000    0.008    0.000 polytools.py:1019(length)
    13246    0.007    0.000    0.008    0.000 symbol.py:730(<listcomp>)
    13246    0.007    0.000    0.008    0.000 polytools.py:4089(is_univariate)
    23087    0.008    0.000    0.008    0.000 numbers.py:1686(_eval_is_positive)
      180    0.000    0.000    0.008    0.000 inspect.py:3103(signature)
    14725    0.008    0.000    0.008    0.000 {method 'update' of 'dict' objects}
    15024    0.008    0.000    0.008    0.000 densearith.py:396(dup_lshift)
      180    0.000    0.000    0.008    0.000 inspect.py:2851(from_callable)
    26492    0.007    0.000    0.007    0.000 {method 'split' of 'str' objects}
      180    0.001    0.000    0.007    0.000 inspect.py:2218(_signature_from_callable)
    36840    0.007    0.000    0.007    0.000 numbers.py:2287(__index__)
    57566    0.007    0.000    0.007    0.000 polyoptions.py:705(default)
      510    0.006    0.000    0.007    0.000 matrices.py:1088(<genexpr>)
       18    0.000    0.000    0.007    0.000 mul.py:967(<lambda>)
     6623    0.007    0.000    0.007    0.000 polytools.py:358(free_symbols_in_domain)
    50920    0.006    0.000    0.006    0.000 polyoptions.py:278(default)
    39335    0.006    0.000    0.006    0.000 rationalfield.py:158(denom)
        1    0.000    0.000    0.006    0.006 bg_fields.py:46(__init__)
      807    0.003    0.000    0.006    0.000 numbers.py:2403(_eval_is_prime)
     8422    0.005    0.000    0.006    0.000 piecewise.py:45(cond)
    10674    0.005    0.000    0.006    0.000 basic.py:520(<listcomp>)
    13256    0.006    0.000    0.006    0.000 polytools.py:216(_hashable_content)
       36    0.005    0.000    0.006    0.000 sympy_parser.py:626(factorial_notation)
    17855    0.006    0.000    0.006    0.000 function.py:1893(_get_zero_with_shape_like)
      814    0.005    0.000    0.006    0.000 euclidtools.py:1129(_dup_zz_gcd_interpolate)
       36    0.004    0.000    0.006    0.000 sympy_parser.py:756(auto_number)
    52790    0.006    0.000    0.006    0.000 expr.py:1068(<listcomp>)
      180    0.002    0.000    0.006    0.000 inspect.py:2124(_signature_from_function)
    19763    0.006    0.000    0.006    0.000 expr.py:2164(as_numer_denom)
    26529    0.006    0.000    0.006    0.000 {method 'strip' of 'str' objects}
      210    0.000    0.000    0.005    0.000 containers.py:67(__contains__)
     7024    0.004    0.000    0.005    0.000 types.py:171(__get__)
     3040    0.003    0.000    0.005    0.000 polyconfig.py:47(query)
       91    0.000    0.000    0.005    0.000 polytools.py:6004(<listcomp>)
      222    0.005    0.000    0.005    0.000 {built-in method builtins.__build_class__}
    52790    0.005    0.000    0.005    0.000 orderings.py:43(__call__)
    31761    0.005    0.000    0.005    0.000 add.py:653(<genexpr>)
    29319    0.005    0.000    0.005    0.000 {built-in method gmpy2.gmpy2.lcm}
     7096    0.003    0.000    0.005    0.000 <string>:1(__new__)
     6623    0.004    0.000    0.005    0.000 polytools.py:405(domain)
     2154    0.003    0.000    0.005    0.000 rationalfield.py:48(get_ring)
     4416    0.004    0.000    0.005    0.000 densebasic.py:1812(dup_slice)
        1    0.000    0.000    0.005    0.005 {built-in method _warnings.warn}
        1    0.000    0.000    0.005    0.005 warnings.py:96(_showwarnmsg)
        1    0.000    0.000    0.005    0.005 warnings.py:20(_showwarnmsg_impl)
    12633    0.003    0.000    0.005    0.000 relational.py:1557(<genexpr>)
    11927    0.005    0.000    0.005    0.000 expr.py:1165(<listcomp>)
      930    0.005    0.000    0.005    0.000 {built-in method numpy.asanyarray}
     8272    0.004    0.000    0.005    0.000 polyutils.py:157(order_if_multiple_key)
        1    0.000    0.000    0.005    0.005 warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.005    0.005 warnings.py:35(_formatwarnmsg_impl)
        5    0.000    0.000    0.005    0.001 matrices.py:292(<listcomp>)
        1    0.000    0.000    0.004    0.004 linecache.py:15(getline)
        1    0.000    0.000    0.004    0.004 linecache.py:37(getlines)
        1    0.000    0.000    0.004    0.004 linecache.py:82(updatecache)
    26492    0.004    0.000    0.004    0.000 symbol.py:731(<genexpr>)
    34369    0.004    0.000    0.004    0.000 {method 'random' of '_random.Random' objects}
     8422    0.003    0.000    0.004    0.000 relational.py:1510(<genexpr>)
    12484    0.004    0.000    0.004    0.000 numbers.py:3192(__abs__)
      308    0.000    0.000    0.004    0.000 expr.py:247(__rpow__)
     6647    0.004    0.000    0.004    0.000 {method 'startswith' of 'str' objects}
    19344    0.004    0.000    0.004    0.000 numbers.py:3080(__neg__)
     6623    0.004    0.000    0.004    0.000 rootoftools.py:638(<listcomp>)
     7374    0.004    0.000    0.004    0.000 {built-in method gmpy2.gmpy2.isqrt}
        1    0.000    0.000    0.004    0.004 eigen.py:536(<listcomp>)
       90    0.000    0.000    0.004    0.000 domain.py:860(poly_ring)
       12    0.000    0.000    0.004    0.000 miscellaneous.py:67(sqrt)
      210    0.000    0.000    0.004    0.000 function.py:2363(<listcomp>)
      222    0.000    0.000    0.004    0.000 str.py:366(<listcomp>)
    13241    0.004    0.000    0.004    0.000 polytools.py:388(gen)
       46    0.001    0.000    0.004    0.000 sets.py:1921(__new__)
        1    0.004    0.004    0.004    0.004 {method 'readlines' of '_io._IOBase' objects}
        4    0.000    0.000    0.004    0.001 mul.py:912(<listcomp>)
    15606    0.004    0.000    0.004    0.000 evalf.py:483(evalf_float)
    10016    0.004    0.000    0.004    0.000 rationalfield.py:154(numer)
      206    0.001    0.000    0.004    0.000 expr.py:191(__abs__)
     2909    0.003    0.000    0.004    0.000 evalf.py:53(bitcount)
    13005    0.004    0.000    0.004    0.000 sdm.py:78(getitem)
       90    0.001    0.000    0.004    0.000 polynomialring.py:19(__init__)
        2    0.000    0.000    0.004    0.002 polyroots.py:47(roots_quadratic)
        2    0.000    0.000    0.003    0.002 polyroots.py:58(_sqrt)
      698    0.001    0.000    0.003    0.000 containers.py:98(__eq__)
    11707    0.003    0.000    0.003    0.000 add.py:397(class_key)
      222    0.000    0.000    0.003    0.000 str.py:367(<listcomp>)
    13583    0.003    0.000    0.003    0.000 densebasic.py:695(dmp_zero_p)
     6623    0.003    0.000    0.003    0.000 polyclasses.py:314(<listcomp>)
     2653    0.003    0.000    0.003    0.000 galoistools.py:389(gf_sub_ground)
      206    0.000    0.000    0.003    0.000 function.py:2227(_eval_is_commutative)
    13719    0.003    0.000    0.003    0.000 add.py:214(<genexpr>)
    12718    0.003    0.000    0.003    0.000 function.py:2295(variables)
     6623    0.003    0.000    0.003    0.000 str.py:147(_print_Dummy)
       90    0.000    0.000    0.003    0.000 rings.py:199(__new__)
        5    0.000    0.000    0.003    0.001 repmatrix.py:101(_dod_to_DomainMatrix)
     7710    0.003    0.000    0.003    0.000 str.py:847(_print_Symbol)
     6842    0.003    0.000    0.003    0.000 {method 'groups' of 're.Match' objects}
     3444    0.002    0.000    0.003    0.000 containers.py:64(__len__)
    21108    0.003    0.000    0.003    0.000 polyoptions.py:265(default)
        5    0.000    0.000    0.003    0.001 domainmatrix.py:106(__new__)
     1646    0.003    0.000    0.003    0.000 iterables.py:446(subsets)
     3062    0.003    0.000    0.003    0.000 numbers.py:3370(__neg__)
        5    0.000    0.000    0.003    0.001 sdm.py:68(__init__)
      956    0.002    0.000    0.003    0.000 polytools.py:1844(_gen_to_level)
      335    0.001    0.000    0.003    0.000 polytools.py:1864(degree)
     1203    0.002    0.000    0.003    0.000 numbers.py:2191(__rsub__)
    11627    0.003    0.000    0.003    0.000 mul.py:747(class_key)
     5114    0.003    0.000    0.003    0.000 function.py:1662(variable_count)
        6    0.000    0.000    0.003    0.000 complexes.py:522(eval)
    16844    0.002    0.000    0.002    0.000 relational.py:1225(_eval_is_eq)
      417    0.001    0.000    0.002    0.000 containers.py:103(__ne__)
     1530    0.001    0.000    0.002    0.000 sympy_parser.py:674(is_digit)
        5    0.000    0.000    0.002    0.000 matrices.py:266(<listcomp>)
    11751    0.002    0.000    0.002    0.000 mul.py:687(<genexpr>)
    13246    0.002    0.000    0.002    0.000 symbol.py:716(literal)
     8683    0.002    0.000    0.002    0.000 expr.py:3523(as_coeff_Add)
     7378    0.002    0.000    0.002    0.000 polytools.py:4270(_hashable_content)
    10643    0.002    0.000    0.002    0.000 evalf.py:1430(<lambda>)
      622    0.001    0.000    0.002    0.000 function.py:1641(_wrt_variables)
     3062    0.002    0.000    0.002    0.000 numbers.py:3417(__eq__)
     6813    0.002    0.000    0.002    0.000 polyutils.py:161(order_no_multiple_key)
    12633    0.002    0.000    0.002    0.000 wrapper.py:121(__new__)
     3063    0.002    0.000    0.002    0.000 {method 'replace' of 'str' objects}
      930    0.002    0.000    0.002    0.000 {method 'item' of 'numpy.generic' objects}
    10702    0.002    0.000    0.002    0.000 {method 'pop' of 'set' objects}
     1556    0.001    0.000    0.002    0.000 integerring.py:222(sqrt)
      540    0.001    0.000    0.002    0.000 inspect.py:2489(__init__)
      760    0.001    0.000    0.002    0.000 factortools.py:546(dup_zz_cyclotomic_factor)
       29    0.000    0.000    0.002    0.000 iostream.py:525(write)
       14    0.000    0.000    0.002    0.000 {built-in method builtins.print}
     3605    0.002    0.000    0.002    0.000 numbers.py:3136(__abs__)
    13010    0.002    0.000    0.002    0.000 sdm.py:75(<genexpr>)
     3022    0.002    0.000    0.002    0.000 basic.py:623(<setcomp>)
     8931    0.002    0.000    0.002    0.000 boolalg.py:351(__eq__)
      236    0.000    0.000    0.002    0.000 mul.py:1495(<genexpr>)
     6464    0.002    0.000    0.002    0.000 function.py:2307(point)
     7024    0.002    0.000    0.002    0.000 {method 'span' of 're.Match' objects}
       29    0.000    0.000    0.002    0.000 iostream.py:455(_schedule_flush)
        9    0.000    0.000    0.002    0.000 iostream.py:209(schedule)
      782    0.002    0.000    0.002    0.000 basic.py:711(<listcomp>)
      933    0.002    0.000    0.002    0.000 {built-in method numpy.zeros}
     6842    0.002    0.000    0.002    0.000 polyoptions.py:334(default)
        1    0.000    0.000    0.001    0.001 eigen.py:559(<listcomp>)
     1378    0.001    0.000    0.001    0.000 {built-in method gmpy2.gmpy2.iroot}
     4000    0.001    0.000    0.001    0.000 numbers.py:2414(as_numer_denom)
        4    0.001    0.000    0.001    0.000 {built-in method numpy.arange}
     6460    0.001    0.000    0.001    0.000 function.py:2302(expr)
     4698    0.001    0.000    0.001    0.000 function.py:1637(expr)
        5    0.000    0.000    0.001    0.000 matrices.py:268(<listcomp>)
        9    0.001    0.000    0.001    0.000 socket.py:480(send)
       25    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
     6108    0.001    0.000    0.001    0.000 numbers.py:2115(__int__)
     7024    0.001    0.000    0.001    0.000 enum.py:753(value)
      930    0.001    0.000    0.001    0.000 numeric.py:1859(isscalar)
     5202    0.001    0.000    0.001    0.000 evalf.py:1429(<lambda>)
      100    0.001    0.000    0.001    0.000 rootoftools.py:455(<listcomp>)
      622    0.001    0.000    0.001    0.000 function.py:1645(<listcomp>)
      335    0.000    0.000    0.001    0.000 polyclasses.py:516(degree)
       20    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
     4025    0.001    0.000    0.001    0.000 logic.py:151(fuzzy_not)
     1194    0.001    0.000    0.001    0.000 numbers.py:2292(_eval_is_odd)
      180    0.001    0.000    0.001    0.000 inspect.py:2772(__init__)
      420    0.000    0.000    0.001    0.000 function.py:1743(<genexpr>)
     6494    0.001    0.000    0.001    0.000 {method 'isidentifier' of 'str' objects}
        5    0.000    0.000    0.001    0.000 matrices.py:185(<listcomp>)
     3040    0.001    0.000    0.001    0.000 {method 'upper' of 'str' objects}
       20    0.000    0.000    0.001    0.000 _methods.py:42(_amin)
        5    0.000    0.000    0.001    0.000 {method 'format' of 'str' objects}
     1024    0.001    0.000    0.001    0.000 exprtools.py:27(_isnumber)
        9    0.000    0.000    0.001    0.000 expr.py:384(__format__)
       45    0.000    0.000    0.001    0.000 rationaltools.py:79(<listcomp>)
     3063    0.001    0.000    0.001    0.000 {method 'lower' of 'str' objects}
       16    0.000    0.000    0.001    0.000 power.py:1160(<listcomp>)
       10    0.000    0.000    0.001    0.000 factorials.py:137(eval)
        5    0.000    0.000    0.001    0.000 polytools.py:2371(diff)
    13005    0.001    0.000    0.001    0.000 expressionrawdomain.py:35(to_sympy)
       90    0.000    0.000    0.001    0.000 rings.py:181(_parse_symbols)
      280    0.001    0.000    0.001    0.000 str.py:713(_print_Rational)
        2    0.000    0.000    0.001    0.000 basic.py:300(sort_key)
     1794    0.001    0.000    0.001    0.000 integerring.py:164(from_ZZ)
      509    0.001    0.000    0.001    0.000 densebasic.py:330(_rec_strip)
        2    0.000    0.000    0.001    0.000 basic.py:328(<listcomp>)
        4    0.000    0.000    0.001    0.000 basic.py:321(inner_key)
      294    0.001    0.000    0.001    0.000 str.py:678(_print_Integer)
        5    0.000    0.000    0.001    0.000 polyclasses.py:608(diff)
      335    0.000    0.000    0.001    0.000 densebasic.py:194(dmp_degree_in)
       50    0.000    0.000    0.001    0.000 basic.py:556(as_dummy)
     1032    0.001    0.000    0.001    0.000 function.py:643(as_base_exp)
     2601    0.001    0.000    0.001    0.000 numbers.py:834(as_coeff_Add)
       90    0.000    0.000    0.001    0.000 polynomialring.py:43(new)
      542    0.001    0.000    0.001    0.000 enum.py:313(__call__)
       53    0.000    0.000    0.001    0.000 numbers.py:1710(__sub__)
     2208    0.001    0.000    0.001    0.000 densearith.py:416(dup_rshift)
        5    0.000    0.000    0.001    0.000 densetools.py:238(dmp_diff_in)
       24    0.000    0.000    0.001    0.000 numbers.py:1973(factors)
       21    0.000    0.000    0.001    0.000 expr.py:210(__rsub__)
        5    0.000    0.000    0.001    0.000 densetools.py:228(_rec_diff_in)
        5    0.000    0.000    0.001    0.000 densetools.py:181(dmp_diff)
      420    0.000    0.000    0.001    0.000 function.py:1742(<genexpr>)
       90    0.000    0.000    0.001    0.000 rings.py:329(ring_new)
     3062    0.001    0.000    0.001    0.000 relational.py:1220(_eval_is_ge)
       24    0.000    0.000    0.001    0.000 factor_.py:1459(factorrat)
    25/24    0.000    0.000    0.001    0.000 factor_.py:400(perfect_power)
        5    0.000    0.000    0.001    0.000 matrices.py:1028(<listcomp>)
        9    0.000    0.000    0.001    0.000 re.py:188(match)
       40    0.000    0.000    0.001    0.000 function.py:471(<listcomp>)
        7    0.000    0.000    0.001    0.000 monomials.py:400(_build)
     3086    0.001    0.000    0.001    0.000 sympy_parser.py:675(<genexpr>)
     4701    0.001    0.000    0.001    0.000 mul.py:2102(<genexpr>)
      180    0.000    0.000    0.000    0.000 inspect.py:493(unwrap)
       40    0.000    0.000    0.000    0.000 numbers.py:1962(__le__)
      255    0.000    0.000    0.000    0.000 matrices.py:1020(make_explicit_row)
       18    0.000    0.000    0.000    0.000 gamma_functions.py:23(intlike)
      412    0.000    0.000    0.000    0.000 basic.py:1989(xreplace)
      180    0.000    0.000    0.000    0.000 function.py:145(<listcomp>)
       10    0.000    0.000    0.000    0.000 numbers.py:727(__sub__)
        6    0.000    0.000    0.000    0.000 function.py:503(class_key)
       48    0.000    0.000    0.000    0.000 factor_.py:1011(factorint)
       90    0.000    0.000    0.000    0.000 rings.py:353(from_dict)
      593    0.000    0.000    0.000    0.000 galoistools.py:512(<listcomp>)
      206    0.000    0.000    0.000    0.000 function.py:1735(<setcomp>)
     2520    0.000    0.000    0.000    0.000 expr.py:3641(_expand_hint_key)
      139    0.000    0.000    0.000    0.000 function.py:479(_should_evalf)
        1    0.000    0.000    0.000    0.000 sre_compile.py:759(compile)
      720    0.000    0.000    0.000    0.000 inspect.py:2821(<genexpr>)
       14    0.000    0.000    0.000    0.000 generate.py:659(primerange)
        1    0.000    0.000    0.000    0.000 __init__.py:274(load)
      630    0.000    0.000    0.000    0.000 power.py:1076(<lambda>)
       37    0.000    0.000    0.000    0.000 function.py:613(_eval_is_commutative)
      180    0.000    0.000    0.000    0.000 function.py:147(<listcomp>)
      760    0.000    0.000    0.000    0.000 factortools.py:348(<lambda>)
      540    0.000    0.000    0.000    0.000 function.py:150(<lambda>)
       14    0.000    0.000    0.000    0.000 generate.py:153(primerange)
     2705    0.000    0.000    0.000    0.000 basic.py:1114(_eval_subs)
      574    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        6    0.000    0.000    0.000    0.000 function.py:226(nargs)
       90    0.000    0.000    0.000    0.000 polyutils.py:326(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method io.open}
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:177(block)
      636    0.000    0.000    0.000    0.000 function.py:376(_eval_subs)
       79    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        9    0.000    0.000    0.000    0.000 {function Expr.__format__ at 0x000001CC3F99E160}
        4    0.000    0.000    0.000    0.000 exponential.py:658(eval)
        1    0.000    0.000    0.000    0.000 tokenize.py:388(open)
      760    0.000    0.000    0.000    0.000 euclidtools.py:861(_dup_rr_trivial_gcd)
       18    0.000    0.000    0.000    0.000 generate.py:31(_as_int_ceiling)
       20    0.000    0.000    0.000    0.000 expr.py:200(__radd__)
        2    0.000    0.000    0.000    0.000 shape_base.py:680(block)
      767    0.000    0.000    0.000    0.000 function.py:372(func)
      100    0.000    0.000    0.000    0.000 rootisolation.py:540(_isolate_zero)
        4    0.000    0.000    0.000    0.000 basic.py:277(fromiter)
       90    0.000    0.000    0.000    0.000 polyoptions.py:360(preprocess)
        5    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
      226    0.000    0.000    0.000    0.000 numbers.py:712(sort_key)
        5    0.000    0.000    0.000    0.000 _methods.py:38(_amax)
        1    0.000    0.000    0.000    0.000 sre_parse.py:937(parse)
      462    0.000    0.000    0.000    0.000 exponential.py:806(as_base_exp)
      654    0.000    0.000    0.000    0.000 basic.py:1995(class_key)
      444    0.000    0.000    0.000    0.000 str.py:272(<genexpr>)
        1    0.000    0.000    0.000    0.000 tokenize.py:295(detect_encoding)
      520    0.000    0.000    0.000    0.000 matrices.py:1001(<lambda>)
        1    0.000    0.000    0.000    0.000 monomials.py:408(mul)
      472    0.000    0.000    0.000    0.000 printer.py:283(order)
       98    0.000    0.000    0.000    0.000 numbers.py:3414(__hash__)
      2/1    0.000    0.000    0.000    0.000 sre_parse.py:435(_parse_sub)
      2/1    0.000    0.000    0.000    0.000 sre_parse.py:493(_parse)
      562    0.000    0.000    0.000    0.000 precedence.py:73(precedence_Integer)
      255    0.000    0.000    0.000    0.000 matrices.py:1011(make_explicit)
      634    0.000    0.000    0.000    0.000 symbol.py:344(_eval_subs)
        1    0.000    0.000    0.000    0.000 tokenize.py:319(read_or_stop)
        1    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
      270    0.000    0.000    0.000    0.000 polyutils.py:328(<genexpr>)
       40    0.000    0.000    0.000    0.000 numbers.py:2275(__le__)
      222    0.000    0.000    0.000    0.000 function.py:2207(<listcomp>)
      801    0.000    0.000    0.000    0.000 {method 'index' of 'tuple' objects}
      538    0.000    0.000    0.000    0.000 polyoptions.py:217(__setattr__)
      930    0.000    0.000    0.000    0.000 type_check.py:206(_is_type_dispatcher)
      222    0.000    0.000    0.000    0.000 function.py:2199(CustomStrPrinter)
        1    0.000    0.000    0.000    0.000 __init__.py:299(loads)
      542    0.000    0.000    0.000    0.000 enum.py:631(__new__)
      448    0.000    0.000    0.000    0.000 evalf.py:1426(<lambda>)
       50    0.000    0.000    0.000    0.000 sets.py:90(_infimum_key)
        2    0.000    0.000    0.000    0.000 shape_base.py:892(_block_concatenate)
        1    0.000    0.000    0.000    0.000 {method 'read' of '_io.TextIOWrapper' objects}
     14/2    0.000    0.000    0.000    0.000 shape_base.py:650(_block)
        1    0.000    0.000    0.000    0.000 expr.py:1648(as_coefficient)
      260    0.000    0.000    0.000    0.000 matrices.py:1050(<genexpr>)
       36    0.000    0.000    0.000    0.000 sympy_parser.py:586(lambda_notation)
        1    0.000    0.000    0.000    0.000 decoder.py:332(decode)
     1554    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
       96    0.000    0.000    0.000    0.000 numbers.py:3084(_eval_power)
      360    0.000    0.000    0.000    0.000 inspect.py:158(isfunction)
       90    0.000    0.000    0.000    0.000 rings.py:316(domain_new)
     1080    0.000    0.000    0.000    0.000 inspect.py:2551(kind)
        7    0.000    0.000    0.000    0.000 textwrap.py:414(dedent)
      310    0.000    0.000    0.000    0.000 numbers.py:3250(__abs__)
       39    0.000    0.000    0.000    0.000 mul.py:1372(<lambda>)
        6    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.concatenate}
        1    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)
      206    0.000    0.000    0.000    0.000 function.py:1584(_eval_is_commutative)
       60    0.000    0.000    0.000    0.000 exprtools.py:1087(<genexpr>)
      706    0.000    0.000    0.000    0.000 basic.py:162(_hashable_content)
       24    0.000    0.000    0.000    0.000 symbol.py:447(sort_key)
      108    0.000    0.000    0.000    0.000 numbers.py:3867(__hash__)
      312    0.000    0.000    0.000    0.000 precedence.py:67(precedence_Rational)
        5    0.000    0.000    0.000    0.000 matrices.py:183(<listcomp>)
        1    0.000    0.000    0.000    0.000 monomials.py:462(div)
        2    0.000    0.000    0.000    0.000 symbol.py:323(__xnew_cached_)
       90    0.000    0.000    0.000    0.000 printer.py:324(<genexpr>)
       39    0.000    0.000    0.000    0.000 mul.py:1374(<lambda>)
       45    0.000    0.000    0.000    0.000 polytools.py:6011(<listcomp>)
        2    0.000    0.000    0.000    0.000 shape_base.py:856(_block_setup)
        1    0.000    0.000    0.000    0.000 sre_compile.py:598(_code)
      6/2    0.000    0.000    0.000    0.000 shape_base.py:660(<listcomp>)
      308    0.000    0.000    0.000    0.000 numbers.py:2038(as_coeff_Add)
        1    0.000    0.000    0.000    0.000 eigen.py:565(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method nt.stat}
      540    0.000    0.000    0.000    0.000 inspect.py:2543(default)
       36    0.000    0.000    0.000    0.000 numbers.py:3850(__ne__)
      180    0.000    0.000    0.000    0.000 inspect.py:513(_is_wrapper)
      540    0.000    0.000    0.000    0.000 inspect.py:2539(name)
        2    0.000    0.000    0.000    0.000 eigen.py:566(<listcomp>)
        1    0.000    0.000    0.000    0.000 add.py:570(as_numer_denom)
       90    0.000    0.000    0.000    0.000 polynomialring.py:46(zero)
        1    0.000    0.000    0.000    0.000 monomials.py:434(mulpow)
       78    0.000    0.000    0.000    0.000 mul.py:1372(<genexpr>)
       44    0.000    0.000    0.000    0.000 numbers.py:3838(__eq__)
        1    0.000    0.000    0.000    0.000 monomials.py:478(lcm)
      173    0.000    0.000    0.000    0.000 function.py:614(<genexpr>)
       36    0.000    0.000    0.000    0.000 tokenize.py:164(__init__)
       39    0.000    0.000    0.000    0.000 mul.py:1373(<lambda>)
        9    0.000    0.000    0.000    0.000 threading.py:1071(is_alive)
        5    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       72    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
      5/1    0.000    0.000    0.000    0.000 sre_compile.py:71(_compile)
        1    0.000    0.000    0.000    0.000 monomials.py:492(gcd)
      181    0.000    0.000    0.000    0.000 rings.py:308(zero)
        5    0.000    0.000    0.000    0.000 matrices.py:181(<listcomp>)
        1    0.000    0.000    0.000    0.000 monomials.py:422(pow)
        1    0.000    0.000    0.000    0.000 monomials.py:448(ldiv)
      206    0.000    0.000    0.000    0.000 function.py:1733(<dictcomp>)
      180    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
      180    0.000    0.000    0.000    0.000 rings.py:187(<genexpr>)
       29    0.000    0.000    0.000    0.000 iostream.py:436(_is_master_process)
       16    0.000    0.000    0.000    0.000 expansion.py:624(__getitem__)
       78    0.000    0.000    0.000    0.000 mul.py:1374(<genexpr>)
       45    0.000    0.000    0.000    0.000 matrices.py:64(<listcomp>)
      224    0.000    0.000    0.000    0.000 polyutils.py:240(_is_coeff)
       45    0.000    0.000    0.000    0.000 polyoptions.py:751(allowed_flags)
      180    0.000    0.000    0.000    0.000 rings.py:189(<genexpr>)
      226    0.000    0.000    0.000    0.000 numbers.py:708(class_key)
       48    0.000    0.000    0.000    0.000 factor_.py:199(trailing)
       14    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
     14/2    0.000    0.000    0.000    0.000 shape_base.py:452(_block_check_depths_match)
        7    0.000    0.000    0.000    0.000 re.py:203(sub)
        2    0.000    0.000    0.000    0.000 vector_calculus_3d.py:554(__init__)
        5    0.000    0.000    0.000    0.000 symbol.py:357(sort_key)
       92    0.000    0.000    0.000    0.000 orderings.py:30(__hash__)
        1    0.000    0.000    0.000    0.000 cp1252.py:22(decode)
        2    0.000    0.000    0.000    0.000 basic.py:1261(has_free)
      180    0.000    0.000    0.000    0.000 constructor.py:146(<genexpr>)
        6    0.000    0.000    0.000    0.000 generate.py:276(search)
      260    0.000    0.000    0.000    0.000 sdm.py:73(<genexpr>)
     18/6    0.000    0.000    0.000    0.000 shape_base.py:497(<genexpr>)
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_decode}
       10    0.000    0.000    0.000    0.000 matrices.py:1033(<genexpr>)
        8    0.000    0.000    0.000    0.000 expansion.py:633(__setitem__)
       14    0.000    0.000    0.000    0.000 monomials.py:405(_vars)
       12    0.000    0.000    0.000    0.000 expansion.py:191(__init__)
        8    0.000    0.000    0.000    0.000 {built-in method math.prod}
      180    0.000    0.000    0.000    0.000 inspect.py:2857(parameters)
      180    0.000    0.000    0.000    0.000 {built-in method builtins.id}
        9    0.000    0.000    0.000    0.000 threading.py:1017(_wait_for_tstate_lock)
        2    0.000    0.000    0.000    0.000 expansion.py:592(__init__)
      180    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        5    0.000    0.000    0.000    0.000 matrices.py:1005(<lambda>)
       36    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       78    0.000    0.000    0.000    0.000 mul.py:1373(<genexpr>)
      5/1    0.000    0.000    0.000    0.000 abc.py:100(__subclasscheck__)
        5    0.000    0.000    0.000    0.000 repmatrix.py:347(_fromrep)
        2    0.000    0.000    0.000    0.000 vector_calculus_3d.py:500(__init__)
        6    0.000    0.000    0.000    0.000 factor_.py:910(_factorint_small)
        9    0.000    0.000    0.000    0.000 polytools.py:6047(<listcomp>)
       39    0.000    0.000    0.000    0.000 mul.py:1395(<listcomp>)
      5/1    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
        1    0.000    0.000    0.000    0.000 sre_compile.py:536(_compile_info)
        7    0.000    0.000    0.000    0.000 {method 'findall' of 're.Pattern' objects}
        5    0.000    0.000    0.000    0.000 codecs.py:319(decode)
      180    0.000    0.000    0.000    0.000 polyoptions.py:388(default)
       36    0.000    0.000    0.000    0.000 tokenize.py:612(generate_tokens)
       29    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
       29    0.000    0.000    0.000    0.000 {built-in method nt.getpid}
        9    0.000    0.000    0.000    0.000 iostream.py:97(_event_pipe)
      6/2    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
       48    0.000    0.000    0.000    0.000 evalf.py:1425(<lambda>)
       24    0.000    0.000    0.000    0.000 expr.py:2010(as_coeff_mul)
       29    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 _bootlocale.py:11(getpreferredencoding)
        2    0.000    0.000    0.000    0.000 sre_compile.py:276(_optimize_charset)
        1    0.000    0.000    0.000    0.000 tokenize.py:325(find_cookie)
        2    0.000    0.000    0.000    0.000 polytools.py:930(all_coeffs)
      4/2    0.000    0.000    0.000    0.000 vector_calculus_3d.py:512(_get_rank)
       90    0.000    0.000    0.000    0.000 domain.py:374(tp)
        6    0.000    0.000    0.000    0.000 integers.py:27(eval)
       96    0.000    0.000    0.000    0.000 expr.py:2458(could_extract_minus_sign)
        5    0.000    0.000    0.000    0.000 domainmatrix.py:188(from_rep)
    38/10    0.000    0.000    0.000    0.000 shape_base.py:669(_block_dispatcher)
        4    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
        1    0.000    0.000    0.000    0.000 dispatcher.py:261(dispatch)
        9    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
       51    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       11    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
       14    0.000    0.000    0.000    0.000 monomials.py:406(<listcomp>)
        2    0.000    0.000    0.000    0.000 matrices.py:609(__init__)
        1    0.000    0.000    0.000    0.000 enum.py:938(__and__)
        1    0.000    0.000    0.000    0.000 rings.py:264(_gens)
       90    0.000    0.000    0.000    0.000 constructor.py:23(<lambda>)
        5    0.000    0.000    0.000    0.000 matrices.py:98(__init__)
        9    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        5    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        6    0.000    0.000    0.000    0.000 integers.py:297(_eval_number)
       10    0.000    0.000    0.000    0.000 repmatrix.py:104(<genexpr>)
        1    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
        4    0.000    0.000    0.000    0.000 exponential.py:958(_eval_is_finite)
        1    0.000    0.000    0.000    0.000 {built-in method _locale._getdefaultlocale}
        1    0.000    0.000    0.000    0.000 numbers.py:4396(_eval_power)
       46    0.000    0.000    0.000    0.000 expr.py:1628(as_expr)
       15    0.000    0.000    0.000    0.000 factor_.py:518(_factors)
        2    0.000    0.000    0.000    0.000 dispatcher.py:291(dispatch_iter)
       10    0.000    0.000    0.000    0.000 {built-in method gmpy2.gmpy2.fac}
        2    0.000    0.000    0.000    0.000 polytools.py:944(<listcomp>)
       10    0.000    0.000    0.000    0.000 repmatrix.py:119(<genexpr>)
        1    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
        3    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
       32    0.000    0.000    0.000    0.000 power.py:1156(<lambda>)
        4    0.000    0.000    0.000    0.000 traversal.py:36(iterfreeargs)
        1    0.000    0.000    0.000    0.000 eigen.py:561(<listcomp>)
        9    0.000    0.000    0.000    0.000 mul.py:1500(<genexpr>)
        2    0.000    0.000    0.000    0.000 matrices.py:173(<listcomp>)
        1    0.000    0.000    0.000    0.000 rings.py:570(__hash__)
       10    0.000    0.000    0.000    0.000 matrices.py:1038(<genexpr>)
        9    0.000    0.000    0.000    0.000 threading.py:513(is_set)
        9    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        8    0.000    0.000    0.000    0.000 numbers.py:1849(__int__)
        4    0.000    0.000    0.000    0.000 matrices.py:482(__init__)
        2    0.000    0.000    0.000    0.000 numbers.py:3580(__hash__)
        2    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
        6    0.000    0.000    0.000    0.000 numbers.py:2121(ceiling)
        2    0.000    0.000    0.000    0.000 factor_.py:248(multiplicity)
       11    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
        8    0.000    0.000    0.000    0.000 shape_base.py:528(_atleast_nd)
        2    0.000    0.000    0.000    0.000 polyclasses.py:320(all_coeffs)
        3    0.000    0.000    0.000    0.000 generate.py:544(nextprime)
        5    0.000    0.000    0.000    0.000 common.py:594(shape)
        5    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
        8    0.000    0.000    0.000    0.000 fromnumeric.py:3206(size)
        6    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
        1    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        1    0.000    0.000    0.000    0.000 warnings.py:403(__init__)
        6    0.000    0.000    0.000    0.000 generate.py:89(extend)
        1    0.000    0.000    0.000    0.000 bg_fields.py:17(__init__)
        5    0.000    0.000    0.000    0.000 str.py:910(_print_Zero)
        1    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
        6    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
       16    0.000    0.000    0.000    0.000 power.py:1159(<listcomp>)
        7    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
        1    0.000    0.000    0.000    0.000 tokenize.py:284(_get_normal_name)
        6    0.000    0.000    0.000    0.000 {built-in method _bisect.bisect_right}
        2    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
        2    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        1    0.000    0.000    0.000    0.000 monomials.py:473(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        2    0.000    0.000    0.000    0.000 matrices.py:174(<listcomp>)
        1    0.000    0.000    0.000    0.000 add.py:605(<listcomp>)
        1    0.000    0.000    0.000    0.000 factor_.py:1586(divisors)
        4    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        2    0.000    0.000    0.000    0.000 expansion.py:619(<dictcomp>)
        2    0.000    0.000    0.000    0.000 matrices.py:175(<listcomp>)
        1    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
        8    0.000    0.000    0.000    0.000 fromnumeric.py:3164(ndim)
        2    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
        1    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.lookup}
        1    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
        6    0.000    0.000    0.000    0.000 factor_.py:924(done)
        1    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 monomials.py:502(<listcomp>)
        2    0.000    0.000    0.000    0.000 expansion.py:621(<dictcomp>)
        2    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        2    0.000    0.000    0.000    0.000 polyclasses.py:1081(__bool__)
        1    0.000    0.000    0.000    0.000 monomials.py:488(<listcomp>)
        3    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
        2    0.000    0.000    0.000    0.000 basic.py:782(_sorted_args)
        1    0.000    0.000    0.000    0.000 rings.py:302(monomial_basis)
        1    0.000    0.000    0.000    0.000 monomials.py:397(__init__)
        1    0.000    0.000    0.000    0.000 monomials.py:458(<listcomp>)
        1    0.000    0.000    0.000    0.000 monomials.py:418(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 monomials.py:444(<listcomp>)
        2    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
        1    0.000    0.000    0.000    0.000 monomials.py:430(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        2    0.000    0.000    0.000    0.000 basic.py:295(class_key)
        3    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        2    0.000    0.000    0.000    0.000 polyclasses.py:326(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 rings.py:288(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'popitem' of 'dict' objects}