         15767548 function calls (14619693 primitive calls) in 8.955 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    8.955    8.955 {built-in method builtins.exec}
        1    0.000    0.000    8.955    8.955 <string>:1(<module>)
        1    0.001    0.001    8.955    8.955 2568930701.py:12(int_jacobi)
260409/119965    0.336    0.000    7.392    0.000 cache.py:67(wrapper)
      576    0.015    0.000    6.092    0.011 basic.py:802(subs)
33571/555    0.061    0.000    6.022    0.011 basic.py:1002(_subs)
20040/519    0.144    0.000    6.010    0.012 basic.py:1074(fallback)
       36    0.003    0.000    5.212    0.145 2568930701.py:18(<listcomp>)
20841/20140    0.184    0.000    3.390    0.000 operations.py:52(__new__)
  5568/36    0.011    0.000    3.078    0.085 operations.py:453(doit)
  5568/36    0.007    0.000    3.069    0.085 operations.py:455(<listcomp>)
      108    0.003    0.000    3.026    0.028 function.py:2230(doit)
15621/15531    0.298    0.000    2.663    0.000 mul.py:197(flatten)
    92311    0.635    0.000    2.206    0.000 basic.py:2016(_aresame)
115920/46043    0.066    0.000    2.172    0.000 assumptions.py:477(getit)
      416    0.007    0.000    1.891    0.005 function.py:1237(__new__)
      208    0.002    0.000    1.874    0.009 function.py:1906(_derivative_dispatch)
      108    0.000    0.000    1.863    0.017 expr.py:3553(diff)
15240/11068    0.243    0.000    1.574    0.000 assumptions.py:489(_ask)
    22352    0.702    0.000    1.404    0.000 facts.py:499(deduce_all_facts)
       36    0.000    0.000    1.249    0.035 exprtools.py:1167(factor_terms)
  7014/36    0.035    0.000    1.249    0.035 exprtools.py:1228(do)
     3272    0.002    0.000    0.973    0.000 basic.py:1125(xreplace)
59528/3272    0.097    0.000    0.971    0.000 basic.py:1190(_xreplace)
   834/36    0.001    0.000    0.865    0.024 exprtools.py:1253(<listcomp>)
 1362/192    0.002    0.000    0.788    0.004 exprtools.py:1274(<listcomp>)
      834    0.005    0.000    0.779    0.001 exprtools.py:991(gcd_terms)
      834    0.009    0.000    0.744    0.001 exprtools.py:926(_gcd_terms)
   152158    0.733    0.000    0.736    0.000 traversal.py:116(__init__)
30125/29045    0.020    0.000    0.726    0.000 {built-in method builtins.any}
      504    0.006    0.000    0.659    0.001 power.py:282(__new__)
      288    0.003    0.000    0.644    0.002 add.py:455(_eval_power)
      864    0.000    0.000    0.634    0.001 add.py:458(<genexpr>)
   191426    0.143    0.000    0.622    0.000 sympify.py:503(_sympify)
66121/46471    0.042    0.000    0.607    0.000 decorators.py:58(__sympifyit_wrapper)
    11424    0.009    0.000    0.556    0.000 assumptions.py:461(copy)
   228/36    0.002    0.000    0.554    0.015 simplify.py:349(signsimp)
    11712    0.031    0.000    0.550    0.000 assumptions.py:449(__init__)
215473/202873    0.114    0.000    0.501    0.000 sympify.py:102(sympify)
655606/654598    0.144    0.000    0.490    0.000 {built-in method builtins.all}
    16896    0.054    0.000    0.484    0.000 exprtools.py:300(__init__)
    61940    0.046    0.000    0.477    0.000 numbers.py:1867(__eq__)
    55916    0.036    0.000    0.446    0.000 numbers.py:2238(__eq__)
  1474942    0.306    0.000    0.378    0.000 facts.py:533(<genexpr>)
      228    0.002    0.000    0.337    0.001 cse_opts.py:10(sub_pre)
  288/180    0.000    0.000    0.333    0.002 mul.py:1284(_eval_is_infinite)
50725/49771    0.066    0.000    0.333    0.000 numbers.py:2200(__mul__)
  864/540    0.000    0.000    0.333    0.001 mul.py:1285(<genexpr>)
     4702    0.062    0.000    0.326    0.000 add.py:184(flatten)
122844/103981    0.172    0.000    0.321    0.000 basic.py:350(__eq__)
3318/1632    0.008    0.000    0.319    0.000 add.py:1157(as_content_primitive)
     2112    0.002    0.000    0.318    0.000 exprtools.py:878(quo)
    62476    0.155    0.000    0.308    0.000 numbers.py:1369(__eq__)
17549/17486    0.027    0.000    0.306    0.000 numbers.py:1734(__mul__)
     2112    0.006    0.000    0.299    0.000 exprtools.py:866(mul)
6096/2796    0.024    0.000    0.298    0.000 mul.py:1984(as_content_primitive)
       36    0.000    0.000    0.294    0.008 simplify.py:410(<listcomp>)
    22737    0.039    0.000    0.293    0.000 numbers.py:1291(__mul__)
    16896    0.015    0.000    0.292    0.000 containers.py:332(<lambda>)
1622000/1619184    0.276    0.000    0.288    0.000 {built-in method builtins.isinstance}
   238340    0.054    0.000    0.286    0.000 traversal.py:163(__next__)
  912/684    0.001    0.000    0.280    0.000 exprtools.py:1241(<listcomp>)
    16896    0.068    0.000    0.275    0.000 containers.py:255(__new__)
3318/1632    0.007    0.000    0.260    0.000 add.py:1177(<listcomp>)
   239164    0.043    0.000    0.239    0.000 {built-in method builtins.next}
     8448    0.015    0.000    0.220    0.000 exprtools.py:821(__init__)
      625    0.002    0.000    0.214    0.000 power.py:1428(_eval_is_algebraic)
      625    0.001    0.000    0.206    0.000 power.py:1429(_is_one)
775280/384178    0.169    0.000    0.201    0.000 traversal.py:120(_preorder_traversal)
    92521    0.115    0.000    0.195    0.000 random.py:293(shuffle)
      528    0.002    0.000    0.193    0.000 basic.py:1326(replace)
    11913    0.011    0.000    0.190    0.000 decorators.py:224(_func)
    36301    0.015    0.000    0.190    0.000 numbers.py:1399(__ne__)
      100    0.001    0.000    0.186    0.002 function.py:2346(_eval_subs)
41448/528    0.029    0.000    0.177    0.000 basic.py:1550(walk)
    11913    0.010    0.000    0.168    0.000 decorators.py:99(binary_op_wrapper)
18264/528    0.014    0.000    0.162    0.000 basic.py:1556(<listcomp>)
      824    0.004    0.000    0.159    0.000 function.py:2341(_hashable_content)
     4224    0.009    0.000    0.158    0.000 exprtools.py:464(mul)
459390/417570    0.109    0.000    0.155    0.000 basic.py:153(__hash__)
      478    0.001    0.000    0.146    0.000 function.py:2330(__eq__)
   218557    0.100    0.000    0.144    0.000 <frozen importlib._bootstrap>:389(parent)
    33825    0.037    0.000    0.142    0.000 numbers.py:1178(_new)
   392734    0.142    0.000    0.142    0.000 facts.py:482(_tell)
   365560    0.090    0.000    0.141    0.000 {built-in method builtins.getattr}
      108    0.001    0.000    0.141    0.001 add.py:693(_eval_is_zero)
    88949    0.056    0.000    0.137    0.000 numbers.py:1463(__hash__)
    44770    0.016    0.000    0.133    0.000 basic.py:392(__ne__)
     2112    0.007    0.000    0.131    0.000 exprtools.py:497(normal)
    30746    0.066    0.000    0.130    0.000 mul.py:467(_gather)
    41448    0.014    0.000    0.120    0.000 basic.py:1571(rec_replace)
    10888    0.019    0.000    0.119    0.000 numbers.py:1277(__add__)
55410/3656    0.073    0.000    0.116    0.000 basic.py:528(free_symbols)
6168/4344    0.018    0.000    0.115    0.000 power.py:1853(as_content_primitive)
      576    0.002    0.000    0.114    0.000 mul.py:1521(_eval_pos_neg)
   127880    0.070    0.000    0.113    0.000 numbers.py:808(__hash__)
     2946    0.005    0.000    0.111    0.000 exprtools.py:863(as_expr)
115510/9516    0.023    0.000    0.109    0.000 basic.py:544(<genexpr>)
28418/24992    0.043    0.000    0.108    0.000 sorting.py:203(ordered)
    12858    0.019    0.000    0.107    0.000 mul.py:182(__neg__)
    20007    0.014    0.000    0.107    0.000 {method 'sort' of 'list' objects}
  1223774    0.107    0.000    0.107    0.000 {method 'get' of 'dict' objects}
      492    0.001    0.000    0.106    0.000 basic.py:449(atoms)
     1248    0.001    0.000    0.106    0.000 add.py:415(could_extract_minus_sign)
     1248    0.005    0.000    0.105    0.000 add.py:20(_could_extract_minus_sign)
      492    0.012    0.000    0.103    0.000 basic.py:523(<setcomp>)
      834    0.001    0.000    0.103    0.000 exprtools.py:977(<listcomp>)
      100    0.002    0.000    0.100    0.001 function.py:2165(__new__)
      346    0.000    0.000    0.093    0.000 function.py:2335(__ne__)
16010/9449    0.038    0.000    0.092    0.000 basic.py:204(compare)
     2808    0.002    0.000    0.091    0.000 logic.py:43(_fuzzy_group)
     6072    0.003    0.000    0.088    0.000 expr.py:215(__mul__)
    24847    0.015    0.000    0.087    0.000 mul.py:2060(_keep_coeff)
    20827    0.056    0.000    0.086    0.000 basic.py:1920(_exec_constructor_postprocessors)
    43461    0.048    0.000    0.084    0.000 operations.py:108(_from_args)
     3172    0.020    0.000    0.079    0.000 power.py:833(_eval_subs)
    34025    0.064    0.000    0.079    0.000 numbers.py:149(mpf_norm)
    22737    0.049    0.000    0.079    0.000 libmpf.py:884(python_mpf_mul)
      824    0.003    0.000    0.078    0.000 basic.py:602(canonical_variables)
    13851    0.010    0.000    0.078    0.000 numbers.py:674(_as_mpf_op)
   108807    0.054    0.000    0.074    0.000 random.py:250(_randbelow_with_getrandbits)
      100    0.001    0.000    0.074    0.001 function.py:1682(_eval_subs)
     5736    0.004    0.000    0.074    0.000 numbers.py:738(__mul__)
     3888    0.018    0.000    0.072    0.000 add.py:1077(primitive)
31332/4116    0.010    0.000    0.071    0.000 {built-in method builtins.sum}
     1278    0.003    0.000    0.070    0.000 exprtools.py:889(gcd)
    16776    0.005    0.000    0.066    0.000 simplify.py:405(<lambda>)
    86479    0.045    0.000    0.065    0.000 basic.py:126(__new__)
      824    0.003    0.000    0.064    0.000 function.py:2312(free_symbols)
     1032    0.002    0.000    0.064    0.000 function.py:1670(free_symbols)
   433513    0.063    0.000    0.063    0.000 basic.py:750(args)
    15373    0.007    0.000    0.063    0.000 mul.py:33(_mulsort)
    12924    0.062    0.000    0.062    0.000 mul.py:1620(_eval_subs)
    38859    0.028    0.000    0.060    0.000 numbers.py:1970(__hash__)
   148203    0.059    0.000    0.059    0.000 {method 'update' of 'set' objects}
     2556    0.004    0.000    0.059    0.000 exprtools.py:729(gcd)
      288    0.000    0.000    0.058    0.000 mul.py:1556(_eval_is_extended_negative)
      228    0.007    0.000    0.057    0.000 cse_opts.py:41(sub_post)
     1254    0.002    0.000    0.057    0.000 add.py:1254(__neg__)
      288    0.000    0.000    0.056    0.000 mul.py:1503(_eval_is_extended_positive)
      228    0.000    0.000    0.055    0.000 cse_opts.py:14(<listcomp>)
      300    0.000    0.000    0.054    0.000 function.py:1719(<genexpr>)
     7548    0.013    0.000    0.054    0.000 containers.py:52(__new__)
     3175    0.004    0.000    0.054    0.000 numbers.py:1695(__add__)
     4534    0.002    0.000    0.053    0.000 add.py:36(_addsort)
     4956    0.008    0.000    0.052    0.000 numbers.py:2159(__add__)
    16896    0.007    0.000    0.052    0.000 containers.py:259(<listcomp>)
162292/143331    0.031    0.000    0.051    0.000 {built-in method builtins.hash}
     2520    0.003    0.000    0.049    0.000 expr.py:252(__truediv__)
    12296    0.010    0.000    0.049    0.000 numbers.py:703(_eval_subs)
     2868    0.013    0.000    0.049    0.000 sorting.py:180(_nodes)
      288    0.000    0.000    0.046    0.000 mul.py:1414(_eval_is_extended_real)
      288    0.001    0.000    0.046    0.000 mul.py:1417(_eval_real_imag)
     2916    0.008    0.000    0.046    0.000 power.py:594(_eval_is_extended_negative)
     6726    0.008    0.000    0.045    0.000 exprtools.py:438(as_expr)
   123524    0.033    0.000    0.045    0.000 numbers.py:2284(__hash__)
   302374    0.045    0.000    0.045    0.000 {built-in method builtins.hasattr}
   218557    0.044    0.000    0.044    0.000 {method 'rpartition' of 'str' objects}
      576    0.003    0.000    0.041    0.000 mul.py:1330(_eval_is_integer)
      136    0.000    0.000    0.041    0.000 printer.py:290(doprint)
      100    0.000    0.000    0.041    0.000 function.py:2206(<dictcomp>)
     1674    0.001    0.000    0.040    0.000 power.py:559(_eval_is_negative)
  636/136    0.004    0.000    0.040    0.000 printer.py:294(_print)
      100    0.000    0.000    0.040    0.000 function.py:2202(mystr)
    37037    0.039    0.000    0.039    0.000 libmpf.py:208(_normalize1)
    11877    0.005    0.000    0.039    0.000 numbers.py:2245(__ne__)
     3032    0.004    0.000    0.038    0.000 mul.py:176(could_extract_minus_sign)
      100    0.000    0.000    0.038    0.000 str.py:609(_print_Pow)
     2958    0.002    0.000    0.037    0.000 add.py:23(<genexpr>)
    18575    0.009    0.000    0.037    0.000 libmpf.py:330(from_int)
      100    0.001    0.000    0.036    0.000 str.py:50(_print_Add)
    10888    0.018    0.000    0.035    0.000 libmpf.py:702(mpf_add)
      288    0.001    0.000    0.035    0.000 mul.py:1590(_eval_is_even)
     8370    0.002    0.000    0.034    0.000 simplify.py:416(<lambda>)
      288    0.002    0.000    0.034    0.000 radsimp.py:1053(fraction)
     1884    0.003    0.000    0.034    0.000 basic.py:1738(doit)
    22344    0.010    0.000    0.034    0.000 containers.py:54(<genexpr>)
     9166    0.004    0.000    0.032    0.000 numbers.py:1914(__ne__)
405370/404862    0.031    0.000    0.032    0.000 {built-in method builtins.len}
     9527    0.006    0.000    0.031    0.000 numbers.py:2078(_as_mpf_val)
    31004    0.019    0.000    0.031    0.000 core.py:73(__cmp__)
30084/2868    0.018    0.000    0.031    0.000 sorting.py:169(_node_count)
    84083    0.017    0.000    0.030    0.000 operations.py:63(<genexpr>)
    16896    0.007    0.000    0.030    0.000 exprtools.py:381(<listcomp>)
      288    0.001    0.000    0.028    0.000 mul.py:1301(_eval_is_algebraic)
      864    0.002    0.000    0.028    0.000 mul.py:1292(_eval_is_rational)
    12857    0.017    0.000    0.028    0.000 libmpf.py:291(from_man_exp)
   242011    0.028    0.000    0.028    0.000 {method 'items' of 'dict' objects}
    24226    0.016    0.000    0.027    0.000 iterables.py:2898(iterable)
      864    0.000    0.000    0.027    0.000 mul.py:1302(<genexpr>)
       36    0.000    0.000    0.026    0.001 simplify.py:1375(nsimplify)
     4524    0.004    0.000    0.026    0.000 numbers.py:1840(_as_mpf_val)
    11528    0.014    0.000    0.026    0.000 mul.py:826(as_coeff_Mul)
     2592    0.001    0.000    0.026    0.000 mul.py:1293(<genexpr>)
     2660    0.002    0.000    0.025    0.000 expr.py:230(__pow__)
    21194    0.012    0.000    0.025    0.000 {built-in method builtins.sorted}
     8936    0.006    0.000    0.025    0.000 mul.py:478(<listcomp>)
    15502    0.007    0.000    0.025    0.000 core.py:101(__gt__)
    44664    0.024    0.000    0.024    0.000 libmpf.py:153(_normalize)
      288    0.000    0.000    0.024    0.000 mul.py:1489(_eval_is_irrational)
     2244    0.002    0.000    0.023    0.000 exprtools.py:1255(<genexpr>)
    15020    0.017    0.000    0.023    0.000 basic.py:331(_do_eq_sympify)
     4524    0.005    0.000    0.023    0.000 libmpf.py:491(from_rational)
       36    0.000    0.000    0.022    0.001 simplify.py:1514(_real_to_rational)
      288    0.001    0.000    0.022    0.000 mul.py:1310(_eval_is_zero)
      100    0.000    0.000    0.021    0.000 printer.py:340(_as_ordered_terms)
    23440    0.015    0.000    0.021    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
      100    0.001    0.000    0.021    0.000 expr.py:1113(as_ordered_terms)
     1410    0.008    0.000    0.020    0.000 expr.py:2196(extract_multiplicatively)
      288    0.000    0.000    0.020    0.000 mul.py:1559(_eval_is_odd)
    86812    0.019    0.000    0.019    0.000 {built-in method __new__ of type object at 0x00007FFE7E65CC90}
      288    0.001    0.000    0.019    0.000 mul.py:1268(_eval_is_complex)
    13013    0.010    0.000    0.019    0.000 numbers.py:2130(__neg__)
    15502    0.006    0.000    0.019    0.000 core.py:96(__lt__)
   182680    0.018    0.000    0.018    0.000 core.py:71(<lambda>)
      864    0.000    0.000    0.018    0.000 mul.py:1269(<genexpr>)
    34297    0.018    0.000    0.018    0.000 {built-in method builtins.max}
     1206    0.004    0.000    0.018    0.000 power.py:740(_eval_is_imaginary)
    10882    0.010    0.000    0.018    0.000 numbers.py:1692(__neg__)
   176759    0.018    0.000    0.018    0.000 {method 'append' of 'list' objects}
   127173    0.017    0.000    0.017    0.000 expr.py:149(_hashable_content)
     2112    0.003    0.000    0.017    0.000 exprtools.py:875(inv)
      100    0.002    0.000    0.017    0.000 expr.py:1167(as_terms)
     1884    0.002    0.000    0.017    0.000 basic.py:1758(<listcomp>)
   150619    0.016    0.000    0.016    0.000 {method 'extend' of 'list' objects}
     1254    0.001    0.000    0.016    0.000 add.py:1257(<listcomp>)
    15132    0.008    0.000    0.016    0.000 numbers.py:2014(as_content_primitive)
      456    0.000    0.000    0.016    0.000 function.py:2338(__hash__)
     5978    0.003    0.000    0.015    0.000 operations.py:125(_new_rawargs)
    19774    0.007    0.000    0.015    0.000 numbers.py:1226(_as_mpf_op)
     7776    0.006    0.000    0.015    0.000 {built-in method _functools.reduce}
    19945    0.014    0.000    0.014    0.000 basic.py:1934(<genexpr>)
    20445    0.010    0.000    0.014    0.000 power.py:962(as_base_exp)
     7632    0.004    0.000    0.013    0.000 containers.py:108(__hash__)
    38258    0.013    0.000    0.013    0.000 numbers.py:1269(__bool__)
   152158    0.013    0.000    0.013    0.000 traversal.py:166(__iter__)
      384    0.002    0.000    0.013    0.000 power.py:1401(_eval_is_rational)
   172920    0.013    0.000    0.013    0.000 {method 'getrandbits' of '_random.Random' objects}
     1746    0.002    0.000    0.013    0.000 power.py:789(_eval_is_odd)
     1010    0.005    0.000    0.013    0.000 sorting.py:10(default_sort_key)
      200    0.001    0.000    0.013    0.000 expr.py:353(__complex__)
      516    0.001    0.000    0.013    0.000 power.py:619(_eval_is_zero)
      288    0.001    0.000    0.012    0.000 mul.py:1277(_eval_is_finite)
    18148    0.007    0.000    0.012    0.000 {method 'setdefault' of 'dict' objects}
      824    0.001    0.000    0.012    0.000 function.py:2343(<listcomp>)
    13705    0.005    0.000    0.012    0.000 libintmath.py:91(python_bitcount)
    22588    0.012    0.000    0.012    0.000 libmpf.py:537(mpf_eq)
      288    0.000    0.000    0.011    0.000 mul.py:1459(_eval_is_imaginary)
     2660    0.002    0.000    0.011    0.000 expr.py:225(_pow)
      432    0.001    0.000    0.011    0.000 basic.py:971(<listcomp>)
      864    0.000    0.000    0.011    0.000 mul.py:1278(<genexpr>)
     3486    0.005    0.000    0.011    0.000 logic.py:115(fuzzy_and)
    20841    0.011    0.000    0.011    0.000 operations.py:91(<listcomp>)
      248    0.000    0.000    0.010    0.000 mul.py:297(<listcomp>)
      864    0.000    0.000    0.010    0.000 mul.py:1460(<genexpr>)
      664    0.002    0.000    0.010    0.000 power.py:732(_eval_is_complex)
    14556    0.006    0.000    0.010    0.000 containers.py:70(__iter__)
     1398    0.003    0.000    0.010    0.000 mul.py:1237(as_base_exp)
      100    0.001    0.000    0.010    0.000 str.py:263(_print_Mul)
      551    0.001    0.000    0.010    0.000 power.py:643(_eval_is_integer)
     1746    0.002    0.000    0.010    0.000 power.py:555(_eval_is_even)
    10470    0.009    0.000    0.010    0.000 numbers.py:419(ilcm)
    56566    0.009    0.000    0.009    0.000 basic.py:724(func)
     1288    0.002    0.000    0.009    0.000 symbol.py:340(_hashable_content)
    18616    0.008    0.000    0.008    0.000 {method 'index' of 'list' objects}
    10766    0.005    0.000    0.008    0.000 assumptions.py:464(generator)
    53244    0.008    0.000    0.008    0.000 power.py:387(base)
     2646    0.005    0.000    0.008    0.000 numbers.py:1748(__truediv__)
    12672    0.003    0.000    0.008    0.000 exprtools.py:481(<genexpr>)
      625    0.001    0.000    0.008    0.000 expr.py:205(__sub__)
      108    0.000    0.000    0.008    0.000 add.py:635(<lambda>)
      108    0.000    0.000    0.008    0.000 add.py:645(<lambda>)
     1134    0.003    0.000    0.008    0.000 power.py:565(_eval_is_extended_positive)
      324    0.000    0.000    0.008    0.000 add.py:636(<genexpr>)
      324    0.000    0.000    0.007    0.000 add.py:646(<genexpr>)
    19945    0.007    0.000    0.007    0.000 {method 'mro' of 'type' objects}
    55410    0.007    0.000    0.007    0.000 {method 'union' of 'set' objects}
     1314    0.006    0.000    0.007    0.000 power.py:664(_eval_is_extended_real)
     1328    0.000    0.000    0.007    0.000 power.py:737(<genexpr>)
     1648    0.003    0.000    0.007    0.000 iterables.py:524(numbered_symbols)
   108807    0.007    0.000    0.007    0.000 {method 'bit_length' of 'int' objects}
      200    0.000    0.000    0.007    0.000 function.py:2215(<genexpr>)
      288    0.002    0.000    0.007    0.000 symbol.py:426(__new__)
    13705    0.007    0.000    0.007    0.000 {built-in method _bisect.bisect_right}
     2816    0.006    0.000    0.007    0.000 exponential.py:212(__instancecheck__)
    38782    0.006    0.000    0.006    0.000 {built-in method builtins.iter}
     1278    0.003    0.000    0.006    0.000 numbers.py:1993(gcd)
     1668    0.005    0.000    0.006    0.000 expr.py:851(_eval_is_extended_positive_negative)
      540    0.001    0.000    0.006    0.000 power.py:798(_eval_is_finite)
     5125    0.002    0.000    0.006    0.000 abc.py:96(__instancecheck__)
     4524    0.004    0.000    0.006    0.000 libmpf.py:950(mpf_div)
    16302    0.003    0.000    0.006    0.000 function.py:1468(<lambda>)
     2253    0.004    0.000    0.006    0.000 numbers.py:2211(__rmul__)
      200    0.001    0.000    0.005    0.000 expr.py:1904(as_real_imag)
      900    0.001    0.000    0.005    0.000 precedence.py:118(precedence)
    22482    0.005    0.000    0.005    0.000 {method 'copy' of 'dict' objects}
      504    0.000    0.000    0.005    0.000 basic.py:965(<lambda>)
     1288    0.002    0.000    0.005    0.000 symbol.py:352(assumptions0)
      100    0.000    0.000    0.005    0.000 function.py:2367(<listcomp>)
     1746    0.001    0.000    0.005    0.000 power.py:814(_eval_is_prime)
     1746    0.001    0.000    0.005    0.000 power.py:821(_eval_is_composite)
      108    0.000    0.000    0.005    0.000 add.py:730(_eval_is_odd)
     1452    0.001    0.000    0.005    0.000 containers.py:98(__eq__)
     8448    0.003    0.000    0.005    0.000 exprtools.py:419(is_zero)
     2112    0.003    0.000    0.005    0.000 numbers.py:1763(__rtruediv__)
    32793    0.005    0.000    0.005    0.000 inspect.py:487(getmro)
     8522    0.003    0.000    0.005    0.000 symbol.py:378(free_symbols)
    23196    0.004    0.000    0.004    0.000 containers.py:258(<genexpr>)
      288    0.001    0.000    0.004    0.000 symbol.py:298(__xnew__)
      200    0.001    0.000    0.004    0.000 evalf.py:1570(evalf)
    11712    0.004    0.000    0.004    0.000 facts.py:479(__init__)
      108    0.000    0.000    0.004    0.000 add.py:731(<listcomp>)
    18438    0.004    0.000    0.004    0.000 power.py:391(exp)
     5125    0.004    0.000    0.004    0.000 {built-in method _abc._abc_instancecheck}
 1836/900    0.002    0.000    0.004    0.000 expr.py:408(is_number)
      924    0.001    0.000    0.004    0.000 symbol.py:285(__new__)
     2112    0.001    0.000    0.004    0.000 sympify.py:68(_is_numpy_instance)
     4075    0.002    0.000    0.004    0.000 numbers.py:828(as_coeff_Mul)
     2044    0.002    0.000    0.004    0.000 exprtools.py:216(decompose_power)
       36    0.000    0.000    0.004    0.000 numbers.py:1664(limit_denominator)
    19014    0.004    0.000    0.004    0.000 {method 'insert' of 'list' objects}
      835    0.001    0.000    0.004    0.000 expr.py:893(_eval_is_extended_negative)
      502    0.001    0.000    0.004    0.000 numbers.py:2248(__gt__)
  438/222    0.000    0.000    0.004    0.000 {built-in method builtins.divmod}
      200    0.000    0.000    0.003    0.000 precedence.py:61(precedence_Mul)
      268    0.000    0.000    0.003    0.000 numbers.py:1954(__lt__)
      833    0.000    0.000    0.003    0.000 expr.py:890(_eval_is_extended_positive)
    10766    0.003    0.000    0.003    0.000 numbers.py:1266(_eval_is_zero)
      216    0.000    0.000    0.003    0.000 numbers.py:2139(__divmod__)
    11075    0.003    0.000    0.003    0.000 logic.py:92(fuzzy_bool)
    13727    0.003    0.000    0.003    0.000 numbers.py:1199(_hashable_content)
      274    0.001    0.000    0.003    0.000 numbers.py:1917(_Rrel)
       36    0.000    0.000    0.003    0.000 misc.py:491(as_int)
     1212    0.002    0.000    0.003    0.000 symbol.py:254(_sanitize)
    13061    0.002    0.000    0.003    0.000 operations.py:121(<genexpr>)
     5892    0.003    0.000    0.003    0.000 {method 'copy' of 'collections.defaultdict' objects}
      200    0.000    0.000    0.003    0.000 str.py:33(parenthesize)
       36    0.000    0.000    0.003    0.000 _print_helpers.py:27(__str__)
    19945    0.003    0.000    0.003    0.000 {built-in method from_iterable}
    15438    0.003    0.000    0.003    0.000 numbers.py:2034(as_coeff_Mul)
      612    0.001    0.000    0.003    0.000 basic.py:944(<listcomp>)
       36    0.000    0.000    0.003    0.000 printer.py:371(__call__)
    11096    0.003    0.000    0.003    0.000 numbers.py:3411(_as_mpf_val)
       36    0.000    0.000    0.002    0.000 str.py:982(sstr)
    15373    0.002    0.000    0.002    0.000 mul.py:555(<listcomp>)
      108    0.001    0.000    0.002    0.000 add.py:750(_eval_is_extended_positive)
       36    0.000    0.000    0.002    0.000 fractions.py:227(limit_denominator)
     1288    0.002    0.000    0.002    0.000 symbol.py:354(<dictcomp>)
      108    0.000    0.000    0.002    0.000 add.py:647(<lambda>)
      108    0.001    0.000    0.002    0.000 add.py:834(_eval_is_extended_negative)
    15373    0.002    0.000    0.002    0.000 mul.py:653(<listcomp>)
     4364    0.002    0.000    0.002    0.000 add.py:888(_eval_subs)
      792    0.001    0.000    0.002    0.000 expr.py:184(__neg__)
5040/2700    0.001    0.000    0.002    0.000 expr.py:458(<genexpr>)
    18108    0.002    0.000    0.002    0.000 {method 'keys' of 'dict' objects}
      400    0.000    0.000    0.002    0.000 numbers.py:678(__float__)
      324    0.000    0.000    0.002    0.000 add.py:648(<genexpr>)
    11096    0.002    0.000    0.002    0.000 numbers.py:3577(_as_mpf_val)
    15511    0.002    0.000    0.002    0.000 numbers.py:3104(__bool__)
      834    0.002    0.000    0.002    0.000 exprtools.py:1052(mask)
      100    0.002    0.000    0.002    0.000 {built-in method builtins.__build_class__}
      100    0.000    0.000    0.002    0.000 containers.py:67(__contains__)
      532    0.000    0.000    0.002    0.000 containers.py:103(__ne__)
      894    0.000    0.000    0.002    0.000 add.py:1182(<genexpr>)
      100    0.000    0.000    0.002    0.000 function.py:2363(<listcomp>)
      100    0.000    0.000    0.002    0.000 str.py:366(<listcomp>)
       36    0.000    0.000    0.002    0.000 str.py:739(_print_Float)
     6911    0.002    0.000    0.002    0.000 expr.py:2006(as_base_exp)
      432    0.001    0.000    0.001    0.000 add.py:441(as_coeff_Add)
     3888    0.001    0.000    0.001    0.000 add.py:1123(<listcomp>)
      100    0.000    0.000    0.001    0.000 str.py:367(<listcomp>)
     1522    0.001    0.000    0.001    0.000 operations.py:429(make_args)
  972/792    0.001    0.000    0.001    0.000 {built-in method builtins.abs}
     6486    0.001    0.000    0.001    0.000 numbers.py:1683(_hashable_content)
      252    0.000    0.000    0.001    0.000 symbol.py:452(_hashable_content)
      108    0.000    0.000    0.001    0.000 add.py:669(_eval_is_imaginary)
      100    0.000    0.000    0.001    0.000 mul.py:2010(as_ordered_factors)
      198    0.000    0.000    0.001    0.000 numbers.py:2257(__lt__)
     6336    0.001    0.000    0.001    0.000 sympify.py:74(<genexpr>)
      136    0.001    0.000    0.001    0.000 printer.py:258(__init__)
     3888    0.001    0.000    0.001    0.000 add.py:1124(<listcomp>)
     5088    0.001    0.000    0.001    0.000 expr.py:2107(as_content_primitive)
      100    0.001    0.000    0.001    0.000 iterables.py:1930(has_dups)
     5577    0.001    0.000    0.001    0.000 numbers.py:3196(__neg__)
      108    0.000    0.000    0.001    0.000 function.py:1897(_dispatch_eval_derivative_n_times)
       36    0.000    0.000    0.001    0.000 libmpf.py:1205(to_str)
      288    0.000    0.000    0.001    0.000 mul.py:1265(<lambda>)
       68    0.000    0.000    0.001    0.000 function.py:2227(_eval_is_commutative)
      108    0.000    0.000    0.001    0.000 add.py:819(_eval_is_extended_nonpositive)
      888    0.001    0.000    0.001    0.000 numbers.py:625(could_extract_minus_sign)
      288    0.000    0.000    0.001    0.000 add.py:493(<listcomp>)
      108    0.000    0.000    0.001    0.000 add.py:804(_eval_is_extended_nonnegative)
      468    0.001    0.000    0.001    0.000 numbers.py:2011(as_numer_denom)
      576    0.001    0.000    0.001    0.000 mul.py:1469(_eval_herm_antiherm)
     1216    0.001    0.000    0.001    0.000 containers.py:64(__len__)
     9750    0.001    0.000    0.001    0.000 basic.py:1992(doit)
      324    0.001    0.000    0.001    0.000 fractions.py:84(__new__)
      200    0.001    0.000    0.001    0.000 evalf.py:1462(evalf)
       36    0.000    0.000    0.001    0.000 expr.py:200(__radd__)
     3596    0.001    0.000    0.001    0.000 function.py:2295(variables)
      200    0.000    0.000    0.001    0.000 expr.py:1064(key)
      108    0.000    0.000    0.001    0.000 function.py:1488(_sort_variable_count)
      236    0.000    0.000    0.001    0.000 function.py:1641(_wrt_variables)
      144    0.000    0.000    0.001    0.000 fractions.py:382(forward)
      272    0.000    0.000    0.001    0.000 fractions.py:599(_richcmp)
      200    0.000    0.000    0.001    0.000 numbers.py:1220(_as_mpf_val)
       36    0.000    0.000    0.001    0.000 libmpf.py:1153(to_digits_exp)
      100    0.000    0.000    0.001    0.000 expr.py:1046(_parse_order)
      288    0.000    0.000    0.001    0.000 mul.py:1603(_eval_is_composite)
      752    0.000    0.000    0.001    0.000 containers.py:58(__getitem__)
      288    0.000    0.000    0.001    0.000 mul.py:1463(_eval_is_hermitian)
      384    0.000    0.000    0.001    0.000 numbers.py:2180(__sub__)
      200    0.000    0.000    0.001    0.000 libmpf.py:64(dps_to_prec)
     1376    0.001    0.000    0.001    0.000 function.py:1662(variable_count)
     1548    0.001    0.000    0.001    0.000 numbers.py:814(as_coeff_mul)
      164    0.000    0.000    0.001    0.000 fractions.py:621(__lt__)
      200    0.000    0.000    0.001    0.000 mul.py:2024(<lambda>)
     2287    0.001    0.000    0.001    0.000 expr.py:3519(as_coeff_Mul)
     1256    0.001    0.000    0.001    0.000 sympify.py:18(__init__)
      108    0.000    0.000    0.001    0.000 fractions.py:417(_sub)
     1756    0.001    0.000    0.001    0.000 {method 'pop' of 'list' objects}
      108    0.000    0.000    0.001    0.000 add.py:653(<lambda>)
      208    0.000    0.000    0.001    0.000 iterables.py:2956(is_sequence)
      416    0.000    0.000    0.000    0.000 function.py:1911(<genexpr>)
      400    0.000    0.000    0.000    0.000 libmpf.py:454(to_float)
      834    0.000    0.000    0.000    0.000 exprtools.py:1055(<listcomp>)
     1747    0.000    0.000    0.000    0.000 numbers.py:3140(__neg__)
      288    0.000    0.000    0.000    0.000 mul.py:1466(_eval_is_antihermitian)
      200    0.000    0.000    0.000    0.000 function.py:1743(<genexpr>)
      468    0.000    0.000    0.000    0.000 basic.py:968(<listcomp>)
      108    0.000    0.000    0.000    0.000 add.py:649(<lambda>)
      108    0.000    0.000    0.000    0.000 add.py:637(<lambda>)
      108    0.000    0.000    0.000    0.000 add.py:651(<lambda>)
      108    0.000    0.000    0.000    0.000 add.py:643(<lambda>)
      108    0.000    0.000    0.000    0.000 add.py:639(<lambda>)
      824    0.000    0.000    0.000    0.000 basic.py:623(<setcomp>)
      108    0.000    0.000    0.000    0.000 numbers.py:1846(__abs__)
      216    0.000    0.000    0.000    0.000 numbers.py:2220(__mod__)
        1    0.000    0.000    0.000    0.000 repmatrix.py:328(__new__)
      236    0.000    0.000    0.000    0.000 function.py:1645(<listcomp>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:331(_new)
     1848    0.000    0.000    0.000    0.000 function.py:2307(point)
      108    0.000    0.000    0.000    0.000 numbers.py:1034(__new__)
      136    0.000    0.000    0.000    0.000 printer.py:250(_get_initial_settings)
      100    0.000    0.000    0.000    0.000 expr.py:1280(args_cnc)
      236    0.000    0.000    0.000    0.000 {built-in method builtins.round}
     1816    0.000    0.000    0.000    0.000 function.py:2302(expr)
      108    0.000    0.000    0.000    0.000 add.py:641(<lambda>)
      172    0.000    0.000    0.000    0.000 basic.py:1989(xreplace)
       36    0.000    0.000    0.000    0.000 fractions.py:556(__hash__)
     2128    0.000    0.000    0.000    0.000 basic.py:162(_hashable_content)
      200    0.000    0.000    0.000    0.000 expr.py:1061(neg)
      864    0.000    0.000    0.000    0.000 mul.py:1280(<genexpr>)
      834    0.000    0.000    0.000    0.000 exprtools.py:945(<listcomp>)
      144    0.000    0.000    0.000    0.000 numbers.py:2191(__rsub__)
     1208    0.000    0.000    0.000    0.000 function.py:1637(expr)
      694    0.000    0.000    0.000    0.000 boolalg.py:460(<lambda>)
      492    0.000    0.000    0.000    0.000 basic.py:520(<listcomp>)
      400    0.000    0.000    0.000    0.000 expr.py:1133(<lambda>)
      200    0.000    0.000    0.000    0.000 function.py:1742(<genexpr>)
     1278    0.000    0.000    0.000    0.000 add.py:214(<genexpr>)
      100    0.000    0.000    0.000    0.000 str.py:678(_print_Integer)
      864    0.000    0.000    0.000    0.000 mul.py:1265(<genexpr>)
       36    0.000    0.000    0.000    0.000 libmpf.py:59(prec_to_dps)
      108    0.000    0.000    0.000    0.000 numbers.py:2171(__radd__)
      100    0.000    0.000    0.000    0.000 orderings.py:200(monomial_key)
      216    0.000    0.000    0.000    0.000 exprtools.py:31(_monotonic_sign)
      524    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
      100    0.000    0.000    0.000    0.000 str.py:713(_print_Rational)
      100    0.000    0.000    0.000    0.000 iterables.py:1950(<genexpr>)
      108    0.000    0.000    0.000    0.000 function.py:1353(<listcomp>)
      200    0.000    0.000    0.000    0.000 {built-in method math.ldexp}
        1    0.000    0.000    0.000    0.000 repmatrix.py:127(_flat_list_to_DomainMatrix)
     1008    0.000    0.000    0.000    0.000 numbers.py:3714(__eq__)
       72    0.000    0.000    0.000    0.000 fractions.py:633(__ge__)
      324    0.000    0.000    0.000    0.000 add.py:653(<genexpr>)
      108    0.000    0.000    0.000    0.000 add.py:737(_eval_is_irrational)
        1    0.000    0.000    0.000    0.000 matrices.py:923(_handle_creation_inputs)
      396    0.000    0.000    0.000    0.000 numbers.py:3708(_as_mpf_val)
       72    0.000    0.000    0.000    0.000 fractions.py:511(__abs__)
      108    0.000    0.000    0.000    0.000 add.py:656(_eval_is_infinite)
       36    0.000    0.000    0.000    0.000 {built-in method builtins.pow}
      864    0.000    0.000    0.000    0.000 add.py:494(<genexpr>)
      108    0.000    0.000    0.000    0.000 add.py:851(<listcomp>)
       84    0.000    0.000    0.000    0.000 exprtools.py:1087(<genexpr>)
      576    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      108    0.000    0.000    0.000    0.000 add.py:767(<listcomp>)
       68    0.000    0.000    0.000    0.000 function.py:1735(<setcomp>)
       36    0.000    0.000    0.000    0.000 fractions.py:629(__le__)
      324    0.000    0.000    0.000    0.000 add.py:638(<genexpr>)
      324    0.000    0.000    0.000    0.000 add.py:644(<genexpr>)
      222    0.000    0.000    0.000    0.000 {built-in method math.gcd}
       36    0.000    0.000    0.000    0.000 libintmath.py:131(bin_to_radix)
      324    0.000    0.000    0.000    0.000 add.py:652(<genexpr>)
      324    0.000    0.000    0.000    0.000 add.py:650(<genexpr>)
      324    0.000    0.000    0.000    0.000 add.py:640(<genexpr>)
      200    0.000    0.000    0.000    0.000 str.py:272(<genexpr>)
      200    0.000    0.000    0.000    0.000 expr.py:1062(<listcomp>)
        1    0.000    0.000    0.000    0.000 repmatrix.py:101(_dod_to_DomainMatrix)
      129    0.000    0.000    0.000    0.000 klass.py:170(py__mro__)
      156    0.000    0.000    0.000    0.000 exprtools.py:27(_isnumber)
       36    0.000    0.000    0.000    0.000 libintmath.py:149(numeral_python)
      206    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
      216    0.000    0.000    0.000    0.000 add.py:642(<genexpr>)
       36    0.000    0.000    0.000    0.000 fractions.py:578(__eq__)
       36    0.000    0.000    0.000    0.000 numbers.py:3414(__hash__)
       72    0.000    0.000    0.000    0.000 {built-in method math.log}
     1056    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
      100    0.000    0.000    0.000    0.000 function.py:2207(<listcomp>)
      200    0.000    0.000    0.000    0.000 printer.py:283(order)
      324    0.000    0.000    0.000    0.000 numbers.py:2133(__abs__)
      416    0.000    0.000    0.000    0.000 symbol.py:240(_diff_wrt)
      100    0.000    0.000    0.000    0.000 function.py:2199(CustomStrPrinter)
      216    0.000    0.000    0.000    0.000 numbers.py:3192(__abs__)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:439(convert_to)
      442    0.000    0.000    0.000    0.000 boolalg.py:420(__bool__)
      200    0.000    0.000    0.000    0.000 precedence.py:73(precedence_Integer)
      200    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 sdm.py:572(convert_to)
      300    0.000    0.000    0.000    0.000 expr.py:1148(<genexpr>)
      136    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       36    0.000    0.000    0.000    0.000 libintmath.py:138(small_numeral)
      200    0.000    0.000    0.000    0.000 evalf.py:1426(<lambda>)
      236    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        6    0.000    0.000    0.000    0.000 numbers.py:1938(__gt__)
       36    0.000    0.000    0.000    0.000 numbers.py:3580(__hash__)
      116    0.000    0.000    0.000    0.000 function.py:376(_eval_subs)
        1    0.000    0.000    0.000    0.000 sdm.py:901(unop_dict)
        1    0.000    0.000    0.000    0.000 matrices.py:1028(<listcomp>)
        6    0.000    0.000    0.000    0.000 matrices.py:1020(make_explicit_row)
       36    0.000    0.000    0.000    0.000 {built-in method _operator.index}
      108    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       68    0.000    0.000    0.000    0.000 function.py:1584(_eval_is_commutative)
       36    0.000    0.000    0.000    0.000 fractions.py:438(_floordiv)
        6    0.000    0.000    0.000    0.000 matrices.py:1023(<listcomp>)
      100    0.000    0.000    0.000    0.000 precedence.py:67(precedence_Rational)
        6    0.000    0.000    0.000    0.000 sdm.py:590(<lambda>)
      100    0.000    0.000    0.000    0.000 str.py:847(_print_Symbol)
        6    0.000    0.000    0.000    0.000 domain.py:386(convert_from)
      288    0.000    0.000    0.000    0.000 fractions.py:282(numerator)
      288    0.000    0.000    0.000    0.000 fractions.py:286(denominator)
      216    0.000    0.000    0.000    0.000 expr.py:977(_eval_power)
       36    0.000    0.000    0.000    0.000 matrices.py:1011(make_explicit)
        6    0.000    0.000    0.000    0.000 matrices.py:1102(<listcomp>)
      116    0.000    0.000    0.000    0.000 function.py:372(func)
        6    0.000    0.000    0.000    0.000 domain.py:661(from_ExpressionRawDomain)
      100    0.000    0.000    0.000    0.000 expr.py:1165(<listcomp>)
      144    0.000    0.000    0.000    0.000 boolalg.py:345(__bool__)
      116    0.000    0.000    0.000    0.000 symbol.py:344(_eval_subs)
       68    0.000    0.000    0.000    0.000 function.py:1733(<dictcomp>)
      200    0.000    0.000    0.000    0.000 orderings.py:43(__call__)
        6    0.000    0.000    0.000    0.000 rationalfield.py:57(from_sympy)
       72    0.000    0.000    0.000    0.000 boolalg.py:426(__eq__)
      200    0.000    0.000    0.000    0.000 expr.py:1068(<listcomp>)
        1    0.000    0.000    0.000    0.000 domainmatrix.py:106(__new__)
      164    0.000    0.000    0.000    0.000 {built-in method _operator.lt}
        2    0.000    0.000    0.000    0.000 sdm.py:68(__init__)
      108    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
       36    0.000    0.000    0.000    0.000 libmpf.py:509(to_fixed)
       36    0.000    0.000    0.000    0.000 numbers.py:2115(__int__)
        6    0.000    0.000    0.000    0.000 pythonmpq.py:57(__new__)
       43    0.000    0.000    0.000    0.000 numbers.py:2287(__index__)
       36    0.000    0.000    0.000    0.000 boolalg.py:351(__eq__)
      100    0.000    0.000    0.000    0.000 basic.py:1114(_eval_subs)
       72    0.000    0.000    0.000    0.000 {built-in method _operator.ge}
       19    0.000    0.000    0.000    0.000 libmpf.py:663(mpf_neg)
       84    0.000    0.000    0.000    0.000 cache.py:90(wrapper)
        6    0.000    0.000    0.000    0.000 pythonmpq.py:93(_new_check)
        1    0.000    0.000    0.000    0.000 sdm.py:176(new)
        1    0.000    0.000    0.000    0.000 repmatrix.py:347(_fromrep)
       12    0.000    0.000    0.000    0.000 matrices.py:1088(<genexpr>)
        6    0.000    0.000    0.000    0.000 pythonmpq.py:103(_new)
       36    0.000    0.000    0.000    0.000 {built-in method _operator.le}
        2    0.000    0.000    0.000    0.000 domainmatrix.py:188(from_rep)
       10    0.000    0.000    0.000    0.000 function.py:643(as_base_exp)
       14    0.000    0.000    0.000    0.000 matrices.py:1001(<lambda>)
        2    0.000    0.000    0.000    0.000 matrices.py:1033(<genexpr>)
        7    0.000    0.000    0.000    0.000 matrices.py:1050(<genexpr>)
        1    0.000    0.000    0.000    0.000 matrices.py:1005(<lambda>)
        3    0.000    0.000    0.000    0.000 repmatrix.py:104(<genexpr>)
       14    0.000    0.000    0.000    0.000 sdm.py:75(<genexpr>)
        1    0.000    0.000    0.000    0.000 domain.py:821(__eq__)
       14    0.000    0.000    0.000    0.000 sdm.py:73(<genexpr>)
        3    0.000    0.000    0.000    0.000 repmatrix.py:120(<genexpr>)
        6    0.000    0.000    0.000    0.000 pythonmpq.py:122(__bool__)
        6    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        3    0.000    0.000    0.000    0.000 repmatrix.py:119(<genexpr>)
        2    0.000    0.000    0.000    0.000 matrices.py:1038(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}