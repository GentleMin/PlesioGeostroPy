Search.setIndex({"docnames": ["_autosummary/pg_utils", "_autosummary/pg_utils.eigen", "_autosummary/pg_utils.eigen.apply_bg_to_eq", "_autosummary/pg_utils.eigen.apply_bg_to_set", "_autosummary/pg_utils.eigen.assemble_forcing", "_autosummary/pg_utils.eigen.collect_matrix_elements", "_autosummary/pg_utils.eigen.compute_eigen", "_autosummary/pg_utils.eigen.compute_eigen_mp", "_autosummary/pg_utils.eigen.compute_matrix_numerics", "_autosummary/pg_utils.eigen.equations_to_matrices", "_autosummary/pg_utils.eigen.form_equations", "_autosummary/pg_utils.eigen.process_matrix_element", "_autosummary/pg_utils.eigen.reduce_dimensions", "_autosummary/pg_utils.eigen.reduce_eqsys_to_force_form", "_autosummary/pg_utils.eigen.reduce_eqsys_to_psi", "_autosummary/pg_utils.eigen.to_fd_ode_pg", "_autosummary/pg_utils.eigen.to_fd_ode_psi", "_autosummary/pg_utils.numerics", "_autosummary/pg_utils.numerics.io", "_autosummary/pg_utils.numerics.io.CompactArrayJSONEncoder", "_autosummary/pg_utils.numerics.io.matrices_load_h5", "_autosummary/pg_utils.numerics.io.matrices_save_h5", "_autosummary/pg_utils.numerics.io.matrix_load_from_group", "_autosummary/pg_utils.numerics.io.parse_coo", "_autosummary/pg_utils.numerics.io.serialize_coo", "_autosummary/pg_utils.numerics.io.sparse_coo_load_from_group", "_autosummary/pg_utils.numerics.io.sparse_coo_save_to_group", "_autosummary/pg_utils.numerics.linalg", "_autosummary/pg_utils.numerics.linalg.LinSysSolver", "_autosummary/pg_utils.numerics.linalg.MultiPrecLinSolver", "_autosummary/pg_utils.numerics.linalg.StdLinSolver", "_autosummary/pg_utils.numerics.linalg.eig_generalized", "_autosummary/pg_utils.numerics.matrices", "_autosummary/pg_utils.numerics.matrices.InnerProdQuad", "_autosummary/pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "_autosummary/pg_utils.numerics.matrices.InnerQuad_Rule", "_autosummary/pg_utils.numerics.matrices.LabeledBlockArray", "_autosummary/pg_utils.numerics.matrices.LabeledBlockMatrix", "_autosummary/pg_utils.numerics.matrices.MatrixExpander", "_autosummary/pg_utils.numerics.matrices.QuadRecipe", "_autosummary/pg_utils.numerics.matrices.invert_block_diag", "_autosummary/pg_utils.numerics.matrices.quad_matrix_gmpy2", "_autosummary/pg_utils.numerics.matrices.quad_matrix_mpmath", "_autosummary/pg_utils.numerics.matrices.quad_matrix_scipy", "_autosummary/pg_utils.numerics.matrices.quad_matrix_sympy", "_autosummary/pg_utils.numerics.matrices.sparsify", "_autosummary/pg_utils.numerics.special", "_autosummary/pg_utils.numerics.special.RootsJacobiResult", "_autosummary/pg_utils.numerics.special.eval_jacobi_nrange", "_autosummary/pg_utils.numerics.special.eval_jacobi_recur", "_autosummary/pg_utils.numerics.special.eval_jacobi_recur_Nmax", "_autosummary/pg_utils.numerics.special.eval_jacobi_recur_gmpy2", "_autosummary/pg_utils.numerics.special.eval_jacobi_recur_mp", "_autosummary/pg_utils.numerics.special.eval_jacobi_recur_mpmath", "_autosummary/pg_utils.numerics.special.roots_jacobi_mp", "_autosummary/pg_utils.numerics.symparser", "_autosummary/pg_utils.numerics.symparser.Gmpy2Printer", "_autosummary/pg_utils.numerics.symparser.jacobi_idx_subs", "_autosummary/pg_utils.numerics.symparser.powers_of", "_autosummary/pg_utils.numerics.symparser.v_functions_gmpy2", "_autosummary/pg_utils.numerics.symparser.v_functions_mpmath", "_autosummary/pg_utils.numerics.utils", "_autosummary/pg_utils.numerics.utils.allclose_sparse", "_autosummary/pg_utils.numerics.utils.array_to_str", "_autosummary/pg_utils.numerics.utils.cluster_modes", "_autosummary/pg_utils.numerics.utils.eigen_drift", "_autosummary/pg_utils.numerics.utils.eigenfreq_Malkus_3d", "_autosummary/pg_utils.numerics.utils.eigenfreq_Malkus_pg", "_autosummary/pg_utils.numerics.utils.eigenfreq_inertial3d", "_autosummary/pg_utils.numerics.utils.eigenfreq_psi_op", "_autosummary/pg_utils.numerics.utils.intermodal_separation", "_autosummary/pg_utils.numerics.utils.is_eq_coo", "_autosummary/pg_utils.numerics.utils.is_eq_sparse", "_autosummary/pg_utils.numerics.utils.spec_tail_exp_rate", "_autosummary/pg_utils.numerics.utils.to_dense_gmpy2", "_autosummary/pg_utils.numerics.utils.to_dense_obj", "_autosummary/pg_utils.numerics.utils.to_gpmy2_c", "_autosummary/pg_utils.numerics.utils.to_gpmy2_f", "_autosummary/pg_utils.numerics.utils.to_mpmath_c", "_autosummary/pg_utils.numerics.utils.to_mpmath_f", "_autosummary/pg_utils.numerics.utils.to_numpy_c", "_autosummary/pg_utils.numerics.utils.to_numpy_f", "_autosummary/pg_utils.numerics.utils.transform_dps_prec", "_autosummary/pg_utils.pg_model", "_autosummary/pg_utils.pg_model.base", "_autosummary/pg_utils.pg_model.base.CollectionConjugate", "_autosummary/pg_utils.pg_model.base.CollectionPG", "_autosummary/pg_utils.pg_model.base.LabeledCollection", "_autosummary/pg_utils.pg_model.base.LabeledSubCollection", "_autosummary/pg_utils.pg_model.base.map_PG_fields", "_autosummary/pg_utils.pg_model.base.map_collection", "_autosummary/pg_utils.pg_model.base_utils", "_autosummary/pg_utils.pg_model.base_utils.assemble_background", "_autosummary/pg_utils.pg_model.base_utils.extract_symbols", "_autosummary/pg_utils.pg_model.base_utils.field_to_moment", "_autosummary/pg_utils.pg_model.base_utils.fields_in_term", "_autosummary/pg_utils.pg_model.base_utils.integrate_asym", "_autosummary/pg_utils.pg_model.base_utils.integrate_sym", "_autosummary/pg_utils.pg_model.base_utils.linearize", "_autosummary/pg_utils.pg_model.bg_fields", "_autosummary/pg_utils.pg_model.bg_fields.BackgroundFieldMHD", "_autosummary/pg_utils.pg_model.bg_fields.BackgroundHydro", "_autosummary/pg_utils.pg_model.bg_fields.BackgroundMalkus", "_autosummary/pg_utils.pg_model.bg_fields.BackgroundPoloidalDipole", "_autosummary/pg_utils.pg_model.bg_fields.BackgroundToroidalQuadrupole", "_autosummary/pg_utils.pg_model.core", "_autosummary/pg_utils.pg_model.core.B0_sph", "_autosummary/pg_utils.pg_model.core.B0_vec", "_autosummary/pg_utils.pg_model.core.B_sph", "_autosummary/pg_utils.pg_model.core.B_vec", "_autosummary/pg_utils.pg_model.core.H", "_autosummary/pg_utils.pg_model.core.H_s", "_autosummary/pg_utils.pg_model.core.PG_to_conjugate", "_autosummary/pg_utils.pg_model.core.U0_sph", "_autosummary/pg_utils.pg_model.core.U0_vec", "_autosummary/pg_utils.pg_model.core.U_pg", "_autosummary/pg_utils.pg_model.core.U_sph", "_autosummary/pg_utils.pg_model.core.U_vec", "_autosummary/pg_utils.pg_model.core.b_linmap", "_autosummary/pg_utils.pg_model.core.cg_linmap", "_autosummary/pg_utils.pg_model.core.cgvar", "_autosummary/pg_utils.pg_model.core.cgvar_bg", "_autosummary/pg_utils.pg_model.core.cgvar_ptb", "_autosummary/pg_utils.pg_model.core.conjugate_to_PG", "_autosummary/pg_utils.pg_model.core.cyl", "_autosummary/pg_utils.pg_model.core.eps", "_autosummary/pg_utils.pg_model.core.fe_p", "_autosummary/pg_utils.pg_model.core.force_linmap", "_autosummary/pg_utils.pg_model.core.fp_sym", "_autosummary/pg_utils.pg_model.core.fs_sym", "_autosummary/pg_utils.pg_model.core.fz_asym", "_autosummary/pg_utils.pg_model.core.map_conjugate_to_pg", "_autosummary/pg_utils.pg_model.core.map_pg_to_conjugate", "_autosummary/pg_utils.pg_model.core.p", "_autosummary/pg_utils.pg_model.core.pg_ansatz", "_autosummary/pg_utils.pg_model.core.pg_linmap", "_autosummary/pg_utils.pg_model.core.pgvar", "_autosummary/pg_utils.pg_model.core.pgvar_bg", "_autosummary/pg_utils.pg_model.core.pgvar_ptb", "_autosummary/pg_utils.pg_model.core.r", "_autosummary/pg_utils.pg_model.core.reduced_var", "_autosummary/pg_utils.pg_model.core.s", "_autosummary/pg_utils.pg_model.core.sph", "_autosummary/pg_utils.pg_model.core.t", "_autosummary/pg_utils.pg_model.core.theta", "_autosummary/pg_utils.pg_model.core.u_linmap", "_autosummary/pg_utils.pg_model.core.v_e", "_autosummary/pg_utils.pg_model.core.x", "_autosummary/pg_utils.pg_model.core.y", "_autosummary/pg_utils.pg_model.core.z", "_autosummary/pg_utils.pg_model.equations", "_autosummary/pg_utils.pg_model.equations.eqn_PG_to_conjugate", "_autosummary/pg_utils.pg_model.equations.eqs_cg", "_autosummary/pg_utils.pg_model.equations.eqs_cg_lin", "_autosummary/pg_utils.pg_model.equations.eqs_pg", "_autosummary/pg_utils.pg_model.equations.eqs_pg_lin", "_autosummary/pg_utils.pg_model.expand_conjugate", "_autosummary/pg_utils.pg_model.expand_conjugate.fourier_expand", "_autosummary/pg_utils.pg_model.expand_conjugate.rad_expand", "_autosummary/pg_utils.pg_model.expand_conjugate.subscript_str", "_autosummary/pg_utils.pg_model.expand_conjugate.test_s", "_autosummary/pg_utils.pg_model.expand_daria_malkus", "_autosummary/pg_utils.pg_model.expand_daria_malkus.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_malkus.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_malkus.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_malkus.test_s", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.test_s", "_autosummary/pg_utils.pg_model.expand_daria_thesis", "_autosummary/pg_utils.pg_model.expand_daria_thesis.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_thesis.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_thesis.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_thesis.test_s", "_autosummary/pg_utils.pg_model.expand_stream_force_cpt", "_autosummary/pg_utils.pg_model.expand_stream_force_cpt.fourier_expand", "_autosummary/pg_utils.pg_model.expand_stream_force_cpt.rad_expand", "_autosummary/pg_utils.pg_model.expand_stream_force_cpt.subscript_str", "_autosummary/pg_utils.pg_model.expand_stream_force_cpt.test_s_expression", "_autosummary/pg_utils.pg_model.expand_stream_force_orth", "_autosummary/pg_utils.pg_model.expand_stream_force_orth.fourier_expand", "_autosummary/pg_utils.pg_model.expand_stream_force_orth.rad_expand", "_autosummary/pg_utils.pg_model.expand_stream_force_orth.subscript_str", "_autosummary/pg_utils.pg_model.expand_stream_force_orth.test_s", "_autosummary/pg_utils.pg_model.expansion", "_autosummary/pg_utils.pg_model.expansion.ExpansionRecipe", "_autosummary/pg_utils.pg_model.expansion.FourierExpansions", "_autosummary/pg_utils.pg_model.expansion.InnerProduct1D", "_autosummary/pg_utils.pg_model.expansion.InnerProductOp1D", "_autosummary/pg_utils.pg_model.expansion.RadialExpansions", "_autosummary/pg_utils.pg_model.expansion.RadialInnerProducts", "_autosummary/pg_utils.pg_model.expansion.RadialTestFunctions", "_autosummary/pg_utils.pg_model.expansion.SpectralExpansion", "_autosummary/pg_utils.pg_model.expansion.SystemEquations", "_autosummary/pg_utils.pg_model.expansion.SystemMatrix", "_autosummary/pg_utils.pg_model.expansion.cgvar_s", "_autosummary/pg_utils.pg_model.expansion.m", "_autosummary/pg_utils.pg_model.expansion.n", "_autosummary/pg_utils.pg_model.expansion.n_test", "_autosummary/pg_utils.pg_model.expansion.n_trial", "_autosummary/pg_utils.pg_model.expansion.omega", "_autosummary/pg_utils.pg_model.expansion.orth_pref_jacobi", "_autosummary/pg_utils.pg_model.expansion.pgvar_s", "_autosummary/pg_utils.pg_model.expansion.placeholder_collection", "_autosummary/pg_utils.pg_model.expansion.reduced_var_s", "_autosummary/pg_utils.pg_model.expansion.s_xi", "_autosummary/pg_utils.pg_model.expansion.xi", "_autosummary/pg_utils.pg_model.expansion.xi_s", "_autosummary/pg_utils.pg_model.forcing", "_autosummary/pg_utils.pg_model.forcing.Le_p", "_autosummary/pg_utils.pg_model.forcing.Le_p_cg", "_autosummary/pg_utils.pg_model.forcing.Le_p_expr", "_autosummary/pg_utils.pg_model.forcing.Le_p_lin", "_autosummary/pg_utils.pg_model.forcing.Le_p_lin_cg", "_autosummary/pg_utils.pg_model.forcing.Lp_sym", "_autosummary/pg_utils.pg_model.forcing.Lp_sym_cg", "_autosummary/pg_utils.pg_model.forcing.Lp_sym_expr", "_autosummary/pg_utils.pg_model.forcing.Lp_sym_lin", "_autosummary/pg_utils.pg_model.forcing.Lp_sym_lin_cg", "_autosummary/pg_utils.pg_model.forcing.Ls_sym", "_autosummary/pg_utils.pg_model.forcing.Ls_sym_cg", "_autosummary/pg_utils.pg_model.forcing.Ls_sym_expr", "_autosummary/pg_utils.pg_model.forcing.Ls_sym_lin", "_autosummary/pg_utils.pg_model.forcing.Ls_sym_lin_cg", "_autosummary/pg_utils.pg_model.forcing.Lz_asym", "_autosummary/pg_utils.pg_model.forcing.Lz_asym_cg", "_autosummary/pg_utils.pg_model.forcing.Lz_asym_expr", "_autosummary/pg_utils.pg_model.forcing.Lz_asym_lin", "_autosummary/pg_utils.pg_model.forcing.Lz_asym_lin_cg", "_autosummary/pg_utils.pg_model.forcing.force_explicit", "_autosummary/pg_utils.pg_model.forcing.force_explicit_cg", "_autosummary/pg_utils.pg_model.forcing.force_explicit_lin", "_autosummary/pg_utils.pg_model.forcing.force_explicit_lin_cg", "_autosummary/pg_utils.pg_model.params", "_autosummary/pg_utils.pg_model.params.Le", "_autosummary/pg_utils.pg_model.params.Lu", "_autosummary/pg_utils.processing", "_autosummary/pg_utils.processing.postproc", "_autosummary/pg_utils.processing.postproc.classify_eigens_criteria", "_autosummary/pg_utils.processing.postproc.eigen_func_from_conjugate", "_autosummary/pg_utils.processing.postproc.eigen_func_from_reduced", "_autosummary/pg_utils.processing.postproc.filter_sort", "_autosummary/pg_utils.processing.postproc.get_eigen_field_function", "_autosummary/pg_utils.sympy_supp", "_autosummary/pg_utils.sympy_supp.simplify", "_autosummary/pg_utils.sympy_supp.simplify.process_leaf_node", "_autosummary/pg_utils.sympy_supp.simplify.recursive_collect", "_autosummary/pg_utils.sympy_supp.simplify.recursive_collect_tree", "_autosummary/pg_utils.sympy_supp.simplify.recursive_eval_tree", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.cross", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.dot", "demos/Demo_Collections", "demos/Demo_PlesioGeostroPy_Basics", "demos/Demo_Regularity", "demos/Demo_Variables", "index", "tutorials"], "filenames": ["_autosummary\\pg_utils.rst", "_autosummary\\pg_utils.eigen.rst", "_autosummary\\pg_utils.eigen.apply_bg_to_eq.rst", "_autosummary\\pg_utils.eigen.apply_bg_to_set.rst", "_autosummary\\pg_utils.eigen.assemble_forcing.rst", "_autosummary\\pg_utils.eigen.collect_matrix_elements.rst", "_autosummary\\pg_utils.eigen.compute_eigen.rst", "_autosummary\\pg_utils.eigen.compute_eigen_mp.rst", "_autosummary\\pg_utils.eigen.compute_matrix_numerics.rst", "_autosummary\\pg_utils.eigen.equations_to_matrices.rst", "_autosummary\\pg_utils.eigen.form_equations.rst", "_autosummary\\pg_utils.eigen.process_matrix_element.rst", "_autosummary\\pg_utils.eigen.reduce_dimensions.rst", "_autosummary\\pg_utils.eigen.reduce_eqsys_to_force_form.rst", "_autosummary\\pg_utils.eigen.reduce_eqsys_to_psi.rst", "_autosummary\\pg_utils.eigen.to_fd_ode_pg.rst", "_autosummary\\pg_utils.eigen.to_fd_ode_psi.rst", "_autosummary\\pg_utils.numerics.rst", "_autosummary\\pg_utils.numerics.io.rst", "_autosummary\\pg_utils.numerics.io.CompactArrayJSONEncoder.rst", "_autosummary\\pg_utils.numerics.io.matrices_load_h5.rst", "_autosummary\\pg_utils.numerics.io.matrices_save_h5.rst", "_autosummary\\pg_utils.numerics.io.matrix_load_from_group.rst", "_autosummary\\pg_utils.numerics.io.parse_coo.rst", "_autosummary\\pg_utils.numerics.io.serialize_coo.rst", "_autosummary\\pg_utils.numerics.io.sparse_coo_load_from_group.rst", "_autosummary\\pg_utils.numerics.io.sparse_coo_save_to_group.rst", "_autosummary\\pg_utils.numerics.linalg.rst", "_autosummary\\pg_utils.numerics.linalg.LinSysSolver.rst", "_autosummary\\pg_utils.numerics.linalg.MultiPrecLinSolver.rst", "_autosummary\\pg_utils.numerics.linalg.StdLinSolver.rst", "_autosummary\\pg_utils.numerics.linalg.eig_generalized.rst", "_autosummary\\pg_utils.numerics.matrices.rst", "_autosummary\\pg_utils.numerics.matrices.InnerProdQuad.rst", "_autosummary\\pg_utils.numerics.matrices.InnerQuad_GaussJacobi.rst", "_autosummary\\pg_utils.numerics.matrices.InnerQuad_Rule.rst", "_autosummary\\pg_utils.numerics.matrices.LabeledBlockArray.rst", "_autosummary\\pg_utils.numerics.matrices.LabeledBlockMatrix.rst", "_autosummary\\pg_utils.numerics.matrices.MatrixExpander.rst", "_autosummary\\pg_utils.numerics.matrices.QuadRecipe.rst", "_autosummary\\pg_utils.numerics.matrices.invert_block_diag.rst", "_autosummary\\pg_utils.numerics.matrices.quad_matrix_gmpy2.rst", "_autosummary\\pg_utils.numerics.matrices.quad_matrix_mpmath.rst", "_autosummary\\pg_utils.numerics.matrices.quad_matrix_scipy.rst", "_autosummary\\pg_utils.numerics.matrices.quad_matrix_sympy.rst", "_autosummary\\pg_utils.numerics.matrices.sparsify.rst", "_autosummary\\pg_utils.numerics.special.rst", "_autosummary\\pg_utils.numerics.special.RootsJacobiResult.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_nrange.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_recur.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_recur_Nmax.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_recur_gmpy2.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_recur_mp.rst", "_autosummary\\pg_utils.numerics.special.eval_jacobi_recur_mpmath.rst", "_autosummary\\pg_utils.numerics.special.roots_jacobi_mp.rst", "_autosummary\\pg_utils.numerics.symparser.rst", "_autosummary\\pg_utils.numerics.symparser.Gmpy2Printer.rst", "_autosummary\\pg_utils.numerics.symparser.jacobi_idx_subs.rst", "_autosummary\\pg_utils.numerics.symparser.powers_of.rst", "_autosummary\\pg_utils.numerics.symparser.v_functions_gmpy2.rst", "_autosummary\\pg_utils.numerics.symparser.v_functions_mpmath.rst", "_autosummary\\pg_utils.numerics.utils.rst", "_autosummary\\pg_utils.numerics.utils.allclose_sparse.rst", "_autosummary\\pg_utils.numerics.utils.array_to_str.rst", "_autosummary\\pg_utils.numerics.utils.cluster_modes.rst", "_autosummary\\pg_utils.numerics.utils.eigen_drift.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_Malkus_3d.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_Malkus_pg.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_inertial3d.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_psi_op.rst", "_autosummary\\pg_utils.numerics.utils.intermodal_separation.rst", "_autosummary\\pg_utils.numerics.utils.is_eq_coo.rst", "_autosummary\\pg_utils.numerics.utils.is_eq_sparse.rst", "_autosummary\\pg_utils.numerics.utils.spec_tail_exp_rate.rst", "_autosummary\\pg_utils.numerics.utils.to_dense_gmpy2.rst", "_autosummary\\pg_utils.numerics.utils.to_dense_obj.rst", "_autosummary\\pg_utils.numerics.utils.to_gpmy2_c.rst", "_autosummary\\pg_utils.numerics.utils.to_gpmy2_f.rst", "_autosummary\\pg_utils.numerics.utils.to_mpmath_c.rst", "_autosummary\\pg_utils.numerics.utils.to_mpmath_f.rst", "_autosummary\\pg_utils.numerics.utils.to_numpy_c.rst", "_autosummary\\pg_utils.numerics.utils.to_numpy_f.rst", "_autosummary\\pg_utils.numerics.utils.transform_dps_prec.rst", "_autosummary\\pg_utils.pg_model.rst", "_autosummary\\pg_utils.pg_model.base.rst", "_autosummary\\pg_utils.pg_model.base.CollectionConjugate.rst", "_autosummary\\pg_utils.pg_model.base.CollectionPG.rst", "_autosummary\\pg_utils.pg_model.base.LabeledCollection.rst", "_autosummary\\pg_utils.pg_model.base.LabeledSubCollection.rst", "_autosummary\\pg_utils.pg_model.base.map_PG_fields.rst", "_autosummary\\pg_utils.pg_model.base.map_collection.rst", "_autosummary\\pg_utils.pg_model.base_utils.rst", "_autosummary\\pg_utils.pg_model.base_utils.assemble_background.rst", "_autosummary\\pg_utils.pg_model.base_utils.extract_symbols.rst", "_autosummary\\pg_utils.pg_model.base_utils.field_to_moment.rst", "_autosummary\\pg_utils.pg_model.base_utils.fields_in_term.rst", "_autosummary\\pg_utils.pg_model.base_utils.integrate_asym.rst", "_autosummary\\pg_utils.pg_model.base_utils.integrate_sym.rst", "_autosummary\\pg_utils.pg_model.base_utils.linearize.rst", "_autosummary\\pg_utils.pg_model.bg_fields.rst", "_autosummary\\pg_utils.pg_model.bg_fields.BackgroundFieldMHD.rst", "_autosummary\\pg_utils.pg_model.bg_fields.BackgroundHydro.rst", "_autosummary\\pg_utils.pg_model.bg_fields.BackgroundMalkus.rst", "_autosummary\\pg_utils.pg_model.bg_fields.BackgroundPoloidalDipole.rst", "_autosummary\\pg_utils.pg_model.bg_fields.BackgroundToroidalQuadrupole.rst", "_autosummary\\pg_utils.pg_model.core.rst", "_autosummary\\pg_utils.pg_model.core.B0_sph.rst", "_autosummary\\pg_utils.pg_model.core.B0_vec.rst", "_autosummary\\pg_utils.pg_model.core.B_sph.rst", "_autosummary\\pg_utils.pg_model.core.B_vec.rst", "_autosummary\\pg_utils.pg_model.core.H.rst", "_autosummary\\pg_utils.pg_model.core.H_s.rst", "_autosummary\\pg_utils.pg_model.core.PG_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.core.U0_sph.rst", "_autosummary\\pg_utils.pg_model.core.U0_vec.rst", "_autosummary\\pg_utils.pg_model.core.U_pg.rst", "_autosummary\\pg_utils.pg_model.core.U_sph.rst", "_autosummary\\pg_utils.pg_model.core.U_vec.rst", "_autosummary\\pg_utils.pg_model.core.b_linmap.rst", "_autosummary\\pg_utils.pg_model.core.cg_linmap.rst", "_autosummary\\pg_utils.pg_model.core.cgvar.rst", "_autosummary\\pg_utils.pg_model.core.cgvar_bg.rst", "_autosummary\\pg_utils.pg_model.core.cgvar_ptb.rst", "_autosummary\\pg_utils.pg_model.core.conjugate_to_PG.rst", "_autosummary\\pg_utils.pg_model.core.cyl.rst", "_autosummary\\pg_utils.pg_model.core.eps.rst", "_autosummary\\pg_utils.pg_model.core.fe_p.rst", "_autosummary\\pg_utils.pg_model.core.force_linmap.rst", "_autosummary\\pg_utils.pg_model.core.fp_sym.rst", "_autosummary\\pg_utils.pg_model.core.fs_sym.rst", "_autosummary\\pg_utils.pg_model.core.fz_asym.rst", "_autosummary\\pg_utils.pg_model.core.map_conjugate_to_pg.rst", "_autosummary\\pg_utils.pg_model.core.map_pg_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.core.p.rst", "_autosummary\\pg_utils.pg_model.core.pg_ansatz.rst", "_autosummary\\pg_utils.pg_model.core.pg_linmap.rst", "_autosummary\\pg_utils.pg_model.core.pgvar.rst", "_autosummary\\pg_utils.pg_model.core.pgvar_bg.rst", "_autosummary\\pg_utils.pg_model.core.pgvar_ptb.rst", "_autosummary\\pg_utils.pg_model.core.r.rst", "_autosummary\\pg_utils.pg_model.core.reduced_var.rst", "_autosummary\\pg_utils.pg_model.core.s.rst", "_autosummary\\pg_utils.pg_model.core.sph.rst", "_autosummary\\pg_utils.pg_model.core.t.rst", "_autosummary\\pg_utils.pg_model.core.theta.rst", "_autosummary\\pg_utils.pg_model.core.u_linmap.rst", "_autosummary\\pg_utils.pg_model.core.v_e.rst", "_autosummary\\pg_utils.pg_model.core.x.rst", "_autosummary\\pg_utils.pg_model.core.y.rst", "_autosummary\\pg_utils.pg_model.core.z.rst", "_autosummary\\pg_utils.pg_model.equations.rst", "_autosummary\\pg_utils.pg_model.equations.eqn_PG_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_cg.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_cg_lin.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_pg.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_pg_lin.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_cpt.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_cpt.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_cpt.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_cpt.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_cpt.test_s_expression.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_orth.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_orth.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_orth.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_orth.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force_orth.test_s.rst", "_autosummary\\pg_utils.pg_model.expansion.rst", "_autosummary\\pg_utils.pg_model.expansion.ExpansionRecipe.rst", "_autosummary\\pg_utils.pg_model.expansion.FourierExpansions.rst", "_autosummary\\pg_utils.pg_model.expansion.InnerProduct1D.rst", "_autosummary\\pg_utils.pg_model.expansion.InnerProductOp1D.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialExpansions.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialInnerProducts.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialTestFunctions.rst", "_autosummary\\pg_utils.pg_model.expansion.SpectralExpansion.rst", "_autosummary\\pg_utils.pg_model.expansion.SystemEquations.rst", "_autosummary\\pg_utils.pg_model.expansion.SystemMatrix.rst", "_autosummary\\pg_utils.pg_model.expansion.cgvar_s.rst", "_autosummary\\pg_utils.pg_model.expansion.m.rst", "_autosummary\\pg_utils.pg_model.expansion.n.rst", "_autosummary\\pg_utils.pg_model.expansion.n_test.rst", "_autosummary\\pg_utils.pg_model.expansion.n_trial.rst", "_autosummary\\pg_utils.pg_model.expansion.omega.rst", "_autosummary\\pg_utils.pg_model.expansion.orth_pref_jacobi.rst", "_autosummary\\pg_utils.pg_model.expansion.pgvar_s.rst", "_autosummary\\pg_utils.pg_model.expansion.placeholder_collection.rst", "_autosummary\\pg_utils.pg_model.expansion.reduced_var_s.rst", "_autosummary\\pg_utils.pg_model.expansion.s_xi.rst", "_autosummary\\pg_utils.pg_model.expansion.xi.rst", "_autosummary\\pg_utils.pg_model.expansion.xi_s.rst", "_autosummary\\pg_utils.pg_model.forcing.rst", "_autosummary\\pg_utils.pg_model.forcing.Le_p.rst", "_autosummary\\pg_utils.pg_model.forcing.Le_p_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Le_p_expr.rst", "_autosummary\\pg_utils.pg_model.forcing.Le_p_lin.rst", "_autosummary\\pg_utils.pg_model.forcing.Le_p_lin_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Lp_sym.rst", "_autosummary\\pg_utils.pg_model.forcing.Lp_sym_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Lp_sym_expr.rst", "_autosummary\\pg_utils.pg_model.forcing.Lp_sym_lin.rst", "_autosummary\\pg_utils.pg_model.forcing.Lp_sym_lin_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Ls_sym.rst", "_autosummary\\pg_utils.pg_model.forcing.Ls_sym_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Ls_sym_expr.rst", "_autosummary\\pg_utils.pg_model.forcing.Ls_sym_lin.rst", "_autosummary\\pg_utils.pg_model.forcing.Ls_sym_lin_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Lz_asym.rst", "_autosummary\\pg_utils.pg_model.forcing.Lz_asym_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.Lz_asym_expr.rst", "_autosummary\\pg_utils.pg_model.forcing.Lz_asym_lin.rst", "_autosummary\\pg_utils.pg_model.forcing.Lz_asym_lin_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.force_explicit.rst", "_autosummary\\pg_utils.pg_model.forcing.force_explicit_cg.rst", "_autosummary\\pg_utils.pg_model.forcing.force_explicit_lin.rst", "_autosummary\\pg_utils.pg_model.forcing.force_explicit_lin_cg.rst", "_autosummary\\pg_utils.pg_model.params.rst", "_autosummary\\pg_utils.pg_model.params.Le.rst", "_autosummary\\pg_utils.pg_model.params.Lu.rst", "_autosummary\\pg_utils.processing.rst", "_autosummary\\pg_utils.processing.postproc.rst", "_autosummary\\pg_utils.processing.postproc.classify_eigens_criteria.rst", "_autosummary\\pg_utils.processing.postproc.eigen_func_from_conjugate.rst", "_autosummary\\pg_utils.processing.postproc.eigen_func_from_reduced.rst", "_autosummary\\pg_utils.processing.postproc.filter_sort.rst", "_autosummary\\pg_utils.processing.postproc.get_eigen_field_function.rst", "_autosummary\\pg_utils.sympy_supp.rst", "_autosummary\\pg_utils.sympy_supp.simplify.rst", "_autosummary\\pg_utils.sympy_supp.simplify.process_leaf_node.rst", "_autosummary\\pg_utils.sympy_supp.simplify.recursive_collect.rst", "_autosummary\\pg_utils.sympy_supp.simplify.recursive_collect_tree.rst", "_autosummary\\pg_utils.sympy_supp.simplify.recursive_eval_tree.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Scalar3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Tensor3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Vector3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.cross.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.dot.rst", "demos\\Demo_Collections.ipynb", "demos\\Demo_PlesioGeostroPy_Basics.ipynb", "demos\\Demo_Regularity.ipynb", "demos\\Demo_Variables.ipynb", "index.rst", "tutorials.rst"], "titles": ["pg_utils", "pg_utils.eigen", "pg_utils.eigen.apply_bg_to_eq", "pg_utils.eigen.apply_bg_to_set", "pg_utils.eigen.assemble_forcing", "pg_utils.eigen.collect_matrix_elements", "pg_utils.eigen.compute_eigen", "pg_utils.eigen.compute_eigen_mp", "pg_utils.eigen.compute_matrix_numerics", "pg_utils.eigen.equations_to_matrices", "pg_utils.eigen.form_equations", "pg_utils.eigen.process_matrix_element", "pg_utils.eigen.reduce_dimensions", "pg_utils.eigen.reduce_eqsys_to_force_form", "pg_utils.eigen.reduce_eqsys_to_psi", "pg_utils.eigen.to_fd_ode_pg", "pg_utils.eigen.to_fd_ode_psi", "pg_utils.numerics", "pg_utils.numerics.io", "pg_utils.numerics.io.CompactArrayJSONEncoder", "pg_utils.numerics.io.matrices_load_h5", "pg_utils.numerics.io.matrices_save_h5", "pg_utils.numerics.io.matrix_load_from_group", "pg_utils.numerics.io.parse_coo", "pg_utils.numerics.io.serialize_coo", "pg_utils.numerics.io.sparse_coo_load_from_group", "pg_utils.numerics.io.sparse_coo_save_to_group", "pg_utils.numerics.linalg", "pg_utils.numerics.linalg.LinSysSolver", "pg_utils.numerics.linalg.MultiPrecLinSolver", "pg_utils.numerics.linalg.StdLinSolver", "pg_utils.numerics.linalg.eig_generalized", "pg_utils.numerics.matrices", "pg_utils.numerics.matrices.InnerProdQuad", "pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "pg_utils.numerics.matrices.InnerQuad_Rule", "pg_utils.numerics.matrices.LabeledBlockArray", "pg_utils.numerics.matrices.LabeledBlockMatrix", "pg_utils.numerics.matrices.MatrixExpander", "pg_utils.numerics.matrices.QuadRecipe", "pg_utils.numerics.matrices.invert_block_diag", "pg_utils.numerics.matrices.quad_matrix_gmpy2", "pg_utils.numerics.matrices.quad_matrix_mpmath", "pg_utils.numerics.matrices.quad_matrix_scipy", "pg_utils.numerics.matrices.quad_matrix_sympy", "pg_utils.numerics.matrices.sparsify", "pg_utils.numerics.special", "pg_utils.numerics.special.RootsJacobiResult", "pg_utils.numerics.special.eval_jacobi_nrange", "pg_utils.numerics.special.eval_jacobi_recur", "pg_utils.numerics.special.eval_jacobi_recur_Nmax", "pg_utils.numerics.special.eval_jacobi_recur_gmpy2", "pg_utils.numerics.special.eval_jacobi_recur_mp", "pg_utils.numerics.special.eval_jacobi_recur_mpmath", "pg_utils.numerics.special.roots_jacobi_mp", "pg_utils.numerics.symparser", "pg_utils.numerics.symparser.Gmpy2Printer", "pg_utils.numerics.symparser.jacobi_idx_subs", "pg_utils.numerics.symparser.powers_of", "pg_utils.numerics.symparser.v_functions_gmpy2", "pg_utils.numerics.symparser.v_functions_mpmath", "pg_utils.numerics.utils", "pg_utils.numerics.utils.allclose_sparse", "pg_utils.numerics.utils.array_to_str", "pg_utils.numerics.utils.cluster_modes", "pg_utils.numerics.utils.eigen_drift", "pg_utils.numerics.utils.eigenfreq_Malkus_3d", "pg_utils.numerics.utils.eigenfreq_Malkus_pg", "pg_utils.numerics.utils.eigenfreq_inertial3d", "pg_utils.numerics.utils.eigenfreq_psi_op", "pg_utils.numerics.utils.intermodal_separation", "pg_utils.numerics.utils.is_eq_coo", "pg_utils.numerics.utils.is_eq_sparse", "pg_utils.numerics.utils.spec_tail_exp_rate", "pg_utils.numerics.utils.to_dense_gmpy2", "pg_utils.numerics.utils.to_dense_obj", "pg_utils.numerics.utils.to_gpmy2_c", "pg_utils.numerics.utils.to_gpmy2_f", "pg_utils.numerics.utils.to_mpmath_c", "pg_utils.numerics.utils.to_mpmath_f", "pg_utils.numerics.utils.to_numpy_c", "pg_utils.numerics.utils.to_numpy_f", "pg_utils.numerics.utils.transform_dps_prec", "pg_utils.pg_model", "pg_utils.pg_model.base", "pg_utils.pg_model.base.CollectionConjugate", "pg_utils.pg_model.base.CollectionPG", "pg_utils.pg_model.base.LabeledCollection", "pg_utils.pg_model.base.LabeledSubCollection", "pg_utils.pg_model.base.map_PG_fields", "pg_utils.pg_model.base.map_collection", "pg_utils.pg_model.base_utils", "pg_utils.pg_model.base_utils.assemble_background", "pg_utils.pg_model.base_utils.extract_symbols", "pg_utils.pg_model.base_utils.field_to_moment", "pg_utils.pg_model.base_utils.fields_in_term", "pg_utils.pg_model.base_utils.integrate_asym", "pg_utils.pg_model.base_utils.integrate_sym", "pg_utils.pg_model.base_utils.linearize", "pg_utils.pg_model.bg_fields", "pg_utils.pg_model.bg_fields.BackgroundFieldMHD", "pg_utils.pg_model.bg_fields.BackgroundHydro", "pg_utils.pg_model.bg_fields.BackgroundMalkus", "pg_utils.pg_model.bg_fields.BackgroundPoloidalDipole", "pg_utils.pg_model.bg_fields.BackgroundToroidalQuadrupole", "pg_utils.pg_model.core", "pg_utils.pg_model.core.B0_sph", "pg_utils.pg_model.core.B0_vec", "pg_utils.pg_model.core.b_sph", "pg_utils.pg_model.core.b_vec", "pg_utils.pg_model.core.H", "pg_utils.pg_model.core.H_s", "pg_utils.pg_model.core.PG_to_conjugate", "pg_utils.pg_model.core.U0_sph", "pg_utils.pg_model.core.U0_vec", "pg_utils.pg_model.core.U_pg", "pg_utils.pg_model.core.u_sph", "pg_utils.pg_model.core.u_vec", "pg_utils.pg_model.core.b_linmap", "pg_utils.pg_model.core.cg_linmap", "pg_utils.pg_model.core.cgvar", "pg_utils.pg_model.core.cgvar_bg", "pg_utils.pg_model.core.cgvar_ptb", "pg_utils.pg_model.core.conjugate_to_PG", "pg_utils.pg_model.core.cyl", "pg_utils.pg_model.core.eps", "pg_utils.pg_model.core.fe_p", "pg_utils.pg_model.core.force_linmap", "pg_utils.pg_model.core.fp_sym", "pg_utils.pg_model.core.fs_sym", "pg_utils.pg_model.core.fz_asym", "pg_utils.pg_model.core.map_conjugate_to_pg", "pg_utils.pg_model.core.map_pg_to_conjugate", "pg_utils.pg_model.core.p", "pg_utils.pg_model.core.pg_ansatz", "pg_utils.pg_model.core.pg_linmap", "pg_utils.pg_model.core.pgvar", "pg_utils.pg_model.core.pgvar_bg", "pg_utils.pg_model.core.pgvar_ptb", "pg_utils.pg_model.core.r", "pg_utils.pg_model.core.reduced_var", "pg_utils.pg_model.core.s", "pg_utils.pg_model.core.sph", "pg_utils.pg_model.core.t", "pg_utils.pg_model.core.theta", "pg_utils.pg_model.core.u_linmap", "pg_utils.pg_model.core.v_e", "pg_utils.pg_model.core.x", "pg_utils.pg_model.core.y", "pg_utils.pg_model.core.z", "pg_utils.pg_model.equations", "pg_utils.pg_model.equations.eqn_PG_to_conjugate", "pg_utils.pg_model.equations.eqs_cg", "pg_utils.pg_model.equations.eqs_cg_lin", "pg_utils.pg_model.equations.eqs_pg", "pg_utils.pg_model.equations.eqs_pg_lin", "pg_utils.pg_model.expand_conjugate", "pg_utils.pg_model.expand_conjugate.fourier_expand", "pg_utils.pg_model.expand_conjugate.rad_expand", "pg_utils.pg_model.expand_conjugate.subscript_str", "pg_utils.pg_model.expand_conjugate.test_s", "pg_utils.pg_model.expand_daria_malkus", "pg_utils.pg_model.expand_daria_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_malkus.rad_expand", "pg_utils.pg_model.expand_daria_malkus.subscript_str", "pg_utils.pg_model.expand_daria_malkus.test_s", "pg_utils.pg_model.expand_daria_mm_malkus", "pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "pg_utils.pg_model.expand_daria_mm_malkus.test_s", "pg_utils.pg_model.expand_daria_thesis", "pg_utils.pg_model.expand_daria_thesis.fourier_expand", "pg_utils.pg_model.expand_daria_thesis.rad_expand", "pg_utils.pg_model.expand_daria_thesis.subscript_str", "pg_utils.pg_model.expand_daria_thesis.test_s", "pg_utils.pg_model.expand_stream_force_cpt", "pg_utils.pg_model.expand_stream_force_cpt.fourier_expand", "pg_utils.pg_model.expand_stream_force_cpt.rad_expand", "pg_utils.pg_model.expand_stream_force_cpt.subscript_str", "pg_utils.pg_model.expand_stream_force_cpt.test_s_expression", "pg_utils.pg_model.expand_stream_force_orth", "pg_utils.pg_model.expand_stream_force_orth.fourier_expand", "pg_utils.pg_model.expand_stream_force_orth.rad_expand", "pg_utils.pg_model.expand_stream_force_orth.subscript_str", "pg_utils.pg_model.expand_stream_force_orth.test_s", "pg_utils.pg_model.expansion", "pg_utils.pg_model.expansion.ExpansionRecipe", "pg_utils.pg_model.expansion.FourierExpansions", "pg_utils.pg_model.expansion.InnerProduct1D", "pg_utils.pg_model.expansion.InnerProductOp1D", "pg_utils.pg_model.expansion.RadialExpansions", "pg_utils.pg_model.expansion.RadialInnerProducts", "pg_utils.pg_model.expansion.RadialTestFunctions", "pg_utils.pg_model.expansion.SpectralExpansion", "pg_utils.pg_model.expansion.SystemEquations", "pg_utils.pg_model.expansion.SystemMatrix", "pg_utils.pg_model.expansion.cgvar_s", "pg_utils.pg_model.expansion.m", "pg_utils.pg_model.expansion.n", "pg_utils.pg_model.expansion.n_test", "pg_utils.pg_model.expansion.n_trial", "pg_utils.pg_model.expansion.omega", "pg_utils.pg_model.expansion.orth_pref_jacobi", "pg_utils.pg_model.expansion.pgvar_s", "pg_utils.pg_model.expansion.placeholder_collection", "pg_utils.pg_model.expansion.reduced_var_s", "pg_utils.pg_model.expansion.s_xi", "pg_utils.pg_model.expansion.xi", "pg_utils.pg_model.expansion.xi_s", "pg_utils.pg_model.forcing", "pg_utils.pg_model.forcing.Le_p", "pg_utils.pg_model.forcing.Le_p_cg", "pg_utils.pg_model.forcing.Le_p_expr", "pg_utils.pg_model.forcing.Le_p_lin", "pg_utils.pg_model.forcing.Le_p_lin_cg", "pg_utils.pg_model.forcing.Lp_sym", "pg_utils.pg_model.forcing.Lp_sym_cg", "pg_utils.pg_model.forcing.Lp_sym_expr", "pg_utils.pg_model.forcing.Lp_sym_lin", "pg_utils.pg_model.forcing.Lp_sym_lin_cg", "pg_utils.pg_model.forcing.Ls_sym", "pg_utils.pg_model.forcing.Ls_sym_cg", "pg_utils.pg_model.forcing.Ls_sym_expr", "pg_utils.pg_model.forcing.Ls_sym_lin", "pg_utils.pg_model.forcing.Ls_sym_lin_cg", "pg_utils.pg_model.forcing.Lz_asym", "pg_utils.pg_model.forcing.Lz_asym_cg", "pg_utils.pg_model.forcing.Lz_asym_expr", "pg_utils.pg_model.forcing.Lz_asym_lin", "pg_utils.pg_model.forcing.Lz_asym_lin_cg", "pg_utils.pg_model.forcing.force_explicit", "pg_utils.pg_model.forcing.force_explicit_cg", "pg_utils.pg_model.forcing.force_explicit_lin", "pg_utils.pg_model.forcing.force_explicit_lin_cg", "pg_utils.pg_model.params", "pg_utils.pg_model.params.Le", "pg_utils.pg_model.params.Lu", "pg_utils.processing", "pg_utils.processing.postproc", "pg_utils.processing.postproc.classify_eigens_criteria", "pg_utils.processing.postproc.eigen_func_from_conjugate", "pg_utils.processing.postproc.eigen_func_from_reduced", "pg_utils.processing.postproc.filter_sort", "pg_utils.processing.postproc.get_eigen_field_function", "pg_utils.sympy_supp", "pg_utils.sympy_supp.simplify", "pg_utils.sympy_supp.simplify.process_leaf_node", "pg_utils.sympy_supp.simplify.recursive_collect", "pg_utils.sympy_supp.simplify.recursive_collect_tree", "pg_utils.sympy_supp.simplify.recursive_eval_tree", "pg_utils.sympy_supp.vector_calculus_3d", "pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "pg_utils.sympy_supp.vector_calculus_3d.cross", "pg_utils.sympy_supp.vector_calculus_3d.dot", "Intro to the collection interface", "Introducing PlesioGeostroPy: Quickstart", "Regularity conditions for tensor components in polar coordinates", "Variables, equations and forcing terms", "PlesioGeostroPy", "Tutorials"], "terms": {"plesiogeostropi": [0, 261, 264, 266], "python": [0, 189, 262, 265], "packag": [0, 262, 264, 265], "plesio": [0, 86, 92, 150, 154, 210, 262, 265], "geostrophi": [0, 86, 92, 150, 154, 210, 262, 265], "pg": [0, 1, 2, 3, 4, 10, 15, 17, 67, 83, 85, 86, 87, 91, 92, 105, 112, 123, 131, 132, 134, 135, 136, 137, 138, 151, 155, 176, 181, 186, 191, 204, 231, 233, 241, 242, 244, 262, 264, 265, 266], "model": [0, 1, 17, 67, 83, 87, 91, 105, 150, 210, 241, 244, 261, 262, 264, 265], "thi": [0, 1, 5, 8, 12, 17, 19, 21, 28, 29, 30, 31, 32, 33, 34, 38, 46, 49, 50, 51, 52, 53, 57, 58, 63, 64, 71, 82, 83, 85, 86, 87, 88, 92, 96, 97, 161, 166, 176, 181, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 203, 210, 241, 242, 244, 261, 262, 263, 264, 265], "top": [0, 187, 189, 195, 262], "level": [0, 4, 5, 6, 8, 10, 12, 187, 189, 195], "modul": [0, 17, 32, 46, 55, 83, 98, 105, 150, 156, 161, 166, 171, 176, 181, 186, 210, 235, 238, 245, 261, 262, 264, 265], "includ": [0, 17, 83, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 238, 245, 262, 264, 265], "four": [0, 262, 265], "sub": [0, 17, 83, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 238, 245, 262, 263, 264], "sympy_supp": [0, 106, 107, 108, 109, 113, 114, 115, 116, 117, 124, 134, 142, 265], "supplementari": [0, 245, 265], "function": [0, 1, 11, 12, 14, 15, 18, 27, 32, 34, 35, 37, 38, 44, 46, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 63, 64, 69, 84, 85, 86, 87, 91, 92, 94, 96, 97, 105, 110, 111, 150, 158, 163, 168, 173, 176, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 205, 206, 207, 209, 239, 241, 242, 243, 244, 245, 246, 251, 261, 263, 264, 265, 266], "symbol": [0, 5, 8, 34, 55, 56, 57, 58, 83, 93, 98, 110, 131, 132, 189, 190, 196, 205, 231, 232, 233, 234, 241, 242, 244, 245, 248, 249, 252, 253, 254, 256, 261, 263, 264, 265, 266], "calcul": [0, 28, 29, 30, 33, 34, 35, 41, 42, 44, 51, 52, 53, 54, 57, 58, 61, 65, 67, 70, 73, 189, 241, 244, 262], "sympi": [0, 2, 16, 34, 41, 42, 43, 44, 49, 52, 57, 58, 82, 85, 86, 87, 92, 94, 95, 96, 97, 98, 188, 189, 190, 191, 192, 193, 194, 195, 196, 245, 248, 249, 251, 252, 253, 254, 256, 261, 263, 264, 266], "pg_model": [0, 10, 261, 262, 264, 265], "realiz": [0, 34, 35, 83, 189, 262, 265], "spectral": [0, 5, 8, 17, 65, 70, 83, 187, 191, 194, 261, 264, 265], "recip": [0, 9, 38, 83, 187, 195, 241, 242, 244, 265], "numer": [0, 8, 189, 196, 241, 242, 244, 261, 262, 264, 265], "associ": [0, 187], "comput": [0, 6, 7, 8, 32, 34, 41, 42, 43, 44, 46, 47, 55, 67, 69, 189, 196, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265], "quadratur": [0, 8, 17, 32, 33, 34, 35, 41, 42, 43, 44, 46, 54, 189], "solver": [0, 28, 29, 30, 31], "etc": [0, 186, 254, 261, 262, 265], "process": [0, 11, 57, 87, 188, 189, 191, 192, 193, 194, 195, 196, 247, 248, 249, 261, 265], "pre": [0, 65, 85, 86, 238, 261, 265], "post": [0, 238, 239, 261, 265], "solv": [1, 28, 29, 30, 31, 189, 195, 241, 244, 262, 264], "eigenvalu": [1, 6, 7, 28, 29, 30, 31, 64, 65, 70, 176, 181, 186, 262, 264], "problem": [1, 7, 28, 29, 31, 176, 181, 186, 189, 261, 262, 264], "file": [1, 5, 6, 8, 10, 12, 20, 21, 85, 86, 87, 156, 161, 166, 171, 176, 181, 186, 188, 191, 192, 193, 194, 195, 196], "contain": [1, 12, 19, 38, 54, 57, 92, 166, 189, 196, 261, 263, 264, 265], "code": [1, 56, 161, 166, 261, 262, 264, 265], "an": [1, 16, 21, 35, 36, 63, 64, 71, 85, 86, 87, 88, 131, 132, 188, 189, 191, 192, 193, 194, 195, 196, 203, 248, 249, 257, 261, 262, 264], "framework": [1, 265], "fname": 2, "str": [2, 3, 4, 5, 6, 7, 8, 10, 12, 19, 28, 33, 34, 36, 37, 47, 63, 66, 67, 85, 86, 87, 92, 187, 188, 189, 191, 192, 193, 194, 195, 196, 205, 252, 253, 254, 261], "eq": [2, 3, 4, 9, 14, 16, 187, 188, 189, 195, 261, 262, 263], "equal": [2, 14, 16, 189], "bg_map": 2, "dict": [2, 8, 11, 20, 21, 23, 24, 34, 36, 37, 39, 85, 86, 87, 89, 90, 98, 131, 132, 151, 187, 188, 189, 191, 192, 193, 194, 195, 196, 241, 242, 244, 247, 248, 249, 250, 261], "mode": [2, 3, 10, 64, 66, 67, 68, 74, 92, 196], "verbos": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 34, 38, 189], "int": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 29, 34, 35, 36, 37, 40, 41, 42, 43, 44, 48, 50, 51, 52, 53, 54, 56, 66, 67, 68, 69, 74, 76, 77, 78, 79, 82, 189, 190, 203, 252, 253, 257], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 33, 36, 48, 50, 51, 53, 64, 65, 118, 119, 135, 145, 146, 181, 186, 189, 190, 219, 220, 224, 225, 229, 230, 233, 234, 252, 253, 254, 256, 261, 262, 263, 264], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262], "appli": [2, 3, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 261, 262, 263], "background": [2, 3, 10, 92, 99, 106, 107, 113, 114, 121, 137, 161, 166, 262, 264], "field": [2, 3, 8, 10, 66, 67, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 99, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 122, 137, 138, 145, 161, 166, 176, 186, 187, 188, 191, 192, 193, 194, 195, 204, 241, 242, 244, 256, 261, 262, 264, 266], "equat": [2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 69, 83, 85, 86, 92, 176, 181, 186, 187, 188, 193, 195, 210, 242, 261, 265, 266], "wise": 2, "paramet": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 21, 23, 24, 31, 34, 35, 36, 37, 38, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 63, 64, 65, 66, 67, 70, 83, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 105, 112, 123, 131, 132, 151, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 235, 241, 242, 244, 247, 248, 249, 250, 252, 253, 254, 256, 257, 259, 260, 261], "name": [2, 5, 6, 8, 10, 12, 21, 28, 36, 37, 56, 85, 86, 87, 93, 187, 188, 191, 192, 193, 194, 195, 196, 205, 244, 252, 253, 254, 256, 261, 262], "dictionari": [2, 11, 89, 90, 131, 132, 189, 247, 250, 261, 262, 264], "labeledcollect": [3, 4, 5, 9, 10, 12, 13, 14, 15, 85, 86, 88, 90, 93, 95, 140, 160, 165, 170, 175, 180, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 205, 206, 241, 242, 244, 266], "bg": [3, 10, 66, 67], "backgroundfieldmhd": [3, 10, 101, 102, 103, 104], "tupl": [3, 4, 5, 6, 7, 8, 10, 12, 20, 28, 29, 30, 31, 85, 86, 87, 94, 188, 189, 190, 191, 192, 193, 194, 195, 243, 252, 253, 261], "list": [3, 4, 5, 6, 7, 8, 9, 10, 12, 19, 24, 28, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 56, 58, 63, 85, 86, 87, 100, 188, 189, 190, 191, 192, 193, 194, 195, 196, 240, 248, 249, 253, 261], "set": [3, 4, 5, 6, 10, 12, 56, 95, 151, 176, 181, 189, 203, 261, 262, 264], "base": [3, 4, 5, 9, 12, 19, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 47, 56, 65, 83, 92, 95, 100, 101, 102, 103, 104, 112, 120, 121, 122, 123, 131, 132, 136, 137, 138, 140, 152, 153, 154, 155, 160, 165, 170, 175, 176, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 204, 206, 241, 242, 244, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264], "origin": [3, 4, 11, 161, 166, 189, 261, 262, 263, 264], "bg_field": [3, 10], "return": [3, 4, 5, 6, 8, 9, 10, 11, 12, 19, 23, 24, 31, 34, 41, 42, 43, 44, 48, 50, 51, 53, 54, 57, 58, 63, 64, 66, 67, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 112, 123, 131, 132, 151, 188, 189, 191, 192, 193, 194, 195, 196, 203, 241, 242, 244, 248, 249, 250, 252, 253, 256, 259, 260, 261, 263], "new": [3, 11, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 253, 262, 263], "unknown": [3, 4, 5, 8, 10, 244, 261], "param": [3, 49, 52, 83, 100, 264], "arg": [4, 19, 33, 35, 57, 58, 189, 196], "timescal": [4, 10, 66, 67, 264], "alfven": [4, 10, 66, 67], "assembl": [4, 92, 264], "compon": [4, 10, 92, 94, 112, 123, 161, 166, 189, 191, 242, 252, 253, 256, 257, 259, 260, 261, 262, 264, 265, 266], "forc": [4, 10, 13, 83, 126, 127, 128, 129, 130, 176, 181, 186, 189, 265, 266], "system": [4, 10, 12, 13, 14, 28, 29, 30, 38, 56, 83, 124, 140, 142, 176, 181, 189, 195, 196, 206, 235, 252, 253, 254, 256, 257, 258, 262, 264, 265], "string": [4, 19, 24, 36, 56, 63, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 261, 262, 264], "ad": [4, 10, 189, 262, 263, 264], "The": [4, 12, 40, 41, 42, 51, 52, 53, 55, 56, 57, 64, 66, 67, 70, 82, 85, 86, 87, 92, 176, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 242, 252, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265], "follow": [4, 17, 34, 36, 49, 52, 57, 83, 85, 86, 87, 88, 189, 254, 261, 262, 263, 264, 265], "ar": [4, 6, 24, 34, 35, 37, 41, 42, 43, 44, 48, 50, 51, 53, 57, 58, 62, 64, 71, 72, 85, 86, 87, 88, 92, 93, 176, 181, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 204, 206, 241, 242, 244, 248, 249, 252, 253, 254, 256, 257, 259, 260, 261, 262, 264, 265, 266], "implement": [4, 19, 40, 82, 85, 86, 87, 88, 161, 166, 186, 188, 189, 191, 192, 193, 194, 195, 252, 253, 254, 256, 262, 265], "case": [4, 189, 241, 244, 262, 264], "insensit": 4, "lorentz": [4, 10, 186, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 226, 227, 228, 262, 264], "term": [4, 57, 58, 92, 95, 186, 189, 196, 248, 262, 263, 265], "assum": [4, 34, 37, 40, 48, 50, 51, 53, 58, 65, 188, 189, 191, 195, 241, 244, 252, 253, 256, 259, 260, 261, 264], "vortic": [4, 8, 69, 85, 86, 92, 210, 241, 242, 244, 262, 264], "exist": [4, 5, 6, 8, 10, 12, 261], "type": [4, 10, 34, 58, 63, 71, 85, 86, 87, 92, 96, 97, 188, 189, 191, 192, 193, 194, 195, 196, 241, 242, 243, 244, 261, 262, 264, 265], "char": 4, "time": [4, 33, 66, 67, 143, 147, 148, 149, 189, 195, 261, 262], "scale": [4, 66, 67], "nondimension": [4, 10], "choic": [4, 10, 262], "onli": [4, 33, 63, 64, 70, 161, 166, 176, 181, 189, 191, 242, 252, 253, 262, 263, 264], "influenc": 4, "us": [4, 5, 6, 8, 24, 31, 33, 34, 36, 41, 42, 43, 44, 49, 50, 51, 52, 53, 57, 58, 63, 65, 66, 67, 82, 85, 86, 87, 88, 92, 161, 166, 176, 181, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 204, 206, 254, 261, 262, 263, 264, 265], "t": [4, 16, 57, 118, 119, 126, 127, 128, 129, 130, 134, 135, 145, 146, 188, 189, 197, 204, 206, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 256, 261, 262, 263, 264], "b": [4, 28, 29, 30, 36, 41, 42, 43, 44, 58, 66, 67, 85, 86, 98, 186, 189, 236, 261, 262, 264], "sqrt": [4, 59, 60, 66, 67, 68, 111, 189, 207, 212, 215, 217, 220, 222, 225, 227, 230, 232, 234, 236, 261, 263], "rho_0": 4, "mu_0": [4, 66, 67, 236], "default": [4, 5, 6, 8, 10, 12, 19, 21, 23, 24, 30, 34, 52, 54, 63, 65, 66, 67, 85, 86, 87, 92, 98, 188, 189, 190, 191, 192, 193, 194, 195, 252, 253, 256, 261], "spin": [4, 66, 67], "invers": [4, 28, 29, 30, 189], "rate": [4, 66, 67, 73], "1": [4, 33, 34, 36, 48, 50, 51, 53, 57, 58, 63, 64, 66, 67, 68, 69, 111, 176, 181, 186, 189, 190, 195, 207, 209, 254, 256, 261, 262, 266], "omega": [4, 66, 67, 68, 69, 188, 197, 204, 206, 236], "variabl": [4, 28, 29, 34, 37, 38, 47, 56, 57, 83, 85, 86, 87, 92, 119, 120, 135, 136, 140, 151, 152, 156, 176, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 210, 241, 242, 244, 265, 266], "read_from": [5, 6, 7, 8, 12], "union": [5, 6, 7, 8, 12, 20, 21, 22, 24, 26, 34, 35, 44, 45, 52, 66, 67, 68, 69, 194, 196, 203, 248, 249], "manual_select": 5, "option": [5, 6, 7, 8, 10, 12, 20, 21, 23, 24, 34, 56, 58, 63, 65, 67, 69, 70, 76, 77, 78, 79, 82, 187, 189, 190, 243, 252, 253, 254, 261], "expansion_recip": [5, 8, 195], "expansionrecip": [5, 8, 9, 195, 241, 242, 244], "save_to": [5, 6, 7, 8, 10, 12], "none": [5, 6, 8, 10, 12, 21, 23, 24, 26, 28, 29, 30, 34, 35, 36, 37, 38, 39, 47, 56, 67, 69, 76, 77, 78, 79, 82, 85, 86, 87, 88, 92, 100, 101, 102, 103, 104, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 243, 247, 252, 253, 254, 255, 256, 257, 258, 262], "systemmatrix": [5, 8, 9, 38, 195], "collect": [5, 9, 38, 84, 85, 86, 87, 88, 90, 92, 93, 95, 112, 120, 121, 123, 131, 132, 136, 137, 188, 189, 191, 192, 193, 194, 195, 196, 205, 241, 242, 244, 247, 248, 249, 250, 262, 264, 265, 266], "matrix": [5, 6, 8, 9, 11, 17, 21, 22, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 196], "element": [5, 8, 9, 11, 17, 23, 24, 38, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 252, 253, 257, 259], "form": [5, 8, 10, 11, 12, 16, 23, 33, 34, 35, 37, 69, 74, 75, 87, 98, 151, 176, 181, 188, 189, 191, 192, 193, 194, 195, 203, 214, 215, 219, 220, 224, 225, 229, 230, 242, 257, 261, 262, 263, 264], "ndarrai": [6, 7, 8, 20, 21, 22, 24, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 196, 240, 243], "routin": [47, 189], "stage": [], "4": [36, 58, 64, 69, 189, 229, 230, 233, 234, 241, 242, 244, 261, 262, 263], "eigenvector": [6, 28, 29, 30, 31], "from": [6, 19, 22, 23, 25, 33, 45, 50, 51, 53, 73, 85, 86, 87, 89, 90, 92, 95, 98, 188, 189, 191, 192, 193, 194, 195, 196, 241, 242, 244, 261, 262, 263, 264], "matric": [6, 8, 17, 18, 20, 21, 62, 72, 195], "xpd_recip": [8, 9, 241, 242, 244], "ntrunc": 8, "par_val": 8, "jacobi_rule_opt": 8, "automat": [8, 34, 262], "true": [8, 28, 29, 30, 34, 87, 188, 189, 191, 192, 193, 194, 195, 196, 248, 261, 262], "quadn": [8, 34], "quadrature_opt": 8, "backend": [6, 8, 28, 34, 52], "scipi": [6, 8, 24, 30, 34, 43, 49, 52, 262], "outer": [8, 34], "output": [5, 6, 8, 10, 12, 18, 34, 41, 42, 43, 51, 52, 53, 54, 64, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 248, 249, 262], "numpi": [6, 8, 24, 30, 31, 34, 37, 41, 42, 54, 59, 60, 63, 67, 80, 81, 196, 243, 262, 263], "inplac": [9, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196], "bool": [5, 6, 7, 8, 9, 10, 12, 28, 29, 30, 31, 34, 47, 58, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 196, 243, 248], "fals": [5, 6, 7, 8, 9, 10, 12, 19, 28, 29, 30, 31, 34, 38, 58, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 243, 248, 253, 254, 261], "all": [9, 28, 33, 44, 49, 52, 66, 67, 83, 85, 86, 87, 92, 95, 187, 188, 189, 191, 192, 193, 194, 195, 254, 261, 262, 263, 264, 265], "expans": [5, 8, 9, 34, 35, 38, 83, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 241, 242, 244, 261, 262, 264, 265], "whether": [5, 6, 8, 9, 10, 12, 31, 34, 47, 58, 64, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 196], "modifi": [9, 263], "mass": [5, 6, 8, 9, 31, 32], "stiff": [5, 6, 8, 9, 31, 32], "eq_mod": 10, "backgroundhydro": 10, "object": [10, 19, 21, 23, 24, 28, 31, 33, 35, 36, 37, 38, 39, 47, 54, 59, 60, 63, 71, 75, 85, 86, 87, 88, 89, 90, 100, 106, 107, 108, 109, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 134, 136, 137, 138, 140, 142, 152, 153, 154, 155, 157, 158, 160, 162, 163, 165, 167, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 206, 254, 257, 261, 262, 264, 265], "ani": [11, 23, 63, 75, 85, 86, 87, 92, 188, 189, 191, 192, 193, 194, 195, 196, 261, 262], "map_trial": 11, "map_test": 11, "desir": [11, 23, 34, 51, 52, 53, 54, 176, 189, 191, 203, 261, 262, 264], "substitut": [11, 35, 57, 85, 86, 87, 92, 151, 187, 188, 189, 191, 192, 193, 194, 195, 210, 241, 242, 244, 264, 266], "trial": [11, 34, 35, 38, 201, 262], "expr": [11, 16, 34, 41, 42, 43, 44, 56, 57, 58, 85, 86, 87, 92, 95, 96, 97, 98, 111, 134, 188, 189, 190, 191, 192, 193, 194, 195, 196, 203, 231, 232, 233, 234, 247, 248, 249, 250, 252, 253, 256, 262], "test": [11, 34, 35, 38, 158, 163, 168, 173, 176, 178, 183, 187, 189, 193, 200, 262, 263, 264], "reduc": [10, 12, 13, 14, 16, 33, 140, 176, 181, 188, 193, 206, 242, 261, 262], "dimens": [12, 257], "eqsys_old": [13, 14], "streamfunct": [13, 176, 181], "formul": [13, 14, 34, 176, 181, 186, 242, 261, 264, 265], "thu": [13, 189, 257, 263], "drastic": [13, 33], "dimension": [12, 13], "dynam": [13, 186, 191], "concern": [17, 187, 262, 264], "integr": [17, 33, 34, 94, 96, 97, 128, 129, 130, 189, 190, 208, 216, 217, 218, 221, 222, 223, 226, 227, 228, 261, 262, 264], "method": [17, 19, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 47, 56, 58, 65, 70, 71, 85, 86, 87, 88, 100, 101, 102, 103, 104, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 241, 242, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264], "util": [17, 85, 86, 87, 91, 105, 186, 188, 191, 192, 193, 194, 195, 239, 254, 262, 263], "miscellan": [17, 61], "input": [6, 18, 34, 41, 42, 49, 51, 52, 53, 58, 64, 69, 70, 87, 93, 188, 191, 192, 193, 194, 195, 252, 253, 256], "fread": [20, 262, 264], "group": [20, 21, 22, 25, 26, 189, 248], "load": [5, 6, 8, 12, 20, 22, 25, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 262, 264], "h5py": [20, 21, 22, 25, 26, 262], "fwrite": 21, "f_attr": 21, "row": [21, 37, 196], "col": [21, 37, 196], "kwarg": [19, 21, 28, 29, 30, 31, 33, 34, 35, 189, 196, 252, 253, 254, 255, 256, 257, 258], "save": [21, 26, 33, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 262], "sp_gp": [22, 25, 26], "dataset": 22, "coo_matrix": [21, 22, 24, 26], "spars": [23, 24, 25, 26, 38, 45, 62, 71, 72, 74, 75], "coordin": [23, 24, 25, 26, 41, 42, 43, 44, 71, 85, 86, 92, 94, 96, 97, 105, 124, 133, 139, 141, 142, 143, 144, 146, 147, 148, 149, 186, 191, 252, 253, 254, 256, 257, 258, 262, 264, 265, 266], "format": [6, 8, 23, 24, 25, 26, 71, 85, 86, 87, 188, 191, 192, 193, 194, 195, 261], "sp_matrix": 26, "coo_arrai": [20, 21, 23, 24, 25, 26, 45, 71, 74, 75], "manipul": [245, 261, 262, 263, 265], "coeffici": [32, 188, 189, 191, 195, 196, 197, 204, 206, 248, 249, 262, 263], "bridg": 55, "between": [55, 64, 82, 189, 259, 260, 262, 266], "express": [5, 34, 55, 56, 57, 58, 94, 98, 131, 132, 151, 187, 188, 189, 191, 195, 196, 212, 213, 217, 218, 222, 223, 227, 228, 241, 242, 244, 248, 249, 250, 261, 264, 266], "class": [18, 19, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 55, 56, 63, 83, 84, 85, 86, 87, 88, 99, 100, 101, 102, 103, 104, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265], "inner_prod": [33, 34, 35], "innerproduct1d": [33, 34, 35, 38, 196], "quad_method": 33, "inner": [8, 32, 33, 34, 35, 38, 57, 160, 165, 170, 175, 180, 185, 187, 189, 190, 192, 195, 196, 262], "product": [8, 32, 33, 34, 35, 38, 57, 160, 165, 170, 175, 180, 185, 187, 189, 190, 192, 195, 196, 259, 260], "gener": [28, 29, 30, 31, 33, 50, 51, 53, 85, 86, 87, 92, 176, 181, 186, 188, 189, 191, 192, 193, 194, 195, 262, 264], "1d": 33, "compar": [33, 62, 71, 72, 189, 261, 262], "direct": [33, 189, 208, 261], "notat": [33, 189, 205, 262], "allow": [33, 189, 195, 261, 262, 264], "one": [19, 33, 37, 89, 90, 92, 186, 189, 196, 261, 262, 264, 266], "basi": [33, 176, 181, 188, 191, 203], "evalu": [33, 34, 35, 38, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 92, 189, 196, 241, 242, 244, 248, 250, 261, 262], "when": [33, 34, 66, 67, 87, 92, 188, 189, 191, 192, 193, 194, 195, 261, 262, 264], "w": [33, 189], "x": [31, 33, 41, 42, 43, 44, 57, 63, 76, 77, 78, 79, 80, 81, 189, 252, 254, 261, 262, 263, 264], "phi1": 33, "l": [33, 35, 66, 67, 236, 261], "phi2": 33, "n": [33, 49, 52, 54, 58, 66, 67, 68, 69, 176, 181, 189, 244, 261, 262], "directli": [33, 92, 176, 181, 186, 189, 254, 262], "k": [31, 33, 41, 42, 43, 44], "point": [33, 34, 48, 49, 50, 51, 52, 53, 82, 189, 191, 261, 262], "would": [33, 188, 189, 191, 261, 262, 264], "need": [33, 34, 51, 52, 53, 85, 86, 87, 92, 188, 189, 191, 192, 193, 194, 195, 261, 262, 263, 264], "kn": 33, "2": [5, 33, 34, 36, 45, 57, 58, 64, 66, 67, 68, 69, 111, 145, 176, 181, 189, 190, 197, 204, 206, 207, 209, 212, 215, 217, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 253, 256, 261, 262, 264, 266], "both": [33, 189, 261], "howev": [33, 57, 166, 181, 189, 261, 262, 263, 264], "fact": [33, 176, 181, 262], "complex": [33, 80, 188, 189, 190, 262], "o": [19, 33, 189, 263], "__init__": [19, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 47, 56, 85, 86, 87, 88, 100, 101, 102, 103, 104, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 252, 253, 254, 255, 256, 257, 258], "alpha": [34, 48, 49, 50, 51, 52, 53, 54, 262], "beta": [34, 48, 49, 50, 51, 52, 53, 54, 262], "innerquad_rul": 34, "gauss": [8, 34, 54], "jacobi": [8, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 262], "prod": 34, "int_var": [34, 189, 190], "deduc": 34, "indic": [5, 34, 35, 36, 37, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 198, 199, 244, 262], "idx": [34, 37], "powern": 34, "total": [34, 49, 52, 264], "degre": [8, 34, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 58], "initi": [34, 37, 38, 87, 88, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 262, 266], "order": [14, 34, 57, 66, 67, 69, 118, 119, 127, 135, 145, 166, 189, 195, 262, 266], "polynomi": [34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 189, 262, 263], "index": [34, 48, 49, 50, 51, 52, 53, 57, 64, 87, 88, 92, 189, 196, 200, 201, 252, 253, 254, 256, 261, 262, 265], "ignor": [34, 87, 189], "chebyshev": [34, 58, 65, 70], "deduct": 34, "turn": 34, "off": [34, 262], "quantiti": [34, 85, 86, 96, 97, 105, 112, 121, 123, 125, 131, 132, 191, 261, 264], "explicitli": [34, 189], "given": [6, 19, 34, 56, 58, 94, 188, 189, 203, 252, 253, 254, 262, 264], "n_test": [34, 35, 38], "n_trial": [34, 35, 38], "valid": [34, 262], "alwai": [34, 189, 195, 262], "deduce_param": 34, "ntrial": 34, "ntest": 34, "determin": [34, 37, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 242], "call": [19, 34, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 255, 257, 258, 261, 262], "valu": [6, 8, 21, 34, 36, 37, 48, 50, 51, 53, 54, 82, 87, 189, 196, 248, 261, 262], "dure": [34, 54, 189, 262], "gram": [34, 35], "full": [34, 63, 166, 176, 181, 189, 242, 257, 262, 264], "integrand": [34, 189], "maximum": [34, 48, 50, 51, 53, 54, 73, 189], "we": [34, 58, 88, 189, 191, 241, 244, 261, 262, 263, 264], "reach": 34, "deduce_params_out": 34, "classmethod": [34, 56, 189], "get_pow": 34, "get": [34, 189, 266], "power": [34, 58, 189, 203, 262], "p1": 34, "xi": [34, 47, 207, 209], "p2": 34, "where": [32, 34, 41, 42, 43, 44, 48, 50, 51, 53, 66, 67, 176, 181, 189, 261, 262, 263, 264], "retriev": [23, 24, 34, 58, 254], "For": [19, 34, 44, 161, 186, 189, 191, 261, 262, 264, 265], "detail": [34, 44, 66, 67, 189, 249, 250, 261, 262, 264, 265], "pleas": [34, 261, 262, 264], "refer": [34, 261, 262, 264], "power_of": 34, "gramian": [8, 34, 35], "nrange_tri": [34, 35], "nrange_test": [34, 35], "int_opt": 34, "out_opt": 34, "mutabledensematrix": [34, 35, 44], "concret": [34, 194, 264], "rang": [21, 34, 35, 38, 41, 42, 43, 44, 48, 95, 189, 262, 264], "func": [12, 34, 189], "see": [10, 21, 34, 44, 49, 52, 65, 66, 67, 70, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 249, 250, 252, 253, 254, 261, 262, 264, 265], "innerquadrul": 34, "which": [5, 21, 34, 41, 42, 44, 56, 85, 86, 87, 95, 187, 188, 189, 190, 191, 192, 193, 194, 195, 210, 241, 244, 257, 261, 262, 263, 264, 265], "done": [34, 92, 189, 261, 262, 264], "evalf": [34, 189], "conduct": 34, "precis": [6, 7, 29, 30, 34, 41, 42, 51, 52, 53, 54, 56, 67, 69, 82, 189, 262], "limit": [34, 189, 262], "platform": [30, 34], "support": [19, 34, 57, 71, 87, 88, 92, 189, 252, 253, 256, 261, 262], "np": [6, 24, 31, 34, 36, 37, 38, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 70, 263], "float": [6, 34, 44, 45, 48, 49, 50, 56, 64, 65, 66, 67, 69, 76, 77, 78, 79, 81, 189, 243], "pass": [8, 19, 34, 65, 87, 188, 189, 191, 192, 193, 194, 195, 196, 252, 253, 256, 261, 262], "cast": 34, "_output_form": 34, "certain": 35, "rule": [35, 189], "abstract": [28, 29, 35, 87, 194, 254, 261, 262], "quad": [35, 189], "overriden": [28, 29, 35, 194, 254], "actual": [35, 38, 189, 262, 264, 265], "strictli": 35, "speak": 35, "mai": [35, 87, 186, 188, 189, 191, 192, 193, 194, 195, 261, 262, 264], "abus": [35, 189], "terminolog": 35, "usual": [35, 261, 262], "vi": 35, "vj": 35, "rather": [35, 189], "ui": 35, "i": [10, 35, 37, 54, 66, 67, 71, 87, 88, 92, 94, 188, 189, 191, 192, 193, 194, 195, 212, 215, 217, 220, 222, 225, 227, 230, 232, 234, 261, 262, 263], "e": [35, 37, 54, 66, 67, 71, 92, 94, 119, 126, 127, 135, 159, 164, 169, 174, 189, 195, 211, 212, 213, 214, 215, 227, 228, 229, 230, 231, 232, 233, 234, 261, 262, 263, 264, 265], "differ": [34, 35, 188, 189, 191, 194, 254, 261, 263], "second": [35, 49, 52, 189, 190, 196, 254, 261, 262, 263, 264], "operand": [35, 41, 42, 43, 44, 189, 190, 259, 260], "well": [35, 51, 52, 53, 261, 262, 264], "involv": [35, 92, 262, 263, 264], "linear": [27, 28, 29, 30, 35, 99, 125, 153, 155, 176, 181, 189, 195, 214, 215, 219, 220, 224, 225, 229, 230, 233, 234, 261, 264, 266], "oper": [35, 51, 69, 71, 87, 88, 189, 195, 262, 264, 266], "arrai": [5, 6, 19, 23, 24, 35, 36, 37, 41, 42, 45, 48, 50, 51, 53, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 92, 188, 191, 192, 193, 194, 195, 196, 252, 253, 256, 257, 259, 260, 261], "block_nam": 36, "block_rang": 36, "block": [21, 36, 37, 40, 196, 262], "d": [36, 48, 50, 51, 53, 63, 66, 189, 190, 195, 197, 204, 206, 245, 252, 256, 257, 259, 261, 262, 264], "label": [36, 37, 87, 88], "assign": [36, 37, 261], "labeledblockmatrix": 36, "wrap": [36, 54, 262], "around": [36, 189, 261, 264], "so": [36, 37, 57, 64, 70, 189, 191, 261, 262, 263, 264], "can": [36, 37, 44, 58, 87, 88, 188, 189, 191, 192, 193, 194, 195, 210, 242, 248, 252, 253, 254, 256, 259, 260, 261, 262, 264, 265], "access": [36, 87, 261, 262], "singl": [19, 36, 186, 189, 261], "_block_idx": 36, "kei": [21, 36, 37, 87, 189, 248, 261, 262], "slice": [36, 37], "_arrai": 36, "underli": [36, 37, 189], "like": [19, 36, 37, 57, 92, 189, 196, 252, 253, 256, 257, 259, 260], "integ": [36, 37, 87, 88, 189, 198, 199, 262], "size": [36, 37, 48, 50, 51, 53], "each": [19, 36, 37, 87, 131, 132, 187, 188, 189, 191, 192, 193, 194, 195, 196, 248, 261, 262, 264], "exampl": [19, 36, 64, 189, 252, 253, 254, 256, 261, 262, 266], "instanc": [36, 186, 189, 196, 261, 262], "arang": 36, "10": [36, 54, 82, 189, 261, 262], "A": [15, 19, 28, 29, 30, 36, 41, 42, 43, 44, 98, 189, 261, 262, 263, 264], "c": [36, 74, 189, 261, 262], "3": [8, 36, 58, 64, 66, 82, 176, 181, 189, 245, 252, 253, 256, 257, 259, 261, 262, 263, 264], "interpret": [5, 6, 8, 21, 36, 58, 189, 196, 262], "sens": [36, 189], "5": [36, 64, 189, 262], "6": [36, 189], "7": [36, 261, 262], "8": [36, 54, 189, 262], "9": [36, 189, 261], "row_nam": [37, 196], "row_rang": 37, "col_nam": [37, 196], "col_rang": 37, "unlik": [37, 176, 188], "g": [37, 189, 262, 264, 265], "segment": [37, 40], "separ": [37, 70, 92, 189], "fix": 37, "grid": [37, 48, 49, 50, 51, 52, 53], "line": [19, 37, 261, 262, 264], "aaa": 37, "bb": 37, "ccc": 37, "dd": 37, "cc": 37, "ddd": 37, "column": [37, 196], "_row_idx": [37, 196], "_col_idx": [37, 196], "_matrix": [37, 196], "number": [6, 37, 44, 49, 52, 53, 54, 66, 67, 98, 189, 236, 237, 262], "quad_recip": 38, "ranges_tri": 38, "ranges_test": 38, "expand": [38, 186, 188, 189, 191, 194, 195, 261, 262, 263, 264], "either": [38, 189, 261, 262], "zero": [6, 38, 65, 189, 196, 262, 263], "quadrecip": 38, "ideal": 38, "futur": [38, 189], "should": [38, 41, 42, 44, 63, 64, 70, 87, 92, 94, 96, 97, 131, 132, 188, 189, 191, 192, 193, 194, 195, 241, 244, 262], "also": [38, 57, 66, 67, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 244, 248, 252, 253, 256, 257, 261, 262, 263, 264, 265], "accept": [38, 85, 189], "written": [5, 6, 8, 10, 12, 19, 38, 189, 195, 262, 264], "sum": [38, 189, 259, 260], "robust": [38, 262, 265], "accord": [38, 189, 261, 262], "init_opt": 39, "gram_opt": 39, "block_seg": 40, "invert": [28, 29, 30, 31, 40, 189], "diagon": [6, 28, 29, 30, 31, 40], "squar": 40, "give": [40, 66, 67, 88, 189, 196, 242, 261], "Not": [40, 189, 262], "yet": [40, 262, 264, 265], "whose": [6, 41, 42, 58, 93, 189, 196, 248, 249, 261, 262, 263], "estim": 58, "usag": 58, "have": [58, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 257, 261, 262, 263, 264], "defin": [58, 85, 86, 87, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 210, 252, 253, 254, 256, 261, 262, 264], "p": [57, 58, 94, 188, 189, 197, 204, 206, 253, 256, 262, 263], "q": [57, 58, 189], "m": [31, 58, 66, 67, 68, 69, 159, 176, 181, 188, 189, 261, 262, 266], "monomi": [58, 189], "sample_monomi": 58, "Or": [58, 189], "inccur": 58, "sample_polynomi": 58, "sp": [58, 263], "veri": [58, 262], "intric": 58, "must": [58, 69, 87, 189], "care": [58, 189], "sanit": [58, 87, 188, 191, 192, 193, 194, 195], "If": [5, 6, 8, 21, 56, 58, 69, 87, 188, 189, 190, 191, 192, 193, 194, 195, 196, 261, 262, 264], "special": [58, 189, 262, 266], "present": [58, 92, 176, 181, 189, 261, 262], "first": [49, 52, 58, 118, 119, 127, 135, 145, 189, 190, 191, 195, 196, 244, 254, 261, 262, 264], "argument": [10, 58, 65, 87, 188, 189, 190, 196, 197, 204, 206, 252, 253, 256], "least": [41, 42, 51, 52, 53, 58, 131, 132, 261, 262, 263, 264], "work": [58, 186, 189, 261, 262, 264], "mostli": [46, 186, 189, 262], "effici": [46, 189, 241, 242, 244, 262, 265], "memori": 46, "intens": 46, "part": [46, 73, 87, 187, 189, 241, 244, 262, 264], "n_min": 48, "n_max": 48, "z": [48, 49, 50, 51, 52, 53, 92, 94, 96, 97, 118, 119, 135, 145, 146, 159, 164, 169, 174, 188, 189, 197, 204, 206, 212, 213, 214, 215, 227, 228, 229, 230, 231, 232, 233, 234, 252, 253, 254, 261, 262, 264], "minimum": 48, "It": [48, 189, 252, 253, 256, 261, 262, 264], "requir": [5, 8, 48, 50, 51, 53, 176, 181, 241, 244, 262, 263, 264], "non": [48, 189, 262], "neg": [48, 189], "within": [48, 50, 51, 53, 189, 261, 262, 264, 265], "interv": [48, 50, 51, 53, 189], "shape": [48, 49, 50, 51, 52, 53, 252], "nmax": [50, 51, 53], "up": [29, 50, 51, 53, 189, 262, 263, 264], "specifi": [5, 21, 50, 51, 53, 69, 85, 86, 87, 92, 93, 188, 189, 191, 192, 193, 194, 195, 261], "recurr": [49, 50, 51, 52, 53], "relat": [16, 49, 50, 51, 52, 53, 191, 194, 266], "le": [66, 67, 264], "analyt": [66, 67, 68, 69], "eigenfrequ": [66, 67, 68, 69], "3d": [66, 68, 252, 253, 254, 255, 256, 258, 261], "eigemod": 66, "malku": [66, 67, 161, 166], "azimuth": [66, 67, 126, 128, 187, 198, 199, 211, 212, 213, 214, 216, 217, 218, 241, 242, 244, 253, 256], "wavenumb": [66, 67], "eigenmod": [66, 67, 242], "lehnert": [66, 67, 236], "fast": [66, 67, 189], "slow": [66, 67, 189, 264], "characterist": [10, 66, 67], "altern": [66, 67, 189], "note": [49, 52, 66, 67, 92, 188, 189, 262, 264], "below": [66, 67, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "more": [66, 67, 189, 261, 262, 265], "s": [8, 16, 65, 66, 67, 94, 110, 111, 118, 119, 126, 127, 128, 129, 130, 134, 135, 145, 146, 161, 164, 166, 169, 171, 174, 176, 181, 186, 188, 189, 203, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 253, 261, 262, 263, 264], "tau": [66, 67], "frac": [66, 67, 68, 69, 176, 181, 236, 237, 261, 262, 263, 264], "omega_0": [66, 67], "left": [24, 66, 67, 68, 189, 259, 260, 261, 262, 263, 264], "pm": [66, 67, 92, 262], "mathrm": [66, 67, 236, 237, 263, 264], "4m": [66, 67], "right": [66, 67, 68, 189, 259, 260, 261, 262, 263, 264], "rho": [66, 67, 236], "inerti": [66, 67, 68], "eigenfreq_inertial3d": 66, "plu": [66, 67], "sign": [66, 67, 189, 263], "minu": [66, 67], "eigenfreq_psi_op": 67, "2n": [68, 69], "2m": [68, 69], "self": [19, 69, 87, 176, 181, 188, 189, 191, 192, 193, 194, 195], "adjoint": 69, "stream": [14, 69, 85, 86, 92, 241, 244, 262, 264], "psi": [16, 69, 85, 86, 92, 119, 134, 135, 145, 159, 164, 169, 174, 176, 179, 181, 184, 241, 244, 261, 262, 264], "core": [16, 83, 96, 97, 189, 197, 204, 206, 261, 265, 266], "sort": [64, 65, 70, 83, 87, 88, 189], "insert": 83, "control": [83, 105, 235, 261], "conjug": [85, 92, 112, 119, 120, 121, 122, 123, 131, 132, 152, 153, 156, 176, 181, 189, 190, 197, 212, 215, 217, 220, 222, 225, 227, 230, 232, 234, 241, 242, 261, 262], "These": [71, 85, 186, 197, 204, 206, 256, 257, 261, 262, 264, 265], "correspond": [85, 186, 189, 194, 196, 244, 252, 253, 257, 261, 262], "counterpart": [85, 112, 123, 176, 181, 261, 264], "arrang": [85, 86, 261, 264], "wai": [49, 52, 64, 70, 85, 86, 189, 254, 261, 262], "quadrat": [85, 86, 94], "moment": [85, 86, 94, 262, 264], "magnet": [8, 85, 86, 92, 94, 100, 106, 107, 108, 109, 116, 118, 186, 242, 261, 262, 264], "m_1": [85, 119, 217, 220, 222, 225, 232, 234, 261, 264], "m_p": [85, 261], "m_m": [85, 261], "m_zp": [85, 261], "m_zm": [85, 261], "zm_1": [85, 119, 261], "zm_p": [85, 261], "zm_m": [85, 261], "equatori": [85, 86, 96, 97, 126, 146, 161, 166, 211, 212, 213, 214, 262, 264], "plane": [85, 86, 126, 211, 212, 213, 214, 262, 264], "b_ep": [85, 261], "b_em": [85, 261], "bz_e": [85, 86, 261, 262, 264], "db_dz_ep": [85, 261], "db_dz_em": [85, 261], "boundari": [85, 86, 92, 186, 261, 262, 264], "br_b": [85, 86, 261, 262, 264], "b_pp": [85, 261], "b_pm": [85, 261], "bz_p": [85, 86, 261, 262, 264], "b_mp": [85, 261], "b_mm": [85, 261], "bz_m": [85, 86, 261, 262, 264], "constructor": [85, 86, 252, 253, 254, 257], "No": 85, "longer": [85, 161, 186, 195, 261, 262], "attribut": [19, 21, 55, 56, 85, 86, 87, 88, 105, 150, 156, 161, 166, 171, 176, 181, 186, 188, 189, 191, 192, 193, 194, 195, 210, 235, 252, 253, 254, 256, 261, 262], "addit": [47, 54, 85, 87, 88, 189, 246, 252, 253, 256, 262, 263, 264], "fun": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 262], "callabl": [23, 24, 63, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 240, 243, 247], "metadata": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 261], "overrid": [85, 86, 189, 195], "as_empti": [85, 86, 87, 188, 191, 192, 193, 194, 195], "copi": [85, 86, 87, 188, 191, 192, 193, 194, 195], "deep": [85, 86, 87, 188, 189, 191, 192, 193, 194], "static": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196], "deseri": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 261, 264], "obj": [23, 24, 41, 42, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "parser": [55, 85, 86, 87, 188, 191, 192, 193, 194, 195, 262, 264], "lambda": [31, 56, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 243, 261], "generate_collect": [85, 86, 87, 188, 191, 192, 193, 194, 195], "index_arrai": [85, 86, 87, 188, 191, 192, 193, 194, 195], "boolean": [5, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "properti": [85, 86, 87, 88, 176, 188, 189, 191, 192, 193, 194, 195, 252, 253, 254, 256], "iter_filt": [85, 86, 87, 88, 188, 191, 192, 193, 194, 195], "skip": [85, 86, 87, 88, 188, 191, 192, 193, 194, 195], "iter_nam": [85, 86, 87, 88, 188, 191, 192, 193, 194, 195], "load_json": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 262, 264], "fp": [85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196], "textio": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196], "json": [5, 6, 8, 10, 12, 19, 24, 85, 86, 87, 188, 191, 192, 193, 194, 195, 196, 262, 264], "save_json": [85, 86, 87, 188, 191, 192, 193, 194, 195, 196], "serial": [23, 24, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 266], "handl": [85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "map": [85, 86, 87, 89, 90, 98, 118, 119, 131, 132, 135, 145, 151, 188, 189, 191, 192, 193, 194, 195, 196, 231, 232, 233, 234, 261, 262], "fname_1": [85, 86, 87, 188, 191, 192, 193, 194, 195], "serialized_element_1": [85, 86, 87, 188, 191, 192, 193, 194, 195], "fname_2": [85, 86, 87, 188, 191, 192, 193, 194, 195], "serialized_element_2": [85, 86, 87, 188, 191, 192, 193, 194, 195], "sub_map": [85, 86, 87, 188, 191, 192, 193, 194, 195], "iter": [19, 54, 85, 86, 87, 88, 188, 189, 191, 192, 193, 194, 195, 196, 262, 266], "warn": [12, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "chang": [49, 52, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 196, 261, 262, 263], "made": [85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "place": [41, 42, 44, 52, 53, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195], "To": [85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 261, 263, 264, 266], "intend": [49, 52, 85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 254], "Then": [85, 86, 87, 188, 189, 191, 192, 193, 194, 195, 262, 264], "intern": [29, 57, 85, 86, 87, 188, 191, 192, 193, 194, 195], "subset_b_bound": [85, 86], "extract": [85, 86, 87, 95, 189, 261], "subset": [85, 86, 87, 88], "subset_b_bound_cyl": [85, 86], "cylindr": [16, 85, 86, 92, 94, 96, 97, 107, 109, 114, 117, 124, 133, 139, 141, 144, 146, 186, 191, 253, 262, 264], "subset_b_equ": [85, 86], "subset_mag": [85, 86], "subset_mo": [85, 86], "basic": [85, 86, 189, 262], "alia": [85, 86], "mss": [86, 94, 261, 262, 264], "mpp": [86, 94, 261, 262, 264], "msp": [86, 94, 166, 261, 262, 264], "msz": [86, 94, 261, 262, 264], "mpz": [86, 94, 261, 262, 264], "zmss": [86, 94, 261, 262, 264], "zmpp": [86, 94, 261, 262, 264], "zmsp": [86, 94, 261, 262, 264], "bs_e": [86, 261, 262, 264], "bp_e": [86, 261, 262, 264], "dbs_dz_e": [86, 261, 262, 264], "dbp_dz_e": [86, 261, 262, 264], "bs_p": [86, 261, 262, 264], "bp_p": [86, 261, 262, 264], "bs_m": [86, 261, 262, 264], "bp_m": [86, 261, 262, 264], "behaviour": [87, 188, 191, 192, 193, 194, 195, 262, 263], "other": [30, 44, 69, 87, 88, 189, 254, 262, 263], "word": [87, 88, 189], "In": [87, 88, 189, 191, 261, 262, 264], "travers": [87, 88, 189, 262, 266], "subcollect": 87, "keyword": [65, 70, 87, 189], "otherwis": [41, 42, 51, 52, 53, 63, 87, 92, 189, 196], "pair": [21, 87, 189, 248], "rais": [19, 87, 189], "error": [87, 189, 262], "item": [87, 93, 188, 189, 191, 192, 193, 194, 195, 261, 265], "how": [87, 188, 189, 191, 192, 193, 194, 195, 261, 262, 264], "entri": [87, 131, 132, 188, 191, 192, 193, 194, 195, 261], "signatur": [49, 52, 87, 188, 191, 192, 193, 194, 195, 196], "take": [23, 64, 87, 98, 176, 181, 188, 189, 191, 192, 193, 194, 195, 262, 263, 264], "write": [19, 21, 87, 188, 189, 191, 192, 193, 194, 195, 261, 262], "situ": [87, 188, 191, 192, 193, 194, 195, 196], "updat": [87, 188, 191, 192, 193, 194, 195], "current": [12, 57, 82, 87, 161, 188, 189, 191, 192, 193, 194, 195, 196, 252, 253, 262, 264], "itself": [87, 188, 189, 191, 192, 193, 194, 195, 242, 262], "same": [41, 42, 49, 52, 64, 87, 176, 188, 189, 191, 192, 193, 194, 252, 260, 261, 262, 264], "configur": [87, 156, 161, 166, 171, 176, 181, 188, 191, 192, 193, 194, 263], "slightli": [87, 188, 191, 192, 193, 194, 262, 263], "faster": [87, 188, 189, 191, 192, 193, 194, 262, 264], "than": [6, 69, 87, 188, 189, 191, 192, 193, 194, 262], "pars": [87, 188, 189, 191, 192, 193, 194, 195], "meaning": [87, 188, 191, 192, 193, 194, 195, 261, 262], "unexpect": [87, 188, 191, 192, 193, 194, 195], "legitim": [87, 188, 191, 192, 193, 194, 195], "conveni": [15, 87, 188, 189, 191, 192, 193, 194, 195, 261], "wrapper": [87, 188, 189, 191, 192, 193, 194, 195, 196], "base_collect": 88, "sub_slic": 88, "similar": [88, 189, 261], "sinc": [88, 92, 189, 261, 262, 264], "dai": [88, 261], "built": [29, 30, 71, 88, 261], "almost": 88, "never": [88, 189], "found": [88, 189], "perhap": [88, 189, 261], "remov": [88, 189], "later": [88, 262], "version": [44, 88, 161, 262], "maps_from": [89, 90], "collectionpg": [15, 89, 92, 112, 123, 131, 132, 136, 137, 138, 151, 154, 155, 186, 204, 262, 264, 266], "maps_to": [89, 90], "creat": [45, 89, 189, 262], "anoth": [89, 90, 188, 189, 257, 258, 261, 262, 264], "construct": [90, 196, 261, 262, 263, 264], "jingtao": [91, 105, 150, 156, 161, 166, 171, 210, 239], "min": [91, 105, 150, 156, 161, 166, 171, 210, 239], "eth": [91, 105, 150, 156, 161, 166, 171, 210, 239], "epm": [91, 105, 150, 210], "09": [91, 105, 150, 210], "2023": [91, 105, 150, 156, 161, 166, 171, 210, 239, 261], "b0": [92, 98], "psi0": 92, "becaus": [92, 189], "veloc": [92, 100, 113, 114, 115, 117, 134, 145, 146, 241, 242, 244, 261, 262, 264], "cannot": [92, 189], "convert": [15, 24, 63, 74, 75, 76, 77, 78, 79, 80, 81, 92, 94, 112, 123, 151, 188, 189, 195, 241, 242, 244, 261, 263, 264], "want": [92, 189, 261, 262], "ha": [47, 92, 176, 181, 188, 189, 261, 262, 264], "nonlinear": [92, 176, 181], "absent": 92, "induct": [92, 262, 264], "u": [92, 189, 261, 262], "instead": [92, 161, 189, 254, 262, 264], "what": [92, 189, 261, 262, 264], "kind": [92, 189, 194], "cg": [10, 92], "collectionconjug": [92, 112, 120, 121, 122, 123, 131, 132, 151, 152, 153, 197, 264, 266], "thei": [6, 64, 92, 189, 261, 262, 264], "deriv": [57, 92, 145, 189, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 261, 262, 263, 264], "undefin": [92, 189, 263], "incorrect": 92, "result": [12, 47, 64, 92, 186, 189, 239, 262, 264], "immedi": 92, "h": [92, 145, 176, 181, 189, 203, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 262, 264], "One": [92, 189, 261, 262], "after": [92, 189], "simplif": [92, 189, 246, 266], "b_field": 94, "b_": [94, 118, 119, 135, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 261, 262, 264], "b_p": 94, "b_z": [94, 118, 119, 135, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 262], "eight": [94, 261, 262, 264], "field_collect": 95, "antisymmetr": [96, 226, 227, 228], "odd": 96, "especi": [96, 97, 262, 264, 265], "symmetr": [97, 128, 129, 130, 216, 217, 218, 221, 222, 223, 261], "even": [97, 189, 191, 262, 263], "subs_map": [98, 151], "perturb_var": 98, "epsilon": [98, 118, 119, 125, 127, 135, 145, 262, 264], "subtitut": 98, "a0": 98, "ep": 98, "a1": 98, "b1": 98, "perturb": [98, 108, 109, 116, 117, 118, 119, 122, 127, 135, 138, 145, 262, 264], "pg_field": 98, "vector3d": [100, 106, 107, 108, 109, 113, 114, 115, 116, 117, 134, 253], "vector_calculus_3d": [106, 107, 108, 109, 113, 114, 115, 116, 117, 124, 134, 142, 245], "spheric": [106, 108, 113, 116, 133, 139, 141, 142, 144, 191, 256, 262, 264], "half": [110, 111, 189], "height": [110, 111], "polar": [110, 111, 186, 262, 265, 266], "radiu": [16, 110, 111, 256], "pg_comp": [112, 131, 132], "quasi": [115, 265], "geostroph": [115, 262, 265], "ansatz": [115, 134, 188, 262, 264], "phi": [16, 118, 119, 126, 127, 128, 129, 130, 133, 134, 135, 145, 146, 164, 169, 174, 186, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 256, 261, 262, 263, 264], "b_r": 118, "r": [118, 145, 189, 253, 256, 262, 263, 264], "theta": [118, 119, 135, 145, 256, 261, 262, 264], "overlin": [119, 127, 128, 129, 135, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 261, 262, 264], "m_": [32, 119, 135, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 261, 262, 264], "widetild": [119, 127, 130, 135, 226, 227, 228, 229, 230, 231, 232, 233, 234, 261, 262, 264], "zm_": [119, 135, 261, 262, 264], "0e": [119, 135, 214, 215, 229, 233, 234], "r1": [119, 135, 261, 262, 264], "cg_comp": [123, 131, 132], "cylindricalcoordin": 124, "small": [19, 125, 189, 261, 262], "f_": [126, 127, 128, 129, 262, 263, 264], "f_z": [127, 130, 262, 264], "extern": [127, 262], "radial": [129, 157, 162, 167, 172, 177, 182, 186, 187, 191, 193, 195, 197, 198, 199, 200, 201, 204, 206, 208, 221, 222, 223, 241, 242, 244, 253, 256, 262, 264], "anti": [130, 261], "axial": [130, 226, 227, 228, 241, 242, 244, 262], "build": [131, 132, 189, 196, 205, 261], "formal_vel": 134, "pg_psi": 134, "replac": [57, 134, 186, 189, 262, 264], "formal": [134, 189], "ss": [135, 164, 169, 174, 223, 224, 231, 233, 261, 262, 263, 264], "sz": [135, 164, 169, 174, 228, 229, 231, 233, 261, 262, 264], "sphericalcoordin": 142, "spatial": [143, 147, 148, 149], "cartesian": [143, 147, 148, 149, 252, 254, 262, 263, 264], "u_": [145, 146, 241, 242, 244, 262, 264], "u_z": [145, 241, 242, 244], "u_r": 145, "eqset_pg": 151, "zurich": [156, 161, 166, 171, 239], "fourierexpans": [157, 162, 167, 172, 177, 182, 187], "radialexpans": [158, 163, 168, 173, 178, 183, 187, 188], "m1": [159, 263], "zm1": 159, "zm": 159, "ez": [159, 164, 169, 174], "fourier": [15, 65, 70, 159, 164, 169, 174, 179, 184, 187, 188, 189, 195, 197, 204, 206, 263], "daria": [161, 166, 171, 262, 264], "coupl": [161, 166], "consist": [54, 69, 82, 161, 166, 171], "quad_malkus_reg_diff": [161, 166, 262], "nb": [161, 166, 171, 262], "now": [161, 166, 189, 261, 262, 263, 264], "histor": 161, "activ": [161, 166], "maintain": [49, 52, 56, 161, 189], "document": [44, 161, 166, 171, 262], "mm": [161, 166], "expand_daria_mm_malku": 161, "py": [176, 189, 262], "zss": [164, 169, 174], "zs": [164, 169, 174], "es": [164, 169, 174, 262], "mistak": 166, "lead": [166, 189, 241, 242, 248, 263], "prefactor": [166, 263, 264], "doe": [166, 181, 189, 196, 242, 261, 262, 263], "therefor": [44, 166, 254, 263, 264], "recommend": [166, 262, 264], "expand_daria_thesi": 166, "correct": [166, 189, 263], "thesi": [166, 189], "dissert": 171, "c1qp_reg_diff_visc_daria": 171, "togeth": [176, 181, 189, 257], "f_ext": [176, 181], "relev": [176, 181, 262], "do": [71, 176, 181, 189, 261, 262, 264], "simplifi": [176, 181, 189, 262, 263, 264], "f": [74, 176, 179, 181, 184, 189, 262, 264], "mainli": 186, "unit": [186, 189], "disk": [186, 197, 204, 206], "pi": [186, 189], "depend": [28, 30, 47, 186, 189, 253, 261, 262], "link": [176, 181, 186, 262], "As": [12, 186, 191, 262, 263, 264], "bound": [186, 189, 190, 263], "specif": [186, 188, 261, 262, 264], "its": [186, 189, 194, 263], "flexibl": [186, 261, 262, 264], "evolut": [186, 262], "often": [186, 262], "combin": [186, 189, 197, 204, 206, 264], "identifi": [187, 189], "fourier_expand": 187, "rad_expand": 187, "rad_test": 187, "radialtestfunct": 187, "inner_prod_op": [187, 192], "radialinnerproduct": 187, "base_expr": 187, "test_expr": [187, 189], "fourier_xpd": 187, "consid": [64, 187, 189, 261, 263], "share": [64, 176, 187, 188], "among": [187, 188], "rad_xpd": [187, 195], "explicit": [28, 29, 30, 187, 189, 231, 232, 233, 234, 262, 264], "placehold": [187, 197, 204, 205, 206, 210, 211, 216, 221, 226, 231, 232, 233, 234, 262, 264], "fourier_coeff": 188, "spectralexpans": [188, 191], "domain": [15, 188, 189, 195, 262, 263], "view": 188, "coeff": [188, 189, 191, 194, 195, 196, 248], "to_fourier_domain": [188, 195], "langl": [189, 190], "rangl": [189, 190], "_opd_a": 189, "_opd_b": 189, "_wt": [189, 190], "weight": [41, 42, 43, 44, 47, 54, 189, 190], "_int_var": [189, 190], "_bound": [189, 190], "opd_a": 189, "opd_b": 189, "wt": [47, 189, 190], "lower": [189, 261, 262, 264], "upper": 189, "apart": 189, "poli": 189, "import": [189, 261, 262, 263, 264], "cot": 189, "abc": 189, "y": [189, 252, 254, 262, 263, 264], "_arg": 189, "__new__": 189, "easi": [189, 262], "interfac": [21, 28, 29, 30, 31, 34, 189, 252, 253, 254, 256, 257, 262, 264, 265], "args_cnc": 189, "cset": 189, "split_1": 189, "commut": 189, "factor": [57, 189, 195], "treat": 189, "mul": [189, 262], "were": 189, "repeat": 189, "happen": 189, "unevalu": 189, "unless": [57, 189], "suppress": 189, "oo": 189, "singleton": 189, "as_coeff_add": 189, "ration": [189, 262], "summat": [41, 42, 43, 44, 189], "as_coeff_mul": 189, "dep": 189, "add": [189, 262], "independ": [189, 262], "empti": 189, "you": [19, 189, 252, 253, 256, 261, 262, 265], "know": [189, 262, 264], "individu": [189, 191], "tail": 189, "head": 189, "as_two_term": 189, "split": 189, "as_independ": 189, "as_coeff_expon": 189, "multipli": [189, 259, 260, 262], "as_coeffici": 189, "free": 189, "possibl": [189, 262], "sin": [59, 60, 189, 262, 263], "two": [6, 8, 62, 71, 72, 176, 189, 191, 196, 254, 259, 260, 261, 262, 263, 264], "them": [189, 261, 262, 264], "exactli": [189, 262], "match": [51, 52, 53, 189], "constant": 189, "could": [19, 189], "select": 189, "greater": 189, "_": [189, 261, 262, 264], "just": [189, 257, 261, 262, 264], "exact": [57, 189], "zz": 189, "coeff_monomi": 189, "nth": 189, "multipl": [7, 56, 189], "polytool": 189, "find": [47, 189, 265], "as_coefficients_dict": 189, "sym": [189, 248, 249], "defaultdict": 189, "inquiri": [189, 262], "about": [189, 262, 264], "provid": [56, 189, 257, 261, 262, 265], "regular": [189, 191, 261, 262, 265, 266], "as_content_primit": 189, "radic": 189, "clear": [189, 261, 262], "recurs": [189, 248, 249, 250], "content": 189, "primit": 189, "posit": 189, "foo": 189, "canon": 189, "try": [19, 189], "preserv": 189, "structur": [189, 248, 261, 262], "expand_mul": 189, "retain": 189, "end": [189, 262, 263, 264], "join": [189, 262, 264], "onc": [189, 262], "11": [189, 262], "121": 189, "84": 189, "out": [12, 189, 195, 261, 262, 264], "distribut": 189, "leav": 189, "as_dummi": 189, "uniqu": 189, "appear": 189, "assumpt": 189, "being": [41, 42, 189, 254, 262], "real": [189, 262], "_0": 189, "is_real": 189, "_r": 189, "bound_symbol": 189, "those": [189, 264], "as_expr": 189, "gen": 189, "as_poli": 189, "hint": 189, "naiv": 189, "obtain": 189, "complet": [189, 262, 263], "separatevar": 189, "pow": 189, "exp": [189, 263], "log": 189, "thing": [189, 261, 262, 264], "here": [189, 261, 262, 264, 265], "respect": [6, 57, 58, 189, 196, 262, 264], "noncommut": 189, "regardless": 189, "nonzero": 189, "as_add": 189, "co": [59, 60, 189, 263], "n1": 189, "n2": 189, "n3": 189, "anyth": 189, "els": [19, 189, 252, 253, 254, 261], "abov": [189, 264], "make": [189, 261, 262, 263], "former": [189, 262], "while": [189, 261, 262, 264], "latter": 189, "free_symbol": 189, "might": [189, 261, 262], "keep": 189, "track": 189, "send": 189, "as_leading_term": 189, "logx": 189, "cdir": 189, "seri": 189, "_eval_as_leading_term": 189, "as_numer_denom": 189, "stub": 189, "normal": 189, "as_ordered_factor": 189, "as_ordered_term": 189, "data": [23, 24, 34, 189, 261, 265], "transform": [23, 24, 151, 189, 253, 254, 257, 258, 262, 264, 266], "print": [56, 189, 261, 262, 264], "as_powers_dict": 189, "expon": 189, "caution": 189, "lost": [189, 195], "applic": [189, 191, 261], "guarante": [189, 203], "as_real_imag": 189, "perform": [6, 41, 42, 44, 189, 190, 262], "imaginari": 189, "confus": [189, 262], "re": [189, 262], "im": [189, 263], "as_term": 189, "aseri": 189, "hir": 189, "asymptot": 189, "equival": [189, 261], "repres": [189, 196, 248, 261, 264], "produc": 189, "hierarch": 189, "stop": 189, "earli": 189, "nicer": 189, "rewrit": [189, 262, 263], "normalis": 189, "24": 189, "without": [189, 261, 262], "algorithm": [189, 262], "induc": 189, "gruntz": 189, "majorli": 189, "mrv": 189, "overal": 189, "idea": [189, 261], "look": [189, 261, 262, 263, 264, 265], "most": [189, 191, 261, 262, 265], "rapidli": [189, 262], "vari": 189, "subexpress": 189, "till": 189, "tri": 189, "represent": [19, 189], "belong": 189, "dominik": 189, "proc": 189, "1993": 189, "symp": 189, "algebra": [27, 189, 193, 262], "pp": 189, "239": 189, "244": 189, "p90": 189, "http": 189, "en": 189, "wikipedia": 189, "org": 189, "wiki": 189, "asymptotic_expans": 189, "docstr": 189, "assumptions0": 189, "besid": 189, "typeinfo": 189, "extended_neg": 189, "extended_nonneg": 189, "extended_nonposit": 189, "extended_nonzero": 189, "extended_posit": 189, "extended_r": 189, "finit": 189, "hermitian": [28, 29, 30, 189], "infinit": 189, "nonneg": 189, "nonposit": 189, "atom": 189, "By": [189, 261], "truli": 189, "divid": [189, 262, 264], "smaller": [6, 189], "piec": 189, "request": 189, "demonstr": [189, 264], "numbersymbol": 189, "zoo": 189, "infin": 189, "implicitli": [189, 241, 244, 259, 260], "too": 189, "Be": [65, 189], "check": 189, "your": [189, 261], "implicit": 189, "is_integ": 189, "final": [28, 29, 30, 47, 189, 196, 262, 264], "scan": 189, "appliedundef": 189, "cancel": 189, "canonical_vari": 189, "clash": 189, "change_vari": 189, "new_var": 189, "int_var_expr": 189, "inv_expr": 189, "jac_posit": 189, "merg": 189, "over": 189, "state": [189, 262, 264], "jacobian": 189, "absolut": [6, 64, 189], "taken": [189, 190, 262, 264], "befor": [189, 262], "although": [189, 261], "reason": [189, 261, 262, 264], "definit": [189, 262], "class_kei": 189, "nice": 189, "_first": 189, "front": 189, "revers": [189, 243], "factor_term": 189, "distribute_order_term": 189, "combsimp": 189, "commute_factor_in": 189, "opd": 189, "move": [189, 195], "manual": [189, 262, 264], "outsid": 189, "commute_factor_out": 189, "mathemat": [189, 261, 262], "sorted_class": 189, "compute_leading_term": 189, "could_extract_minus_sign": 189, "liter": [6, 8, 24, 52, 74, 189], "though": 189, "put": [19, 189], "someth": 189, "wrt": 189, "signsimp": 189, "count": 189, "queri": 189, "count_op": 189, "visual": [189, 239, 262, 263], "doit": [189, 262, 264], "un": 189, "dummy_eq": 189, "dummi": [189, 262], "failing_express": 189, "did": 189, "signific": 189, "15": [189, 261, 262, 264], "maxn": 189, "100": 189, "chop": [6, 189], "strict": 189, "formula": [189, 264], "accuraci": 189, "digit": [6, 51, 54, 189], "temporari": 189, "tini": 189, "subresult": 189, "standard": [30, 49, 52, 189, 262, 264], "magnitud": 189, "purpos": [189, 261, 262], "1e": [62, 64, 189], "000100000000000000": 189, "precisionexhaust": 189, "fail": 189, "avail": [19, 189, 210, 264], "maxprec": 189, "choos": [189, 195], "tanh": 189, "sinh": 189, "oscillatori": 189, "osc": 189, "debug": 189, "inform": [189, 257, 261, 265], "advers": 189, "affect": 189, "1e16": 189, "truncat": [8, 189], "subtract": 189, "That": 189, "accur": [82, 189], "00000000000000": 189, "modulu": 189, "power_bas": 189, "power_exp": 189, "multinomi": 189, "expr_free_symbol": 189, "node": [54, 189, 247], "extract_addit": 189, "toward": 189, "extract_multipl": 189, "extract_branch_factor": 189, "allow_half": 189, "exp_polar": 189, "fourier_seri": 189, "sine": 189, "cosin": 189, "x0": 189, "dir": 189, "hyper": 189, "eg": 189, "indexedbas": 189, "some": [64, 70, 189, 261, 262, 264], "except": [19, 189, 261, 262], "own": [189, 264], "fromit": 189, "hold": [189, 262, 264], "gammasimp": 189, "geto": 189, "getn": 189, "pattern": [189, 196], "knowledg": 189, "open": [189, 262, 264], "lopen": 189, "particular": 189, "has_fre": 189, "integral_form": 189, "mod": [176, 189], "mod_invers": 189, "is_algebraic_expr": 189, "simpl": [189, 262], "extens": 189, "is_rational_funct": 189, "exponenti": [73, 189], "attempt": 189, "nontrivi": [65, 189], "becom": [189, 261, 263], "algebraic_express": 189, "is_compar": 189, "alreadi": [12, 64, 70, 189, 262, 264], "mean": [57, 189, 261, 262], "rewritten": 189, "dif": 189, "_prec": 189, "is_const": 189, "flag": [47, 189], "constanc": 189, "conclus": [189, 263], "necessarili": 189, "few": 189, "strategi": 189, "random": 189, "agre": 189, "decis": [189, 262], "differenti": [189, 193, 257, 262, 263], "omit": 189, "denomin": 189, "answer": 189, "neither": [189, 262], "nor": 189, "prove": 189, "failing_numb": 189, "is_meromorph": 189, "meromorph": 189, "quick": 189, "analysi": 189, "multivalu": 189, "branch": 189, "everywher": 189, "essenti": [189, 265], "singular": [189, 266], "cut": [189, 262], "endpoint": 189, "is_numb": 189, "soon": 189, "hit": 189, "is_polynomi": 189, "abl": 189, "ratio": [65, 189], "rational_funct": 189, "leadterm": 189, "xlim": 189, "lseri": 189, "yield": [19, 189, 262, 264], "exaxmpl": 189, "termin": 189, "advantag": 189, "nseri": 189, "mani": [71, 189, 191, 261, 262, 264], "interest": 189, "next": [189, 262, 264], "ask": 189, "old": [189, 263], "wild": 189, "xreplac": [57, 189], "p_": [189, 262], "q_": 189, "r_": 189, "But": 189, "style": [189, 261], "repl_dict": 189, "helper": 189, "x_": 189, "_eval_nseri": 189, "innermost": 189, "cross": 189, "everyth": [189, 261], "avoid": [57, 65, 189], "advanc": [189, 265], "disadvantag": 189, "less": 189, "expect": [189, 262, 264], "append": [189, 261, 262, 264], "shorter": 189, "met": 189, "harder": 189, "120": 189, "approach": 189, "traceback": 189, "recent": 189, "last": [189, 254, 261, 262, 264], "poleerror": 189, "nsimplifi": 189, "toler": [64, 189], "powsimp": 189, "everi": [189, 261], "radsimp": 189, "ratsimp": 189, "rcall": 189, "through": [189, 261, 262], "tree": [189, 247, 248, 249, 250], "simul": 189, "common": [189, 251], "refin": 189, "removeo": 189, "simultan": 189, "wa": 189, "bottom": 189, "fashion": 189, "target": 189, "caus": [189, 262], "succe": 189, "receiv": 189, "setup": 189, "tan": [59, 60, 189], "newtyp": 189, "ab": 189, "intuit": 189, "behavior": 189, "filter": 189, "twice": 189, "is_mul": 189, "natur": 189, "tricki": 189, "probabl": [189, 262], "better": 189, "describ": [189, 262], "is_pow": 189, "is_add": 189, "themselv": 189, "capabl": 189, "trigonometr": 189, "combinatori": 189, "gamma": 189, "unspecifi": 189, "_eval_rewrit": 189, "mysin": 189, "def": [19, 189, 261, 263], "_eval_rewrite_as_": 189, "backward": 189, "compat": 189, "discourag": 189, "_eval_rewrite_as_co": 189, "round": 189, "decim": [41, 42, 44, 52, 53, 54, 82, 189], "14": [189, 263], "effect": 189, "31": 189, "72": 189, "isinst": [189, 261], "123": 189, "lazi": 189, "univari": 189, "suppli": 189, "bi": 189, "stand": 189, "smooth": 189, "alter": 189, "17": 189, "typeerror": [19, 189], "sort_kei": [], "sever": [49, 52, 189, 261], "sympifi": 189, "success": [189, 262], "op": 189, "tie": 189, "default_sort_kei": 189, "previou": [189, 263], "until": 189, "been": [189, 262, 264], "rep": 189, "delai": [189, 262], "nan": 189, "featur": [189, 262, 265], "subsequ": 189, "unord": 189, "length": [189, 260], "break": 189, "ti": 189, "unsort": 189, "reflect": 189, "21": [189, 262, 264], "333333333333333333333": 189, "333333333333333314830": 189, "ensur": 189, "wildcard": 189, "condit": [189, 261, 262, 265, 266], "evalfmixin": 189, "taylor_term": 189, "previous_term": 189, "taylor": 189, "subclass": [19, 189], "redefin": 189, "trigsimp": 189, "occurr": 189, "occur": [64, 70, 189], "entir": [189, 264], "valueerror": 189, "invalid": 189, "conj": 190, "space": [190, 203, 261], "cdot": [190, 262, 264], "_conj": 190, "tensor": [191, 252, 253, 254, 256, 257, 262, 265, 266], "complic": [191, 261, 262, 264], "aris": 191, "constraint": 191, "fulfil": [191, 261, 263], "potenti": 191, "mixtur": 191, "tackl": 191, "henc": [176, 191, 261, 263], "innerproductop1d": 192, "test_funct": 193, "child": [194, 257, 262], "lh": 195, "dt": 195, "collect_matric": 195, "factor_lh": 195, "factor_rh": 195, "user": [195, 262], "ditto": 195, "rh": [195, 264], "fourier_ansatz": 195, "to_inner_product": 195, "properli": [57, 69, 195], "to_radi": 195, "introduc": [195, 264, 265], "outcom": 196, "_row_nam": 196, "_col_nam": 196, "nest": 196, "There": [44, 196, 261, 264], "signaur": 196, "invok": [196, 252, 253, 254, 256, 262, 264], "build_matrix": 196, "block_spars": 196, "sparsiti": 196, "mark": 196, "whatev": [34, 196], "discard": 196, "matrix_obj": 196, "serialize_el": 196, "cgvar": [197, 261, 264], "cgvar_ptb": [197, 264], "denot": [49, 52, 198, 199, 262, 264], "ell": [200, 201], "angular": 202, "frequenc": 202, "pow_h": 203, "pow_": 203, "orthogon": [176, 181, 203, 254], "approri": 203, "hilbert": 203, "pgvar": [204, 261, 262, 264], "pgvar_ptb": [204, 262, 264], "var": [15, 205, 212, 215, 217, 220, 222, 225, 227, 230, 231, 232, 233, 234], "reduced_var": 206, "l_": [211, 215, 216, 219, 220, 221, 224, 225, 231, 232, 233, 234, 262, 264], "l_z": [226, 229, 230, 231, 232, 233, 234, 262, 264], "lundquist": 237, "nu": 237, "eta": 237, "postproc": 238, "phys_par": [241, 242, 244], "lambdifi": [241, 242, 244, 263], "physic": [241, 242, 244, 261, 262], "trail": [73, 241, 242, 244], "u_p": [241, 242, 244], "zeta": [241, 242, 244], "long": [19, 241, 244], "inherit": [244, 254, 261, 262], "vector": [59, 60, 245, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 266], "calculu": [245, 251], "completemeneri": 251, "x_name": 252, "y_name": 252, "z_name": [252, 253], "orthogonalcoordinates3d": [252, 253, 255, 256, 257, 258], "x1": [252, 253, 254, 256], "x2": [252, 253, 254, 256], "x3": [252, 253, 254, 256], "x_1": [252, 253, 256], "x_2": [252, 253, 256], "x_3": [252, 253, 256], "cart3d": [252, 254], "zname": 252, "coord": [252, 253, 254, 256], "setter": [252, 253, 254, 256], "getter": [252, 253, 254, 256], "curl": [252, 253, 254, 256, 258], "vector_in": [252, 253, 254, 256], "diff": [252, 253, 256, 262], "div": [252, 253, 254, 256, 258], "diverg": [252, 253, 254, 256, 258], "grad": [252, 253, 254, 255, 256], "scalar_in": [252, 253, 254, 256], "scalar": [252, 253, 254, 255, 256, 260, 261, 262, 266], "gradient": [252, 253, 254, 255, 256], "laplacian": [252, 253, 254, 255, 256, 258], "tensor_in": [252, 253, 254, 256], "rank": [252, 253, 254, 256, 257, 266], "transform_to": [253, 254, 255, 257, 258], "new_si": [253, 254, 255, 257, 258], "coeffs_new": [253, 254], "s_name": 253, "p_name": [253, 256], "cyl3d": 253, "cylindricalcoordinates3d": 253, "vertic": [253, 262, 264], "v_in": 253, "under": [181, 253, 262, 264], "x1_name": 254, "x2_name": 254, "x3_name": 254, "curvilinear": 254, "third": 254, "rot": 254, "coord_si": [255, 257, 258], "tensor3d": [255, 258], "shortcut": [255, 258], "remain": [49, 52, 255, 261, 262, 264], "unchang": 255, "r_name": 256, "t_name": 256, "colatitud": 256, "sph3d": 256, "sphericalcoordinates3d": 256, "surface_div": 256, "surfac": 256, "surface_grad": 256, "store": [21, 257, 262, 264], "design": [49, 52, 257, 261, 262], "realli": [63, 257, 261, 262, 263], "ndim": 257, "vec_a": [259, 260], "vec_b": [259, 260], "three": [259, 264], "via": [28, 29, 30, 260, 261], "len": 260, "gestrophi": 262, "jackson": [262, 264, 265], "maffei": [262, 264, 265], "2020": [261, 262, 264, 265], "mhd": [261, 262], "rotat": [262, 264], "frame": 262, "flow": 262, "axisymmetr": 262, "caviti": 262, "solenoid": 262, "satisfi": [262, 263], "penetr": 262, "diffusionless": 262, "shown": 262, "develop": 262, "sphere": 262, "geometri": 262, "inde": [262, 263], "wolfram": 262, "mathematica": [262, 264], "notebook": [261, 262, 264], "heavili": 262, "inspir": 262, "motiv": 262, "observ": [261, 262], "despit": [41, 42, 262], "cryptic": 262, "apprehend": 262, "wherea": 262, "b_sb_": 262, "csp": 262, "eq1": 262, "eq11": 262, "eq73": 262, "eq74": 262, "eq76": 262, "eq80": 262, "seem": [82, 262], "jot": 262, "down": 262, "tabl": 262, "deciph": 262, "respons": 262, "lack": 262, "come": [262, 265], "plot": [262, 263], "switch": 262, "stefano": 262, "languag": 262, "dsl": 262, "inflex": 262, "due": [176, 181, 262], "orient": 262, "program": [262, 264], "oop": 262, "repo": 262, "30": [262, 264], "year": 262, "ago": 262, "expir": 262, "libari": 262, "let": [19, 261, 262, 263], "alon": 262, "matlab": 262, "librari": [28, 262], "gpl": 262, "script": 262, "glue": 262, "good": 262, "side": [262, 264], "pictur": 262, "matplotlib": [262, 263], "sell": 262, "much": [261, 262], "easier": 262, "export": [261, 262], "intermedi": 262, "close": [62, 262, 264], "Of": 262, "cours": [262, 263], "price": 262, "statement": 262, "recycl": 262, "caprici": 262, "coincid": 262, "human": 262, "On": 262, "went": 262, "wrong": [262, 263], "peek": 262, "hood": 262, "arbitrari": [19, 29, 51, 53, 54, 262], "slower": 262, "vanilla": 262, "issu": [44, 262], "circumv": 262, "multi": [29, 34, 41, 42, 51, 52, 53, 54, 69, 262], "doubl": [6, 30, 67, 262], "suffici": [261, 262, 263], "13": 262, "22": 262, "panda": 262, "jupyterlab": 262, "sphinx": 262, "pytest": 262, "perfplot": 262, "line_profil": 262, "har": 262, "pretti": 262, "highli": 262, "interact": 262, "web": 262, "project": [262, 265], "jupyt": 262, "tool": 262, "ipython": [262, 263], "consol": 262, "launch": 262, "servic": 262, "enabl": [261, 262], "latex": 262, "render": 262, "significantli": 262, "improv": 262, "unicod": 262, "ascii": 262, "brief": 262, "cover": 262, "tutori": 262, "offici": 262, "websit": 262, "anyon": 262, "java": 262, "fortran": 262, "julia": 262, "scenario": 262, "readili": 262, "mapl": 262, "psi_1": 262, "psi_1m": 262, "hat": 262, "_1": 262, "displaystyl": [261, 262, 263, 264], "show": [262, 266], "known": [44, 262], "diff_psi_1m_x": 262, "diff_psi_x": 262, "partial": [262, 264], "substract": 262, "psi_expr": 262, "again": [262, 263], "dpsi_expr_dx": 262, "displai": [261, 262, 263, 264], "hierarchi": 262, "reader": [262, 264], "who": 262, "typic": 262, "readabl": 262, "diff_jacobi": 262, "diff_val": 262, "substack": 262, "12": [261, 262], "counterintuit": 262, "simpli": [261, 262, 263, 264], "sure": [65, 262], "programm": 262, "don": 262, "priori": 262, "diff_simp": 262, "appar": 262, "6xy": 262, "still": [262, 263, 264], "achiev": 262, "sane": 262, "overli": 262, "fond": 262, "govern": [261, 262], "section": 262, "shall": 262, "inspect": [262, 264], "os": [261, 262, 264], "sy": [261, 262, 264], "root_dir": [261, 262, 264], "hack": [261, 262, 264], "parent": [261, 262, 264], "directori": [261, 262, 264], "run": [261, 262, 264], "root": [47, 54, 261, 262, 264], "comment": [261, 262, 264], "path": [261, 262, 264], "dirnam": [261, 262, 264], "getcwd": [261, 262, 264], "pg_util": [261, 262, 264], "oordin": [262, 264], "cyl": [262, 264], "i_comp": [262, 264], "b_vec": [262, 264], "b0_vec": [262, 264], "b_sph": [262, 264], "b0_sph": [262, 264], "u_vec": [262, 264], "u0_vec": [262, 264], "u_sph": [262, 264], "u0_sph": [262, 264], "And": [261, 262, 263], "pgvar_bg": [262, 264], "_field_nam": [261, 262, 264], "ones": [64, 262, 264], "_e": [262, 264], "suffix": [262, 264], "mention": [262, 264], "sugar": [261, 262], "frost": 262, "field_symb": [262, 264], "superscript": [262, 264], "letter": [261, 262, 264], "whenev": [262, 264], "necessari": [261, 262, 264, 266], "u_pg": [262, 264], "With": [262, 264], "similarli": [261, 262, 264], "eqs_pg": [262, 264], "procedur": [262, 264], "borrow": [262, 264], "eqs_lin": 262, "eqs_pg_lin": [262, 264], "against": 262, "pg_assim": 262, "pdf": [261, 262, 264], "hand": [262, 264], "evenli": [262, 264], "oddli": [262, 264], "bodi": [262, 264], "mathbf": [31, 261, 262, 264], "regard": [49, 52, 262, 264, 265], "compil": [262, 264], "viscou": [262, 264], "diffus": [262, 264], "buoyanc": [262, 264], "straightforward": [262, 264], "notic": 262, "slooowwww": 262, "20": [261, 262, 264], "my": [261, 262, 264], "laptop": [262, 264], "amd": [262, 264], "r5": [262, 264], "4500u": [262, 264], "bracket": [262, 264], "far": [262, 264], "sequenti": [262, 264], "parallel": [262, 264], "bottleneck": [262, 264], "quickli": [262, 264], "pgeq": 262, "parse_expr": [262, 264], "back": [242, 262], "cost": 262, "2s": [176, 181, 262], "folder": 262, "eqs_cg": [262, 264], "eqs_cg_lin": [262, 264], "task": [262, 264], "ls_sym_expr": [262, 264], "lp_sym_expr": [262, 264], "lz_asym_expr": [262, 264], "le_p_expr": [262, 264], "le_p": [262, 264], "ls_sym_lin": [262, 264], "lp_sym_lin": [262, 264], "lz_asym_lin": [262, 264], "le_p_lin": [262, 264], "ls_sym": [262, 264], "step": [5, 6, 8, 10, 12], "load_ext": 263, "autoreload": 263, "pyplot": 263, "plt": 263, "a_x": 263, "a_i": 263, "a_": 263, "a_p": 263, "a_xx": 263, "xx": 263, "a_xi": 263, "xy": 263, "a_yx": 263, "yx": 263, "a_yi": 263, "yy": 263, "a_ss": 263, "a_sp": 263, "a_pp": 263, "cart2polar_map": 263, "polar2cart_map": 263, "1990": 263, "sum_": 263, "infti": 263, "a_val": 263, "discontin": 263, "a_numer": 263, "fig": 263, "ax": 263, "polar_singularity_scalar": 263, "sfunc": 263, "begin": 263, "align": 263, "neq": 263, "lambda_m": 263, "sgn": 263, "rotate_polar2cart_vec": 263, "f_p": 263, "a_s_val": 263, "a_p_val": 263, "a_s_exp": 263, "a_p_exp": 263, "nevertheless": 263, "a_x_val": 263, "a_y_v": 263, "blow": 263, "perfectli": 263, "shouldn": 263, "jump": 263, "paper": 263, "a_s_numer": 263, "a_p_numer": 263, "polar_singularity_vector": 263, "vfunc_": 263, "vfunc_p": 263, "lowest": 263, "holdenri": [263, 264, 265], "chernoff": [263, 264, 265], "2021": [263, 264, 265], "ij": [32, 263], "00": [261, 263], "m0": 263, "geq": 263, "qquad": 263, "exhaust": 263, "rotate_polar2cart_tensor2": 263, "f_ss": 263, "f_sp": 263, "f_pp": 263, "f_xx": 263, "f_yi": 263, "f_xy": 263, "f_yx": 263, "a_ss_val": 263, "a_pp_val": 263, "a_sp_val": 263, "a_ps_val": 263, "a_ss_exp": 263, "a_sp_exp": 263, "a_ps_exp": 263, "a_pp_exp": 263, "a_xx_val": 263, "a_xy_v": 263, "a_yx_v": 263, "a_yy_v": 263, "continu": [263, 266], "whole": 263, "a_ss_numer": 263, "a_sp_numer": 263, "a_ps_numer": 263, "a_pp_numer": 263, "polar_singularity_rank2tensor": 263, "tfunc_ss": 263, "tfunc_sp": 263, "tfunc_p": 263, "tfunc_pp": 263, "perfect": 263, "flip": 263, "abid": 263, "newli": 263, "undoubtedli": 263, "throughout": 263, "magneto": 265, "hydrodynam": 265, "planetari": 265, "dynamo": 265, "descript": 265, "aim": [32, 265], "solut": [242, 265], "plug": [242, 265], "assimil": 265, "geomagnet": [261, 265], "gda": 265, "download": 265, "resourc": 265, "homepag": 265, "subdivid": 265, "search": 265, "fundament": [261, 264], "esp": 261, "understand": 261, "why": [261, 266], "temperatur": 261, "mie": 261, "decomp": 261, "further": 261, "five": 261, "t_u": 261, "p_u": 261, "t_b": 261, "p_b": 261, "organ": 261, "easili": 261, "annoi": 261, "deal": 261, "snippet": 261, "conglomer": [34, 261], "mere": [63, 261], "occupi": 261, "pose": 261, "batch": 261, "admit": 261, "underneath": 261, "grant": 261, "circumst": 261, "meta": 261, "articl": 261, "publish": 261, "materi": 261, "titl": 261, "doi": 261, "start": [5, 6, 12, 261, 266], "datetim": 261, "article_meta": 261, "author": 261, "date": 261, "accessd": 261, "journal": 261, "chao": 261, "south": 261, "atlant": 261, "anomali": 261, "earth": 261, "1999": 261, "low": [12, 261], "orbit": 261, "satellit": 261, "swarm": 261, "cryosat": 261, "champ": 261, "sac": 261, "\u00f8rsted": 261, "annual": 261, "monthli": 261, "ground": 261, "observatori": 261, "measur": 261, "finlai": 261, "kloss": 261, "olsen": 261, "hammer": 261, "t\u00f8ffner": 261, "clausen": 261, "grayver": 261, "kuvshinov": 261, "1186": 261, "s40623": 261, "020": 261, "01252": 261, "planet": 261, "At": 261, "think": 261, "me": 261, "sai": 261, "stabl": 261, "field_nam": 261, "03": 261, "07": 261, "field_valu": 261, "syntax": 261, "simpler": 261, "1950": 261, "swiss": 261, "poster": 261, "lowercas": 261, "string_low": 261, "elif": 261, "article_meta_swiss_styl": 261, "2000": 261, "date_ref_2000": 261, "timedelta": 261, "article_meta_ref_2000": 261, "7598": 261, "8466": 261, "particularli": 261, "convers": [71, 82, 261], "reconstruct": 261, "article_meta_reconstruct": 261, "major": 261, "pratic": 261, "pg_field_nam": 261, "cg_field_nam": 261, "demo_vari": 261, "unsur": 261, "linearli": 261, "pg_to_conjug": [261, 264], "cgvar_in_pgvar": 261, "conjugate_to_pg": [261, 264], "pgvar_in_cgvar": 261, "demo": [262, 264], "explan": 262, "demo_collect": [262, 264], "ingredi": [10, 44, 262], "learn": 262, "plotting_util": 263, "summar": 264, "familiar": 264, "cgvar_bg": 264, "overview": 264, "undergo": 264, "precomput": [264, 266], "constitut": 264, "layer": 264, "seen": 264, "fs_sym": 264, "fp_sym": 264, "fz_asym": 264, "fe_p": 264, "lp_sym": 264, "lz_asym": 264, "ls_sym_cg": 264, "lp_sym_cg": 264, "lz_asym_cg": 264, "le_p_cg": 264, "ls_sym_lin_cg": 264, "lp_sym_lin_cg": 264, "lz_asym_lin_cg": 264, "le_p_lin_cg": 264, "cf_lorentz": 264, "forcing_map": 264, "eqs_pg_lorentz": 264, "pai": 264, "attent": 264, "period": 264, "predefin": 264, "3rd": 264, "2nd": [14, 264, 266], "force_explicit": 264, "force_explicit_cg": 264, "force_explicit_lin": 264, "force_explicit_lin_cg": 264, "eqs_pg_explicit": 264, "massiv": 264, "finish": 264, "haven": 264, "talk": 264, "readi": 264, "dive": 264, "quickstart": [265, 266], "intro": [265, 266], "prerequisit": 266, "carri": 266, "necess": 266, "confirm": 266, "counter": 266, "lewi": 266, "bellan": 266, "understood": [5, 8], "xpd": 5, "innerquad_gaussjacobi": 8, "assemble_forc": 10, "form_equ": 12, "plan": 12, "phase": 12, "overwrit": [5, 6, 7, 8, 10, 12], "eigensolv": [5, 6, 8, 10, 12], "ii": 5, "upon": [5, 6, 8, 10, 12], "read_fmt": 6, "hdf5": [6, 8], "pickl": [6, 8, 24], "save_fmt": 6, "diag": [6, 7, 28, 29, 30, 31], "prec": [6, 7, 29, 41, 42, 51, 52, 56, 67, 69, 74, 76, 77, 78, 79, 82], "iv": 6, "113": [7, 29, 51, 52], "iii": 8, "deactiv": 10, "ib": 12, "eq_si": 15, "dyn_var": 15, "psi_var": 16, "od": 16, "jsonencod": 19, "encod": 19, "adopt": 19, "jannismain": 19, "compress": 19, "sensibl": [], "skipkei": [], "ensure_ascii": [], "incom": [], "charact": [], "escap": [], "check_circular": [], "custom": [], "circular": [], "prevent": [], "overflowerror": [], "allow_nan": [], "compliant": [], "javascript": [], "decod": [], "regress": [], "indent": [], "member": [], "newlin": [], "compact": [176, 181], "item_separ": [], "key_separ": [], "elimin": [], "whitespac": [], "serializ": [19, 24], "iterencod": 19, "_one_shot": 19, "chunk": 19, "bigobject": 19, "mysocket": 19, "main": [21, 34, 57], "info": 21, "val": [21, 243], "serialized_obj": 23, "sp_arrai": 24, "unpars": 24, "preferr": 24, "lin_solv": 28, "_name": 28, "_depend": 28, "eig": [28, 29, 30], "eig_g": [28, 29, 30], "eigh": [28, 29, 30], "inv": [28, 29, 30], "solve_diag": [28, 29, 30], "solve_explicit": [28, 29, 30], "linsyssolv": [29, 30, 31], "gmpy2": [29, 34, 41, 51, 52, 56, 59, 69, 74, 76, 77, 82], "flamp": 29, "eigenproblem": [30, 31], "stdlinsolv": 31, "math": 32, "sum_k": 32, "w_k": [32, 41, 42, 43, 44], "f_a": [32, 41, 42, 43, 44], "na_i": 32, "xi_k": [32, 41, 42, 43, 44], "f_b": [32, 41, 42, 43, 44], "nb_j": 32, "powers_of": 34, "mpmath": [34, 42, 52, 53, 54, 60, 78, 79, 82], "output_form": 34, "m_in": 34, "operand_a": [41, 42, 43, 44], "operand_b": [41, 42, 43, 44], "nrange_a": [41, 42, 43, 44], "nrange_b": [41, 42, 43, 44], "xi_quad": [41, 42, 43, 44], "wt_quad": [41, 42, 43, 44], "n_dp": [41, 42, 44, 54], "33": [41, 42, 52, 53, 54], "dp": [41, 44, 52, 53, 56, 76, 77, 78, 79, 82], "mpf": [41, 52, 53, 54], "meaningless": [41, 42, 51, 52, 53], "mpfr": [42, 51, 52, 67], "16": [44, 45, 82], "quad_matrix": 44, "favour": 44, "clip_threshold": 45, "float64": [45, 81], "220446049250313e": 45, "dens": [45, 74, 75], "msg": 47, "converg": [47, 73], "messag": 47, "nmesh": [49, 52], "zmesh": [49, 52], "eval_jacobi": [49, 52], "albeit": [49, 52], "restrict": [6, 49, 52], "mesh": [49, 52], "nz": [49, 52], "deg": [49, 52], "binari": [6, 51], "arb": 52, "extra_dp": 54, "max_it": 54, "rootsjacobiresult": 54, "approx": 54, "quadrupl": 54, "pythoncodeprint": 56, "printer": 56, "doprint": 56, "assign_to": 56, "matrixsymbol": 56, "set_global_set": 56, "wide": 56, "arg_a": 57, "arg_b": 57, "facilit": 57, "mix": 57, "won": 57, "return_expr": 58, "array_1": [62, 71, 72], "array_2": [62, 71, 72], "rtol": [62, 64], "05": [62, 64], "atol": [62, 64], "08": [62, 64], "enough": [62, 82], "str_fun": 63, "stringifi": 63, "eig_val": [64, 70], "cluster": [64, 65, 70], "decid": 64, "degener": 64, "distinct": 64, "rel": 64, "adjac": [64, 70], "0000001": 64, "99999999": 64, "00000001": 64, "eig_bas": 65, "eig_comp": 65, "waterlevel": 65, "opt_clust": [65, 70], "drift": 65, "boyd": [65, 70], "comparison": 65, "trivial": 65, "divis": 65, "cluster_mod": [65, 70], "intermod": 70, "ident": [71, 72], "reserv": 71, "coo": 71, "dtype": 71, "csr": 71, "spectrum": [73, 176, 181], "gmpy2_arrai": 74, "obj_arrai": 75, "fill_zero": 75, "complex128": 80, "dps_default": 82, "prec_default": 82, "53": 82, "322": 82, "proxi": 82, "log_2": 82, "var_collect": 93, "nm": [176, 181], "j_n": [176, 181], "expand_stream_force_orth": 176, "orthgon": 176, "read": 176, "int_0": [176, 181], "ds": [176, 181], "n_": [176, 181], "delta_": [176, 181], "nn": [176, 181], "translat": [176, 181], "eigenv": 240, "criteria": 240, "eigensolut": 242, "recov": 242, "filter_op": 243, "threshold": [6, 243], "transform_filt": 243, "transform_sort": 243, "remove_zero": 243, "collected_tre": [247, 250], "leaf_op": 247, "leaf": 247, "sym1": 248, "term1": 248, "sym2": 248, "term2": 248, "symn": 248, "termn": 248, "recursive_collect": [249, 250], "repr": 249, "enforc": 6}, "objects": {"": [[0, 0, 0, "-", "pg_utils"]], "pg_utils": [[1, 0, 0, "-", "eigen"], [17, 0, 0, "-", "numerics"], [83, 0, 0, "-", "pg_model"], [238, 0, 0, "-", "processing"], [245, 0, 0, "-", "sympy_supp"]], "pg_utils.eigen": [[2, 1, 1, "", "apply_bg_to_eq"], [3, 1, 1, "", "apply_bg_to_set"], [4, 1, 1, "", "assemble_forcing"], [5, 1, 1, "", "collect_matrix_elements"], [6, 1, 1, "", "compute_eigen"], [7, 1, 1, "", "compute_eigen_mp"], [8, 1, 1, "", "compute_matrix_numerics"], [9, 1, 1, "", "equations_to_matrices"], [10, 1, 1, "", "form_equations"], [11, 1, 1, "", "process_matrix_element"], [12, 1, 1, "", "reduce_dimensions"], [13, 1, 1, "", "reduce_eqsys_to_force_form"], [14, 1, 1, "", "reduce_eqsys_to_psi"], [15, 1, 1, "", "to_fd_ode_pg"], [16, 1, 1, "", "to_fd_ode_psi"]], "pg_utils.numerics": [[18, 0, 0, "-", "io"], [27, 0, 0, "-", "linalg"], [32, 0, 0, "-", "matrices"], [46, 0, 0, "-", "special"], [55, 0, 0, "-", "symparser"], [61, 0, 0, "-", "utils"]], "pg_utils.numerics.io": [[19, 2, 1, "", "CompactArrayJSONEncoder"], [20, 1, 1, "", "matrices_load_h5"], [21, 1, 1, "", "matrices_save_h5"], [22, 1, 1, "", "matrix_load_from_group"], [23, 1, 1, "", "parse_coo"], [24, 1, 1, "", "serialize_coo"], [25, 1, 1, "", "sparse_coo_load_from_group"], [26, 1, 1, "", "sparse_coo_save_to_group"]], "pg_utils.numerics.io.CompactArrayJSONEncoder": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "default"], [19, 3, 1, "", "encode"], [19, 3, 1, "", "iterencode"]], "pg_utils.numerics.linalg": [[28, 2, 1, "", "LinSysSolver"], [29, 2, 1, "", "MultiPrecLinSolver"], [30, 2, 1, "", "StdLinSolver"], [31, 1, 1, "", "eig_generalized"]], "pg_utils.numerics.linalg.LinSysSolver": [[28, 3, 1, "", "__init__"], [28, 3, 1, "", "eig"], [28, 3, 1, "", "eig_g"], [28, 3, 1, "", "eigh"], [28, 3, 1, "", "inv"], [28, 3, 1, "", "solve"], [28, 3, 1, "", "solve_diag"], [28, 3, 1, "", "solve_explicit"]], "pg_utils.numerics.linalg.MultiPrecLinSolver": [[29, 3, 1, "", "__init__"], [29, 3, 1, "", "eig"], [29, 3, 1, "", "eig_g"], [29, 3, 1, "", "eigh"], [29, 3, 1, "", "inv"], [29, 3, 1, "", "solve"], [29, 3, 1, "", "solve_diag"], [29, 3, 1, "", "solve_explicit"]], "pg_utils.numerics.linalg.StdLinSolver": [[30, 3, 1, "", "__init__"], [30, 3, 1, "", "eig"], [30, 3, 1, "", "eig_g"], [30, 3, 1, "", "eigh"], [30, 3, 1, "", "inv"], [30, 3, 1, "", "solve"], [30, 3, 1, "", "solve_diag"], [30, 3, 1, "", "solve_explicit"]], "pg_utils.numerics.matrices": [[33, 2, 1, "", "InnerProdQuad"], [34, 2, 1, "", "InnerQuad_GaussJacobi"], [35, 2, 1, "", "InnerQuad_Rule"], [36, 2, 1, "", "LabeledBlockArray"], [37, 2, 1, "", "LabeledBlockMatrix"], [38, 2, 1, "", "MatrixExpander"], [39, 2, 1, "", "QuadRecipe"], [40, 1, 1, "", "invert_block_diag"], [41, 1, 1, "", "quad_matrix_gmpy2"], [42, 1, 1, "", "quad_matrix_mpmath"], [43, 1, 1, "", "quad_matrix_scipy"], [44, 1, 1, "", "quad_matrix_sympy"], [45, 1, 1, "", "sparsify"]], "pg_utils.numerics.matrices.InnerProdQuad": [[33, 3, 1, "", "__init__"]], "pg_utils.numerics.matrices.InnerQuad_GaussJacobi": [[34, 3, 1, "", "__init__"], [34, 3, 1, "", "deduce_params"], [34, 3, 1, "", "deduce_params_outer"], [34, 3, 1, "", "get_powers"], [34, 3, 1, "", "gramian"], [34, 3, 1, "", "output_form"]], "pg_utils.numerics.matrices.InnerQuad_Rule": [[35, 3, 1, "", "__init__"], [35, 3, 1, "", "gramian"]], "pg_utils.numerics.matrices.LabeledBlockArray": [[36, 3, 1, "", "__init__"]], "pg_utils.numerics.matrices.LabeledBlockMatrix": [[37, 3, 1, "", "__init__"]], "pg_utils.numerics.matrices.MatrixExpander": [[38, 3, 1, "", "__init__"], [38, 3, 1, "", "expand"]], "pg_utils.numerics.matrices.QuadRecipe": [[39, 3, 1, "", "__init__"]], "pg_utils.numerics.special": [[47, 2, 1, "", "RootsJacobiResult"], [48, 1, 1, "", "eval_jacobi_nrange"], [49, 1, 1, "", "eval_jacobi_recur"], [50, 1, 1, "", "eval_jacobi_recur_Nmax"], [51, 1, 1, "", "eval_jacobi_recur_gmpy2"], [52, 1, 1, "", "eval_jacobi_recur_mp"], [53, 1, 1, "", "eval_jacobi_recur_mpmath"], [54, 1, 1, "", "roots_jacobi_mp"]], "pg_utils.numerics.special.RootsJacobiResult": [[47, 3, 1, "", "__init__"]], "pg_utils.numerics.symparser": [[56, 2, 1, "", "Gmpy2Printer"], [57, 1, 1, "", "jacobi_idx_subs"], [58, 1, 1, "", "powers_of"], [59, 4, 1, "", "v_functions_gmpy2"], [60, 4, 1, "", "v_functions_mpmath"]], "pg_utils.numerics.symparser.Gmpy2Printer": [[56, 3, 1, "", "__init__"], [56, 3, 1, "", "doprint"], [56, 3, 1, "", "set_global_settings"]], "pg_utils.numerics.utils": [[62, 1, 1, "", "allclose_sparse"], [63, 1, 1, "", "array_to_str"], [64, 1, 1, "", "cluster_modes"], [65, 1, 1, "", "eigen_drift"], [66, 1, 1, "", "eigenfreq_Malkus_3d"], [67, 1, 1, "", "eigenfreq_Malkus_pg"], [68, 1, 1, "", "eigenfreq_inertial3d"], [69, 1, 1, "", "eigenfreq_psi_op"], [70, 1, 1, "", "intermodal_separation"], [71, 1, 1, "", "is_eq_coo"], [72, 1, 1, "", "is_eq_sparse"], [73, 1, 1, "", "spec_tail_exp_rate"], [74, 1, 1, "", "to_dense_gmpy2"], [75, 1, 1, "", "to_dense_obj"], [76, 1, 1, "", "to_gpmy2_c"], [77, 1, 1, "", "to_gpmy2_f"], [78, 1, 1, "", "to_mpmath_c"], [79, 1, 1, "", "to_mpmath_f"], [80, 1, 1, "", "to_numpy_c"], [81, 1, 1, "", "to_numpy_f"], [82, 1, 1, "", "transform_dps_prec"]], "pg_utils.pg_model": [[84, 0, 0, "-", "base"], [91, 0, 0, "-", "base_utils"], [99, 0, 0, "-", "bg_fields"], [105, 0, 0, "-", "core"], [150, 0, 0, "-", "equations"], [156, 0, 0, "-", "expand_conjugate"], [161, 0, 0, "-", "expand_daria_malkus"], [166, 0, 0, "-", "expand_daria_mm_malkus"], [171, 0, 0, "-", "expand_daria_thesis"], [176, 0, 0, "-", "expand_stream_force_cpt"], [181, 0, 0, "-", "expand_stream_force_orth"], [186, 0, 0, "-", "expansion"], [210, 0, 0, "-", "forcing"], [235, 0, 0, "-", "params"]], "pg_utils.pg_model.base": [[85, 2, 1, "", "CollectionConjugate"], [86, 2, 1, "", "CollectionPG"], [87, 2, 1, "", "LabeledCollection"], [88, 2, 1, "", "LabeledSubCollection"], [89, 1, 1, "", "map_PG_fields"], [90, 1, 1, "", "map_collection"]], "pg_utils.pg_model.base.CollectionConjugate": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "apply"], [85, 3, 1, "", "as_empty"], [85, 3, 1, "", "copy"], [85, 3, 1, "", "deserialize"], [85, 3, 1, "", "generate_collection"], [85, 5, 1, "", "iter_filter"], [85, 5, 1, "", "iter_name"], [85, 3, 1, "", "load_json"], [85, 3, 1, "", "save_json"], [85, 3, 1, "", "serialize"], [85, 3, 1, "", "subs"], [85, 3, 1, "", "subset_B_bound"], [85, 3, 1, "", "subset_B_bound_cyl"], [85, 3, 1, "", "subset_B_equator"], [85, 3, 1, "", "subset_mag"], [85, 3, 1, "", "subset_moments"], [85, 3, 1, "", "vorticity"]], "pg_utils.pg_model.base.CollectionPG": [[86, 3, 1, "", "__init__"], [86, 3, 1, "", "apply"], [86, 3, 1, "", "as_empty"], [86, 3, 1, "", "copy"], [86, 3, 1, "", "deserialize"], [86, 3, 1, "", "generate_collection"], [86, 5, 1, "", "iter_filter"], [86, 5, 1, "", "iter_name"], [86, 3, 1, "", "load_json"], [86, 3, 1, "", "save_json"], [86, 3, 1, "", "serialize"], [86, 3, 1, "", "subs"], [86, 3, 1, "", "subset_B_bound"], [86, 3, 1, "", "subset_B_bound_cyl"], [86, 3, 1, "", "subset_B_equator"], [86, 3, 1, "", "subset_mag"], [86, 3, 1, "", "subset_moments"], [86, 3, 1, "", "vorticity"]], "pg_utils.pg_model.base.LabeledCollection": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "apply"], [87, 3, 1, "", "as_empty"], [87, 3, 1, "", "copy"], [87, 3, 1, "", "deserialize"], [87, 3, 1, "", "generate_collection"], [87, 5, 1, "", "iter_filter"], [87, 5, 1, "", "iter_name"], [87, 3, 1, "", "load_json"], [87, 3, 1, "", "save_json"], [87, 3, 1, "", "serialize"], [87, 3, 1, "", "subs"]], "pg_utils.pg_model.base.LabeledSubCollection": [[88, 3, 1, "", "__init__"], [88, 5, 1, "", "iter_filter"], [88, 5, 1, "", "iter_name"]], "pg_utils.pg_model.base_utils": [[92, 1, 1, "", "assemble_background"], [93, 1, 1, "", "extract_symbols"], [94, 1, 1, "", "field_to_moment"], [95, 1, 1, "", "fields_in_term"], [96, 1, 1, "", "integrate_asym"], [97, 1, 1, "", "integrate_sym"], [98, 1, 1, "", "linearize"]], "pg_utils.pg_model.bg_fields": [[100, 2, 1, "", "BackgroundFieldMHD"], [101, 2, 1, "", "BackgroundHydro"], [102, 2, 1, "", "BackgroundMalkus"], [103, 2, 1, "", "BackgroundPoloidalDipole"], [104, 2, 1, "", "BackgroundToroidalQuadrupole"]], "pg_utils.pg_model.bg_fields.BackgroundFieldMHD": [[100, 3, 1, "", "__init__"]], "pg_utils.pg_model.bg_fields.BackgroundHydro": [[101, 3, 1, "", "__init__"]], "pg_utils.pg_model.bg_fields.BackgroundMalkus": [[102, 3, 1, "", "__init__"]], "pg_utils.pg_model.bg_fields.BackgroundPoloidalDipole": [[103, 3, 1, "", "__init__"]], "pg_utils.pg_model.bg_fields.BackgroundToroidalQuadrupole": [[104, 3, 1, "", "__init__"]], "pg_utils.pg_model.core": [[106, 4, 1, "", "B0_sph"], [107, 4, 1, "", "B0_vec"], [110, 4, 1, "", "H"], [111, 4, 1, "", "H_s"], [112, 1, 1, "", "PG_to_conjugate"], [113, 4, 1, "", "U0_sph"], [114, 4, 1, "", "U0_vec"], [115, 4, 1, "", "U_pg"], [118, 4, 1, "", "b_linmap"], [108, 4, 1, "", "b_sph"], [109, 4, 1, "", "b_vec"], [119, 4, 1, "", "cg_linmap"], [120, 4, 1, "", "cgvar"], [121, 4, 1, "", "cgvar_bg"], [122, 4, 1, "", "cgvar_ptb"], [123, 1, 1, "", "conjugate_to_PG"], [124, 4, 1, "", "cyl"], [125, 4, 1, "", "eps"], [126, 4, 1, "", "fe_p"], [127, 4, 1, "", "force_linmap"], [128, 4, 1, "", "fp_sym"], [129, 4, 1, "", "fs_sym"], [130, 4, 1, "", "fz_asym"], [131, 1, 1, "", "map_conjugate_to_pg"], [132, 1, 1, "", "map_pg_to_conjugate"], [133, 4, 1, "", "p"], [134, 1, 1, "", "pg_ansatz"], [135, 4, 1, "", "pg_linmap"], [136, 4, 1, "", "pgvar"], [137, 4, 1, "", "pgvar_bg"], [138, 4, 1, "", "pgvar_ptb"], [139, 4, 1, "", "r"], [140, 4, 1, "", "reduced_var"], [141, 4, 1, "", "s"], [142, 4, 1, "", "sph"], [143, 4, 1, "", "t"], [144, 4, 1, "", "theta"], [145, 4, 1, "", "u_linmap"], [116, 4, 1, "", "u_sph"], [117, 4, 1, "", "u_vec"], [146, 4, 1, "", "v_e"], [147, 4, 1, "", "x"], [148, 4, 1, "", "y"], [149, 4, 1, "", "z"]], "pg_utils.pg_model.equations": [[151, 1, 1, "", "eqn_PG_to_conjugate"], [152, 4, 1, "", "eqs_cg"], [153, 4, 1, "", "eqs_cg_lin"], [154, 4, 1, "", "eqs_pg"], [155, 4, 1, "", "eqs_pg_lin"]], "pg_utils.pg_model.expand_conjugate": [[157, 4, 1, "", "fourier_expand"], [158, 4, 1, "", "rad_expand"], [159, 4, 1, "", "subscript_str"], [160, 4, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_malkus": [[162, 4, 1, "", "fourier_expand"], [163, 4, 1, "", "rad_expand"], [164, 4, 1, "", "subscript_str"], [165, 4, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_mm_malkus": [[167, 4, 1, "", "fourier_expand"], [168, 4, 1, "", "rad_expand"], [169, 4, 1, "", "subscript_str"], [170, 4, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_thesis": [[172, 4, 1, "", "fourier_expand"], [173, 4, 1, "", "rad_expand"], [174, 4, 1, "", "subscript_str"], [175, 4, 1, "", "test_s"]], "pg_utils.pg_model.expand_stream_force_cpt": [[177, 4, 1, "", "fourier_expand"], [178, 4, 1, "", "rad_expand"], [179, 4, 1, "", "subscript_str"], [180, 4, 1, "", "test_s_expression"]], "pg_utils.pg_model.expand_stream_force_orth": [[182, 4, 1, "", "fourier_expand"], [183, 4, 1, "", "rad_expand"], [184, 4, 1, "", "subscript_str"], [185, 4, 1, "", "test_s"]], "pg_utils.pg_model.expansion": [[187, 2, 1, "", "ExpansionRecipe"], [188, 2, 1, "", "FourierExpansions"], [189, 2, 1, "", "InnerProduct1D"], [190, 2, 1, "", "InnerProductOp1D"], [191, 2, 1, "", "RadialExpansions"], [192, 2, 1, "", "RadialInnerProducts"], [193, 2, 1, "", "RadialTestFunctions"], [194, 2, 1, "", "SpectralExpansion"], [195, 2, 1, "", "SystemEquations"], [196, 2, 1, "", "SystemMatrix"], [197, 4, 1, "", "cgvar_s"], [198, 4, 1, "", "m"], [199, 4, 1, "", "n"], [200, 4, 1, "", "n_test"], [201, 4, 1, "", "n_trial"], [202, 4, 1, "", "omega"], [203, 1, 1, "", "orth_pref_jacobi"], [204, 4, 1, "", "pgvar_s"], [205, 1, 1, "", "placeholder_collection"], [206, 4, 1, "", "reduced_var_s"], [207, 4, 1, "", "s_xi"], [208, 4, 1, "", "xi"], [209, 4, 1, "", "xi_s"]], "pg_utils.pg_model.expansion.ExpansionRecipe": [[187, 3, 1, "", "__init__"]], "pg_utils.pg_model.expansion.FourierExpansions": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "apply"], [188, 3, 1, "", "as_empty"], [188, 3, 1, "", "copy"], [188, 3, 1, "", "deserialize"], [188, 3, 1, "", "generate_collection"], [188, 5, 1, "", "iter_filter"], [188, 5, 1, "", "iter_name"], [188, 3, 1, "", "load_json"], [188, 3, 1, "", "save_json"], [188, 3, 1, "", "serialize"], [188, 3, 1, "", "subs"], [188, 3, 1, "", "to_fourier_domain"]], "pg_utils.pg_model.expansion.InnerProduct1D": [[189, 3, 1, "", "__init__"], [189, 3, 1, "", "apart"], [189, 5, 1, "", "args"], [189, 3, 1, "", "args_cnc"], [189, 3, 1, "", "as_coeff_Add"], [189, 3, 1, "", "as_coeff_Mul"], [189, 3, 1, "", "as_coeff_add"], [189, 3, 1, "", "as_coeff_exponent"], [189, 3, 1, "", "as_coeff_mul"], [189, 3, 1, "", "as_coefficient"], [189, 3, 1, "", "as_coefficients_dict"], [189, 3, 1, "", "as_content_primitive"], [189, 3, 1, "", "as_dummy"], [189, 3, 1, "", "as_expr"], [189, 3, 1, "", "as_independent"], [189, 3, 1, "", "as_leading_term"], [189, 3, 1, "", "as_numer_denom"], [189, 3, 1, "", "as_ordered_factors"], [189, 3, 1, "", "as_ordered_terms"], [189, 3, 1, "", "as_poly"], [189, 3, 1, "", "as_powers_dict"], [189, 3, 1, "", "as_real_imag"], [189, 3, 1, "", "as_terms"], [189, 3, 1, "", "aseries"], [189, 5, 1, "", "assumptions0"], [189, 3, 1, "", "atoms"], [189, 3, 1, "", "cancel"], [189, 5, 1, "", "canonical_variables"], [189, 3, 1, "", "change_variable"], [189, 3, 1, "", "class_key"], [189, 3, 1, "", "coeff"], [189, 3, 1, "", "collect"], [189, 3, 1, "", "combsimp"], [189, 3, 1, "", "commute_factor_in"], [189, 3, 1, "", "commute_factor_out"], [189, 3, 1, "", "compare"], [189, 3, 1, "", "compute_leading_term"], [189, 3, 1, "", "conjugate"], [189, 3, 1, "", "could_extract_minus_sign"], [189, 3, 1, "", "count"], [189, 3, 1, "", "count_ops"], [189, 3, 1, "", "doit"], [189, 3, 1, "", "dummy_eq"], [189, 3, 1, "", "equals"], [189, 3, 1, "", "evalf"], [189, 3, 1, "", "expand"], [189, 5, 1, "", "expr_free_symbols"], [189, 3, 1, "", "extract_additively"], [189, 3, 1, "", "extract_branch_factor"], [189, 3, 1, "", "extract_multiplicatively"], [189, 3, 1, "", "factor"], [189, 3, 1, "", "find"], [189, 3, 1, "", "fourier_series"], [189, 3, 1, "", "fps"], [189, 5, 1, "", "free_symbols"], [189, 3, 1, "", "fromiter"], [189, 5, 1, "", "func"], [189, 3, 1, "", "gammasimp"], [189, 3, 1, "", "getO"], [189, 3, 1, "", "getn"], [189, 3, 1, "", "has"], [189, 3, 1, "", "has_free"], [189, 3, 1, "", "integral_form"], [189, 3, 1, "", "integrand"], [189, 3, 1, "", "integrate"], [189, 3, 1, "", "invert"], [189, 3, 1, "", "is_algebraic_expr"], [189, 5, 1, "", "is_comparable"], [189, 3, 1, "", "is_constant"], [189, 3, 1, "", "is_meromorphic"], [189, 5, 1, "", "is_number"], [189, 3, 1, "", "is_polynomial"], [189, 3, 1, "", "is_rational_function"], [189, 3, 1, "", "leadterm"], [189, 3, 1, "", "limit"], [189, 3, 1, "", "lseries"], [189, 3, 1, "", "match"], [189, 3, 1, "", "matches"], [189, 3, 1, "", "n"], [189, 3, 1, "", "normal"], [189, 3, 1, "", "nseries"], [189, 3, 1, "", "nsimplify"], [189, 3, 1, "", "powsimp"], [189, 3, 1, "", "primitive"], [189, 3, 1, "", "radsimp"], [189, 3, 1, "", "ratsimp"], [189, 3, 1, "", "rcall"], [189, 3, 1, "", "refine"], [189, 3, 1, "", "removeO"], [189, 3, 1, "", "replace"], [189, 3, 1, "", "rewrite"], [189, 3, 1, "", "round"], [189, 3, 1, "", "separate"], [189, 3, 1, "", "serialize"], [189, 3, 1, "", "series"], [189, 3, 1, "", "simplify"], [189, 3, 1, "", "split"], [189, 3, 1, "", "subs"], [189, 3, 1, "", "taylor_term"], [189, 3, 1, "", "together"], [189, 3, 1, "", "trigsimp"], [189, 3, 1, "", "xreplace"]], "pg_utils.pg_model.expansion.InnerProductOp1D": [[190, 3, 1, "", "__init__"]], "pg_utils.pg_model.expansion.RadialExpansions": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "apply"], [191, 3, 1, "", "as_empty"], [191, 3, 1, "", "copy"], [191, 3, 1, "", "deserialize"], [191, 3, 1, "", "generate_collection"], [191, 5, 1, "", "iter_filter"], [191, 5, 1, "", "iter_name"], [191, 3, 1, "", "load_json"], [191, 3, 1, "", "save_json"], [191, 3, 1, "", "serialize"], [191, 3, 1, "", "subs"]], "pg_utils.pg_model.expansion.RadialInnerProducts": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "apply"], [192, 3, 1, "", "as_empty"], [192, 3, 1, "", "copy"], [192, 3, 1, "", "deserialize"], [192, 3, 1, "", "generate_collection"], [192, 5, 1, "", "iter_filter"], [192, 5, 1, "", "iter_name"], [192, 3, 1, "", "load_json"], [192, 3, 1, "", "save_json"], [192, 3, 1, "", "serialize"], [192, 3, 1, "", "subs"]], "pg_utils.pg_model.expansion.RadialTestFunctions": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "apply"], [193, 3, 1, "", "as_empty"], [193, 3, 1, "", "copy"], [193, 3, 1, "", "deserialize"], [193, 3, 1, "", "generate_collection"], [193, 5, 1, "", "iter_filter"], [193, 5, 1, "", "iter_name"], [193, 3, 1, "", "load_json"], [193, 3, 1, "", "save_json"], [193, 3, 1, "", "serialize"], [193, 3, 1, "", "subs"]], "pg_utils.pg_model.expansion.SpectralExpansion": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "apply"], [194, 3, 1, "", "as_empty"], [194, 3, 1, "", "copy"], [194, 3, 1, "", "deserialize"], [194, 3, 1, "", "generate_collection"], [194, 5, 1, "", "iter_filter"], [194, 5, 1, "", "iter_name"], [194, 3, 1, "", "load_json"], [194, 3, 1, "", "save_json"], [194, 3, 1, "", "serialize"], [194, 3, 1, "", "subs"]], "pg_utils.pg_model.expansion.SystemEquations": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "apply"], [195, 3, 1, "", "as_empty"], [195, 3, 1, "", "collect_matrices"], [195, 3, 1, "", "copy"], [195, 3, 1, "", "deserialize"], [195, 3, 1, "", "generate_collection"], [195, 5, 1, "", "iter_filter"], [195, 5, 1, "", "iter_name"], [195, 3, 1, "", "load_json"], [195, 3, 1, "", "save_json"], [195, 3, 1, "", "serialize"], [195, 3, 1, "", "subs"], [195, 3, 1, "", "to_fourier_domain"], [195, 3, 1, "", "to_inner_product"], [195, 3, 1, "", "to_radial"]], "pg_utils.pg_model.expansion.SystemMatrix": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "apply"], [196, 3, 1, "", "block_sparsity"], [196, 3, 1, "", "build_matrix"], [196, 3, 1, "", "deserialize"], [196, 3, 1, "", "load_json"], [196, 3, 1, "", "save_json"], [196, 3, 1, "", "serialize"], [196, 3, 1, "", "serialize_element"]], "pg_utils.pg_model.forcing": [[211, 4, 1, "", "Le_p"], [212, 4, 1, "", "Le_p_cg"], [213, 4, 1, "", "Le_p_expr"], [214, 4, 1, "", "Le_p_lin"], [215, 4, 1, "", "Le_p_lin_cg"], [216, 4, 1, "", "Lp_sym"], [217, 4, 1, "", "Lp_sym_cg"], [218, 4, 1, "", "Lp_sym_expr"], [219, 4, 1, "", "Lp_sym_lin"], [220, 4, 1, "", "Lp_sym_lin_cg"], [221, 4, 1, "", "Ls_sym"], [222, 4, 1, "", "Ls_sym_cg"], [223, 4, 1, "", "Ls_sym_expr"], [224, 4, 1, "", "Ls_sym_lin"], [225, 4, 1, "", "Ls_sym_lin_cg"], [226, 4, 1, "", "Lz_asym"], [227, 4, 1, "", "Lz_asym_cg"], [228, 4, 1, "", "Lz_asym_expr"], [229, 4, 1, "", "Lz_asym_lin"], [230, 4, 1, "", "Lz_asym_lin_cg"], [231, 4, 1, "", "force_explicit"], [232, 4, 1, "", "force_explicit_cg"], [233, 4, 1, "", "force_explicit_lin"], [234, 4, 1, "", "force_explicit_lin_cg"]], "pg_utils.pg_model.params": [[236, 4, 1, "", "Le"], [237, 4, 1, "", "Lu"]], "pg_utils.processing": [[239, 0, 0, "-", "postproc"]], "pg_utils.processing.postproc": [[240, 1, 1, "", "classify_eigens_criteria"], [241, 1, 1, "", "eigen_func_from_conjugate"], [242, 1, 1, "", "eigen_func_from_reduced"], [243, 1, 1, "", "filter_sort"], [244, 1, 1, "", "get_eigen_field_function"]], "pg_utils.sympy_supp": [[246, 0, 0, "-", "simplify"], [251, 0, 0, "-", "vector_calculus_3d"]], "pg_utils.sympy_supp.simplify": [[247, 1, 1, "", "process_leaf_node"], [248, 1, 1, "", "recursive_collect"], [249, 1, 1, "", "recursive_collect_tree"], [250, 1, 1, "", "recursive_eval_tree"]], "pg_utils.sympy_supp.vector_calculus_3d": [[252, 2, 1, "", "CartesianCoordinates3D"], [253, 2, 1, "", "CylindricalCoordinates"], [254, 2, 1, "", "OrthogonalCoordinates3D"], [255, 2, 1, "", "Scalar3D"], [256, 2, 1, "", "SphericalCoordinates"], [257, 2, 1, "", "Tensor3D"], [258, 2, 1, "", "Vector3D"], [259, 1, 1, "", "cross"], [260, 1, 1, "", "dot"]], "pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D": [[252, 3, 1, "", "__init__"], [252, 5, 1, "", "coords"], [252, 3, 1, "", "curl"], [252, 3, 1, "", "div"], [252, 3, 1, "", "grad"], [252, 3, 1, "", "laplacian"]], "pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates": [[253, 3, 1, "", "__init__"], [253, 5, 1, "", "coords"], [253, 3, 1, "", "curl"], [253, 3, 1, "", "div"], [253, 3, 1, "", "grad"], [253, 3, 1, "", "laplacian"], [253, 3, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D": [[254, 3, 1, "", "__init__"], [254, 5, 1, "", "coords"], [254, 3, 1, "", "curl"], [254, 3, 1, "", "div"], [254, 3, 1, "", "grad"], [254, 3, 1, "", "laplacian"], [254, 3, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.Scalar3D": [[255, 3, 1, "", "__init__"], [255, 3, 1, "", "grad"], [255, 3, 1, "", "laplacian"], [255, 3, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates": [[256, 3, 1, "", "__init__"], [256, 5, 1, "", "coords"], [256, 3, 1, "", "curl"], [256, 3, 1, "", "div"], [256, 3, 1, "", "grad"], [256, 3, 1, "", "laplacian"], [256, 3, 1, "", "surface_div"], [256, 3, 1, "", "surface_grad"]], "pg_utils.sympy_supp.vector_calculus_3d.Tensor3D": [[257, 3, 1, "", "__init__"], [257, 3, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.Vector3D": [[258, 3, 1, "", "__init__"], [258, 3, 1, "", "curl"], [258, 3, 1, "", "div"], [258, 3, 1, "", "laplacian"], [258, 3, 1, "", "transform_to"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:data", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "property", "Python property"]}, "titleterms": {"pg_util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "eigen": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "apply_bg_to_eq": 2, "apply_bg_to_set": 3, "assemble_forc": 4, "collect_matrix_el": 5, "compute_eigen": 6, "compute_matrix_numer": 8, "equations_to_matric": 9, "form_equ": 10, "process_matrix_el": 11, "reduce_dimens": 12, "reduce_eqsys_to_force_form": 13, "numer": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "io": [18, 19, 20, 21, 22, 23, 24, 25, 26], "matrices_load_h5": 20, "matrices_save_h5": 21, "matrix_load_from_group": 22, "sparse_coo_load_from_group": 25, "sparse_coo_save_to_group": 26, "matric": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "innerprodquad": 33, "innerquad_gaussjacobi": 34, "innerquad_rul": 35, "labeledblockarrai": 36, "labeledblockmatrix": 37, "matrixexpand": 38, "quadrecip": 39, "invert_block_diag": 40, "powers_of": 58, "special": [46, 47, 48, 49, 50, 51, 52, 53, 54, 261], "eval_jacobi_nrang": 48, "eval_jacobi_to_nmax": [], "util": [61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "eigenfreq_malkus_3d": 66, "eigenfreq_malkus_pg": 67, "eigenfreq_inertial3d": 68, "eigenfreq_psi_op": 69, "pg_model": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "base": [84, 85, 86, 87, 88, 89, 90], "collectionconjug": [85, 261], "collectionpg": [86, 261], "labeledcollect": [87, 261], "labeledsubcollect": 88, "map_pg_field": 89, "map_collect": 90, "base_util": [91, 92, 93, 94, 95, 96, 97, 98], "assemble_background": 92, "field_to_mo": 94, "fields_in_term": 95, "integrate_asym": 96, "integrate_sym": 97, "linear": [98, 262], "bg_field": [99, 100, 101, 102, 103, 104], "backgroundfieldmhd": 100, "backgroundhydro": 101, "backgroundmalku": 102, "backgroundpoloidaldipol": 103, "backgroundtoroidalquadrupol": 104, "core": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 262, 264], "b0_sph": 106, "b0_vec": 107, "b_sph": 108, "b_vec": 109, "h": 110, "h_": 111, "pg_to_conjug": 112, "u0_sph": 113, "u0_vec": 114, "u_pg": 115, "u_sph": 116, "u_vec": 117, "b_linmap": 118, "cg_linmap": 119, "cgvar": 120, "cgvar_bg": 121, "cgvar_ptb": 122, "conjugate_to_pg": 123, "cyl": 124, "ep": 125, "fe_p": 126, "force_linmap": 127, "fp_sym": 128, "fs_sym": 129, "fz_asym": 130, "map_conjugate_to_pg": 131, "map_pg_to_conjug": 132, "p": 133, "pg_ansatz": 134, "pg_linmap": 135, "pgvar": 136, "pgvar_bg": 137, "pgvar_ptb": 138, "r": 139, "reduced_var": 140, "s": 141, "sph": 142, "t": 143, "theta": 144, "u_linmap": 145, "v_e": 146, "x": 147, "y": 148, "z": 149, "equat": [150, 151, 152, 153, 154, 155, 262, 264], "eqn_pg_to_conjug": 151, "eqs_cg": 152, "eqs_cg_lin": 153, "eqs_pg": 154, "eqs_pg_lin": 155, "expand_conjug": [156, 157, 158, 159, 160], "fourier_expand": [157, 162, 167, 172, 177, 182], "rad_expand": [158, 163, 168, 173, 178, 183], "subscript_str": [159, 164, 169, 174, 179, 184], "test_": [160, 165, 170, 175, 185], "expand_daria_malku": [161, 162, 163, 164, 165], "expand_daria_mm_malku": [166, 167, 168, 169, 170], "expand_daria_thesi": [171, 172, 173, 174, 175], "expand_stream_forc": [], "expans": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "expansionrecip": 187, "fourierexpans": 188, "innerproduct1d": 189, "innerproductop1d": 190, "radialexpans": 191, "radialinnerproduct": 192, "radialtestfunct": 193, "spectralexpans": 194, "systemequ": 195, "systemmatrix": 196, "cgvar_": 197, "m": [198, 263], "n": 199, "n_test": 200, "n_trial": 201, "omega": 202, "orth_pref_jacobi": 203, "pgvar_": 204, "placeholder_collect": 205, "reduced_var_": 206, "s_xi": 207, "xi": 208, "xi_": 209, "forc": [210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 262, 264], "le_p": 211, "le_p_cg": 212, "le_p_expr": 213, "le_p_lin": 214, "le_p_lin_cg": 215, "lp_sym": 216, "lp_sym_cg": 217, "lp_sym_expr": 218, "lp_sym_lin": 219, "lp_sym_lin_cg": 220, "ls_sym": 221, "ls_sym_cg": 222, "ls_sym_expr": 223, "ls_sym_lin": 224, "ls_sym_lin_cg": 225, "lz_asym": 226, "lz_asym_cg": 227, "lz_asym_expr": 228, "lz_asym_lin": 229, "lz_asym_lin_cg": 230, "force_explicit": 231, "force_explicit_cg": 232, "force_explicit_lin": 233, "force_explicit_lin_cg": 234, "param": [235, 236, 237], "le": 236, "lu": 237, "process": [238, 239, 240, 241, 242, 243, 244], "postproc": [239, 240, 241, 242, 243, 244], "eigen_func_from_conjug": 241, "get_eigen_field_funct": 244, "sympy_supp": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "vector_calculus_3d": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "cartesiancoordinates3d": 252, "cylindricalcoordin": 253, "orthogonalcoordinates3d": 254, "scalar3d": 255, "sphericalcoordin": 256, "tensor3d": 257, "vector3d": 258, "cross": 259, "dot": 260, "introduc": 262, "plesiogeostropi": [262, 265], "quickstart": 262, "intro": [261, 262], "why": 262, "prerequisit": 262, "get": 262, "start": 262, "sympi": 262, "symbol": 262, "function": 262, "express": 262, "substitut": 262, "simplif": 262, "variabl": [261, 262, 264], "precomput": 262, "To": 262, "continu": 262, "other": [], "demo": [], "regular": 263, "condit": 263, "tensor": 263, "compon": 263, "polar": 263, "coordin": 263, "scalar": 263, "exampl": 263, "singular": 263, "field": 263, "show": 263, "necess": 263, "confirm": 263, "vector": 263, "counter": 263, "lewi": 263, "bellan": 263, "relat": 263, "ar": 263, "necessari": 263, "one": 263, "rank": 263, "2": 263, "1": 263, "2nd": 263, "order": 263, "structur": [], "code": [], "indic": [], "tabl": [], "tutori": [265, 266], "collect": 261, "interfac": 261, "initi": 261, "oper": 261, "iter": 261, "travers": 261, "serial": 261, "transform": 261, "between": 261, "pg": 261, "term": 264, "carri": 264, "101": 265, "api": 265, "refer": 265, "compute_eigen_mp": 7, "reduce_eqsys_to_psi": 14, "to_fd_ode_pg": 15, "to_fd_ode_psi": 16, "compactarrayjsonencod": 19, "parse_coo": 23, "serialize_coo": 24, "linalg": [27, 28, 29, 30, 31], "linsyssolv": 28, "multipreclinsolv": 29, "stdlinsolv": 30, "eig_gener": 31, "quad_matrix_gmpy2": 41, "quad_matrix_mpmath": 42, "quad_matrix_scipi": 43, "quad_matrix_sympi": 44, "sparsifi": 45, "rootsjacobiresult": 47, "eval_jacobi_recur": 49, "eval_jacobi_recur_nmax": 50, "eval_jacobi_recur_gmpy2": 51, "eval_jacobi_recur_mp": 52, "eval_jacobi_recur_mpmath": 53, "roots_jacobi_mp": 54, "sympars": [55, 56, 57, 58, 59, 60], "gmpy2print": 56, "jacobi_idx_sub": 57, "v_functions_gmpy2": 59, "v_functions_mpmath": 60, "allclose_spars": 62, "array_to_str": 63, "cluster_mod": 64, "eigen_drift": 65, "intermodal_separ": 70, "is_eq_coo": 71, "is_eq_spars": 72, "spec_tail_exp_r": 73, "to_dense_gmpy2": 74, "to_dense_obj": 75, "to_gpmy2_c": 76, "to_gpmy2_f": 77, "to_mpmath_c": 78, "to_mpmath_f": 79, "to_numpy_c": 80, "to_numpy_f": 81, "transform_dps_prec": 82, "extract_symbol": 93, "expand_stream_force_cpt": [176, 177, 178, 179, 180], "test_s_express": 180, "expand_stream_force_orth": [181, 182, 183, 184, 185], "classify_eigens_criteria": 240, "eigen_func_from_reduc": 242, "filter_sort": 243, "simplifi": [246, 247, 248, 249, 250], "process_leaf_nod": 247, "recursive_collect": 248, "recursive_collect_tre": 249, "recursive_eval_tre": 250}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})