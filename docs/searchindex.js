Search.setIndex({"docnames": ["_autosummary/pg_utils", "_autosummary/pg_utils.numerics", "_autosummary/pg_utils.numerics.matrices", "_autosummary/pg_utils.numerics.matrices.InnerProdQuad", "_autosummary/pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "_autosummary/pg_utils.numerics.matrices.InnerQuad_Rule", "_autosummary/pg_utils.numerics.matrices.LabeledBlockArray", "_autosummary/pg_utils.numerics.matrices.LabeledBlockMatrix", "_autosummary/pg_utils.numerics.matrices.MatrixExpander", "_autosummary/pg_utils.numerics.matrices.QuadRecipe", "_autosummary/pg_utils.numerics.matrices.invert_block_diag", "_autosummary/pg_utils.numerics.matrices.powers_of", "_autosummary/pg_utils.numerics.utils", "_autosummary/pg_utils.numerics.utils.eigenfreq_Malkus_3d", "_autosummary/pg_utils.numerics.utils.eigenfreq_Malkus_pg", "_autosummary/pg_utils.numerics.utils.eigenfreq_inertial3d", "_autosummary/pg_utils.numerics.utils.eigenfreq_psi_op", "_autosummary/pg_utils.pg_model", "_autosummary/pg_utils.pg_model.base", "_autosummary/pg_utils.pg_model.base.CollectionConjugate", "_autosummary/pg_utils.pg_model.base.CollectionPG", "_autosummary/pg_utils.pg_model.base.LabeledCollection", "_autosummary/pg_utils.pg_model.base.LabeledSubCollection", "_autosummary/pg_utils.pg_model.base.map_PG_fields", "_autosummary/pg_utils.pg_model.base.map_collection", "_autosummary/pg_utils.pg_model.base_utils", "_autosummary/pg_utils.pg_model.base_utils.assemble_background", "_autosummary/pg_utils.pg_model.base_utils.field_to_moment", "_autosummary/pg_utils.pg_model.base_utils.fields_in_term", "_autosummary/pg_utils.pg_model.base_utils.integrate_asym", "_autosummary/pg_utils.pg_model.base_utils.integrate_sym", "_autosummary/pg_utils.pg_model.base_utils.linearize", "_autosummary/pg_utils.pg_model.core", "_autosummary/pg_utils.pg_model.core.H_s", "_autosummary/pg_utils.pg_model.core.PG_to_conjugate", "_autosummary/pg_utils.pg_model.core.U_pg", "_autosummary/pg_utils.pg_model.core.U_sph", "_autosummary/pg_utils.pg_model.core.conjugate_to_PG", "_autosummary/pg_utils.pg_model.core.fe_p", "_autosummary/pg_utils.pg_model.core.map_conjugate_to_pg", "_autosummary/pg_utils.pg_model.core.map_pg_to_conjugate", "_autosummary/pg_utils.pg_model.core.pg_ansatz", "_autosummary/pg_utils.pg_model.core.pgvar_bg", "_autosummary/pg_utils.pg_model.core.pgvar_ptb", "_autosummary/pg_utils.pg_model.core.reduced_var", "_autosummary/pg_utils.pg_model.equations", "_autosummary/pg_utils.pg_model.equations.eqn_PG_to_conjugate", "_autosummary/pg_utils.pg_model.equations.eqs_cg", "_autosummary/pg_utils.pg_model.equations.eqs_pg", "_autosummary/pg_utils.pg_model.expand_conjugate", "_autosummary/pg_utils.pg_model.expand_conjugate.fourier_expand", "_autosummary/pg_utils.pg_model.expand_conjugate.rad_expand", "_autosummary/pg_utils.pg_model.expand_conjugate.subscript_str", "_autosummary/pg_utils.pg_model.expand_conjugate.test_s", "_autosummary/pg_utils.pg_model.expand_daria_malkus", "_autosummary/pg_utils.pg_model.expand_daria_malkus.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_malkus.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_malkus.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_malkus.test_s", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_mm_malkus.test_s", "_autosummary/pg_utils.pg_model.expand_daria_thesis", "_autosummary/pg_utils.pg_model.expand_daria_thesis.fourier_expand", "_autosummary/pg_utils.pg_model.expand_daria_thesis.rad_expand", "_autosummary/pg_utils.pg_model.expand_daria_thesis.subscript_str", "_autosummary/pg_utils.pg_model.expand_daria_thesis.test_s", "_autosummary/pg_utils.pg_model.expand_stream_force", "_autosummary/pg_utils.pg_model.expand_stream_force.fourier_expand", "_autosummary/pg_utils.pg_model.expand_stream_force.rad_expand", "_autosummary/pg_utils.pg_model.expand_stream_force.subscript_str", "_autosummary/pg_utils.pg_model.expand_stream_force.test_s", "_autosummary/pg_utils.pg_model.expansion", "_autosummary/pg_utils.pg_model.expansion.ExpansionRecipe", "_autosummary/pg_utils.pg_model.expansion.FourierExpansions", "_autosummary/pg_utils.pg_model.expansion.InnerProduct1D", "_autosummary/pg_utils.pg_model.expansion.InnerProductOp1D", "_autosummary/pg_utils.pg_model.expansion.RadialExpansions", "_autosummary/pg_utils.pg_model.expansion.RadialInnerProducts", "_autosummary/pg_utils.pg_model.expansion.RadialTestFunctions", "_autosummary/pg_utils.pg_model.expansion.SpectralExpansion", "_autosummary/pg_utils.pg_model.expansion.SystemEquations", "_autosummary/pg_utils.pg_model.expansion.SystemMatrix", "_autosummary/pg_utils.pg_model.expansion.orth_pref_jacobi", "_autosummary/pg_utils.pg_model.expansion.placeholder_collection", "_autosummary/pg_utils.pg_model.forcing", "_autosummary/pg_utils.pg_model.forcing.force_explicit_cg", "_autosummary/pg_utils.pg_model.params", "_autosummary/pg_utils.processing", "_autosummary/pg_utils.processing.postproc", "_autosummary/pg_utils.processing.postproc.eigen_func_from_conjugate", "_autosummary/pg_utils.processing.postproc.get_eigen_field_function", "_autosummary/pg_utils.sympy_supp", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.cross", "_autosummary/pg_utils.sympy_supp.vector_calculus_3d.dot", "api_reference", "index", "pg_utils/pg_utils", "pg_utils/pg_utils.numerics", "pg_utils/pg_utils.numerics.matrices", "pg_utils/pg_utils.numerics.matrices.InnerProdQuad", "pg_utils/pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "pg_utils/pg_utils.numerics.matrices.InnerQuad_Rule", "pg_utils/pg_utils.numerics.matrices.LabeledBlockArray", "pg_utils/pg_utils.numerics.matrices.LabeledBlockMatrix", "pg_utils/pg_utils.numerics.matrices.MatrixExpander", "pg_utils/pg_utils.numerics.matrices.QuadRecipe", "pg_utils/pg_utils.numerics.matrices.invert_block_diag", "pg_utils/pg_utils.numerics.matrices.powers_of", "pg_utils/pg_utils.numerics.utils", "pg_utils/pg_utils.numerics.utils.eigenfreq_Malkus_3d", "pg_utils/pg_utils.numerics.utils.eigenfreq_Malkus_pg", "pg_utils/pg_utils.numerics.utils.eigenfreq_inertial3d", "pg_utils/pg_utils.numerics.utils.eigenfreq_psi_op", "pg_utils/pg_utils.pg_model", "pg_utils/pg_utils.pg_model.base", "pg_utils/pg_utils.pg_model.base.CollectionConjugate", "pg_utils/pg_utils.pg_model.base.CollectionPG", "pg_utils/pg_utils.pg_model.base.LabeledCollection", "pg_utils/pg_utils.pg_model.base.LabeledSubCollection", "pg_utils/pg_utils.pg_model.base.map_PG_fields", "pg_utils/pg_utils.pg_model.base.map_collection", "pg_utils/pg_utils.pg_model.base_utils", "pg_utils/pg_utils.pg_model.base_utils.assemble_background", "pg_utils/pg_utils.pg_model.base_utils.field_to_moment", "pg_utils/pg_utils.pg_model.base_utils.fields_in_term", "pg_utils/pg_utils.pg_model.base_utils.integrate_asym", "pg_utils/pg_utils.pg_model.base_utils.integrate_sym", "pg_utils/pg_utils.pg_model.base_utils.linearize", "pg_utils/pg_utils.pg_model.core", "pg_utils/pg_utils.pg_model.core.H_s", "pg_utils/pg_utils.pg_model.core.PG_to_conjugate", "pg_utils/pg_utils.pg_model.core.U_pg", "pg_utils/pg_utils.pg_model.core.U_sph", "pg_utils/pg_utils.pg_model.core.conjugate_to_PG", "pg_utils/pg_utils.pg_model.core.fe_p", "pg_utils/pg_utils.pg_model.core.map_conjugate_to_pg", "pg_utils/pg_utils.pg_model.core.map_pg_to_conjugate", "pg_utils/pg_utils.pg_model.core.pg_ansatz", "pg_utils/pg_utils.pg_model.core.pgvar_bg", "pg_utils/pg_utils.pg_model.core.pgvar_ptb", "pg_utils/pg_utils.pg_model.core.reduced_var", "pg_utils/pg_utils.pg_model.equations", "pg_utils/pg_utils.pg_model.equations.eqn_PG_to_conjugate", "pg_utils/pg_utils.pg_model.equations.eqs_cg", "pg_utils/pg_utils.pg_model.equations.eqs_pg", "pg_utils/pg_utils.pg_model.expand_conjugate", "pg_utils/pg_utils.pg_model.expand_conjugate.fourier_expand", "pg_utils/pg_utils.pg_model.expand_conjugate.rad_expand", "pg_utils/pg_utils.pg_model.expand_conjugate.subscript_str", "pg_utils/pg_utils.pg_model.expand_conjugate.test_s", "pg_utils/pg_utils.pg_model.expand_daria_malkus", "pg_utils/pg_utils.pg_model.expand_daria_malkus.fourier_expand", "pg_utils/pg_utils.pg_model.expand_daria_malkus.rad_expand", "pg_utils/pg_utils.pg_model.expand_daria_malkus.subscript_str", "pg_utils/pg_utils.pg_model.expand_daria_malkus.test_s", "pg_utils/pg_utils.pg_model.expand_daria_mm_malkus", "pg_utils/pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "pg_utils/pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "pg_utils/pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "pg_utils/pg_utils.pg_model.expand_daria_mm_malkus.test_s", "pg_utils/pg_utils.pg_model.expand_daria_thesis", "pg_utils/pg_utils.pg_model.expand_daria_thesis.fourier_expand", "pg_utils/pg_utils.pg_model.expand_daria_thesis.rad_expand", "pg_utils/pg_utils.pg_model.expand_daria_thesis.subscript_str", "pg_utils/pg_utils.pg_model.expand_daria_thesis.test_s", "pg_utils/pg_utils.pg_model.expand_stream_force", "pg_utils/pg_utils.pg_model.expand_stream_force.fourier_expand", "pg_utils/pg_utils.pg_model.expand_stream_force.rad_expand", "pg_utils/pg_utils.pg_model.expand_stream_force.subscript_str", "pg_utils/pg_utils.pg_model.expand_stream_force.test_s", "pg_utils/pg_utils.pg_model.expansion", "pg_utils/pg_utils.pg_model.expansion.ExpansionRecipe", "pg_utils/pg_utils.pg_model.expansion.FourierExpansions", "pg_utils/pg_utils.pg_model.expansion.InnerProduct1D", "pg_utils/pg_utils.pg_model.expansion.InnerProductOp1D", "pg_utils/pg_utils.pg_model.expansion.RadialExpansions", "pg_utils/pg_utils.pg_model.expansion.RadialInnerProducts", "pg_utils/pg_utils.pg_model.expansion.RadialTestFunctions", "pg_utils/pg_utils.pg_model.expansion.SpectralExpansion", "pg_utils/pg_utils.pg_model.expansion.SystemEquations", "pg_utils/pg_utils.pg_model.expansion.SystemMatrix", "pg_utils/pg_utils.pg_model.expansion.orth_pref_jacobi", "pg_utils/pg_utils.pg_model.expansion.placeholder_collection", "pg_utils/pg_utils.pg_model.forcing", "pg_utils/pg_utils.pg_model.forcing.force_explicit_cg", "pg_utils/pg_utils.pg_model.params", "pg_utils/pg_utils.processing", "pg_utils/pg_utils.processing.postproc", "pg_utils/pg_utils.processing.postproc.eigen_func_from_conjugate", "pg_utils/pg_utils.processing.postproc.get_eigen_field_function", "pg_utils/pg_utils.sympy_supp", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.cross", "pg_utils/pg_utils.sympy_supp.vector_calculus_3d.dot"], "filenames": ["_autosummary\\pg_utils.rst", "_autosummary\\pg_utils.numerics.rst", "_autosummary\\pg_utils.numerics.matrices.rst", "_autosummary\\pg_utils.numerics.matrices.InnerProdQuad.rst", "_autosummary\\pg_utils.numerics.matrices.InnerQuad_GaussJacobi.rst", "_autosummary\\pg_utils.numerics.matrices.InnerQuad_Rule.rst", "_autosummary\\pg_utils.numerics.matrices.LabeledBlockArray.rst", "_autosummary\\pg_utils.numerics.matrices.LabeledBlockMatrix.rst", "_autosummary\\pg_utils.numerics.matrices.MatrixExpander.rst", "_autosummary\\pg_utils.numerics.matrices.QuadRecipe.rst", "_autosummary\\pg_utils.numerics.matrices.invert_block_diag.rst", "_autosummary\\pg_utils.numerics.matrices.powers_of.rst", "_autosummary\\pg_utils.numerics.utils.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_Malkus_3d.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_Malkus_pg.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_inertial3d.rst", "_autosummary\\pg_utils.numerics.utils.eigenfreq_psi_op.rst", "_autosummary\\pg_utils.pg_model.rst", "_autosummary\\pg_utils.pg_model.base.rst", "_autosummary\\pg_utils.pg_model.base.CollectionConjugate.rst", "_autosummary\\pg_utils.pg_model.base.CollectionPG.rst", "_autosummary\\pg_utils.pg_model.base.LabeledCollection.rst", "_autosummary\\pg_utils.pg_model.base.LabeledSubCollection.rst", "_autosummary\\pg_utils.pg_model.base.map_PG_fields.rst", "_autosummary\\pg_utils.pg_model.base.map_collection.rst", "_autosummary\\pg_utils.pg_model.base_utils.rst", "_autosummary\\pg_utils.pg_model.base_utils.assemble_background.rst", "_autosummary\\pg_utils.pg_model.base_utils.field_to_moment.rst", "_autosummary\\pg_utils.pg_model.base_utils.fields_in_term.rst", "_autosummary\\pg_utils.pg_model.base_utils.integrate_asym.rst", "_autosummary\\pg_utils.pg_model.base_utils.integrate_sym.rst", "_autosummary\\pg_utils.pg_model.base_utils.linearize.rst", "_autosummary\\pg_utils.pg_model.core.rst", "_autosummary\\pg_utils.pg_model.core.H_s.rst", "_autosummary\\pg_utils.pg_model.core.PG_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.core.U_pg.rst", "_autosummary\\pg_utils.pg_model.core.U_sph.rst", "_autosummary\\pg_utils.pg_model.core.conjugate_to_PG.rst", "_autosummary\\pg_utils.pg_model.core.fe_p.rst", "_autosummary\\pg_utils.pg_model.core.map_conjugate_to_pg.rst", "_autosummary\\pg_utils.pg_model.core.map_pg_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.core.pg_ansatz.rst", "_autosummary\\pg_utils.pg_model.core.pgvar_bg.rst", "_autosummary\\pg_utils.pg_model.core.pgvar_ptb.rst", "_autosummary\\pg_utils.pg_model.core.reduced_var.rst", "_autosummary\\pg_utils.pg_model.equations.rst", "_autosummary\\pg_utils.pg_model.equations.eqn_PG_to_conjugate.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_cg.rst", "_autosummary\\pg_utils.pg_model.equations.eqs_pg.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_conjugate.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_malkus.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_mm_malkus.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_daria_thesis.test_s.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force.fourier_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force.rad_expand.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force.subscript_str.rst", "_autosummary\\pg_utils.pg_model.expand_stream_force.test_s.rst", "_autosummary\\pg_utils.pg_model.expansion.rst", "_autosummary\\pg_utils.pg_model.expansion.ExpansionRecipe.rst", "_autosummary\\pg_utils.pg_model.expansion.FourierExpansions.rst", "_autosummary\\pg_utils.pg_model.expansion.InnerProduct1D.rst", "_autosummary\\pg_utils.pg_model.expansion.InnerProductOp1D.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialExpansions.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialInnerProducts.rst", "_autosummary\\pg_utils.pg_model.expansion.RadialTestFunctions.rst", "_autosummary\\pg_utils.pg_model.expansion.SpectralExpansion.rst", "_autosummary\\pg_utils.pg_model.expansion.SystemEquations.rst", "_autosummary\\pg_utils.pg_model.expansion.SystemMatrix.rst", "_autosummary\\pg_utils.pg_model.expansion.orth_pref_jacobi.rst", "_autosummary\\pg_utils.pg_model.expansion.placeholder_collection.rst", "_autosummary\\pg_utils.pg_model.forcing.rst", "_autosummary\\pg_utils.pg_model.forcing.force_explicit_cg.rst", "_autosummary\\pg_utils.pg_model.params.rst", "_autosummary\\pg_utils.processing.rst", "_autosummary\\pg_utils.processing.postproc.rst", "_autosummary\\pg_utils.processing.postproc.eigen_func_from_conjugate.rst", "_autosummary\\pg_utils.processing.postproc.get_eigen_field_function.rst", "_autosummary\\pg_utils.sympy_supp.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Scalar3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Tensor3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.Vector3D.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.cross.rst", "_autosummary\\pg_utils.sympy_supp.vector_calculus_3d.dot.rst", "api_reference.rst", "index.rst", "pg_utils\\pg_utils.rst", "pg_utils\\pg_utils.numerics.rst", "pg_utils\\pg_utils.numerics.matrices.rst", "pg_utils\\pg_utils.numerics.matrices.InnerProdQuad.rst", "pg_utils\\pg_utils.numerics.matrices.InnerQuad_GaussJacobi.rst", "pg_utils\\pg_utils.numerics.matrices.InnerQuad_Rule.rst", "pg_utils\\pg_utils.numerics.matrices.LabeledBlockArray.rst", "pg_utils\\pg_utils.numerics.matrices.LabeledBlockMatrix.rst", "pg_utils\\pg_utils.numerics.matrices.MatrixExpander.rst", "pg_utils\\pg_utils.numerics.matrices.QuadRecipe.rst", "pg_utils\\pg_utils.numerics.matrices.invert_block_diag.rst", "pg_utils\\pg_utils.numerics.matrices.powers_of.rst", "pg_utils\\pg_utils.numerics.utils.rst", "pg_utils\\pg_utils.numerics.utils.eigenfreq_Malkus_3d.rst", "pg_utils\\pg_utils.numerics.utils.eigenfreq_Malkus_pg.rst", "pg_utils\\pg_utils.numerics.utils.eigenfreq_inertial3d.rst", "pg_utils\\pg_utils.numerics.utils.eigenfreq_psi_op.rst", "pg_utils\\pg_utils.pg_model.rst", "pg_utils\\pg_utils.pg_model.base.rst", "pg_utils\\pg_utils.pg_model.base.CollectionConjugate.rst", "pg_utils\\pg_utils.pg_model.base.CollectionPG.rst", "pg_utils\\pg_utils.pg_model.base.LabeledCollection.rst", "pg_utils\\pg_utils.pg_model.base.LabeledSubCollection.rst", "pg_utils\\pg_utils.pg_model.base.map_PG_fields.rst", "pg_utils\\pg_utils.pg_model.base.map_collection.rst", "pg_utils\\pg_utils.pg_model.base_utils.rst", "pg_utils\\pg_utils.pg_model.base_utils.assemble_background.rst", "pg_utils\\pg_utils.pg_model.base_utils.field_to_moment.rst", "pg_utils\\pg_utils.pg_model.base_utils.fields_in_term.rst", "pg_utils\\pg_utils.pg_model.base_utils.integrate_asym.rst", "pg_utils\\pg_utils.pg_model.base_utils.integrate_sym.rst", "pg_utils\\pg_utils.pg_model.base_utils.linearize.rst", "pg_utils\\pg_utils.pg_model.core.rst", "pg_utils\\pg_utils.pg_model.core.H_s.rst", "pg_utils\\pg_utils.pg_model.core.PG_to_conjugate.rst", "pg_utils\\pg_utils.pg_model.core.U_pg.rst", "pg_utils\\pg_utils.pg_model.core.U_sph.rst", "pg_utils\\pg_utils.pg_model.core.conjugate_to_PG.rst", "pg_utils\\pg_utils.pg_model.core.fe_p.rst", "pg_utils\\pg_utils.pg_model.core.map_conjugate_to_pg.rst", "pg_utils\\pg_utils.pg_model.core.map_pg_to_conjugate.rst", "pg_utils\\pg_utils.pg_model.core.pg_ansatz.rst", "pg_utils\\pg_utils.pg_model.core.pgvar_bg.rst", "pg_utils\\pg_utils.pg_model.core.pgvar_ptb.rst", "pg_utils\\pg_utils.pg_model.core.reduced_var.rst", "pg_utils\\pg_utils.pg_model.equations.rst", "pg_utils\\pg_utils.pg_model.equations.eqn_PG_to_conjugate.rst", "pg_utils\\pg_utils.pg_model.equations.eqs_cg.rst", "pg_utils\\pg_utils.pg_model.equations.eqs_pg.rst", "pg_utils\\pg_utils.pg_model.expand_conjugate.rst", "pg_utils\\pg_utils.pg_model.expand_conjugate.fourier_expand.rst", "pg_utils\\pg_utils.pg_model.expand_conjugate.rad_expand.rst", "pg_utils\\pg_utils.pg_model.expand_conjugate.subscript_str.rst", "pg_utils\\pg_utils.pg_model.expand_conjugate.test_s.rst", "pg_utils\\pg_utils.pg_model.expand_daria_malkus.rst", "pg_utils\\pg_utils.pg_model.expand_daria_malkus.fourier_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_malkus.rad_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_malkus.subscript_str.rst", "pg_utils\\pg_utils.pg_model.expand_daria_malkus.test_s.rst", "pg_utils\\pg_utils.pg_model.expand_daria_mm_malkus.rst", "pg_utils\\pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_mm_malkus.rad_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_mm_malkus.subscript_str.rst", "pg_utils\\pg_utils.pg_model.expand_daria_mm_malkus.test_s.rst", "pg_utils\\pg_utils.pg_model.expand_daria_thesis.rst", "pg_utils\\pg_utils.pg_model.expand_daria_thesis.fourier_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_thesis.rad_expand.rst", "pg_utils\\pg_utils.pg_model.expand_daria_thesis.subscript_str.rst", "pg_utils\\pg_utils.pg_model.expand_daria_thesis.test_s.rst", "pg_utils\\pg_utils.pg_model.expand_stream_force.rst", "pg_utils\\pg_utils.pg_model.expand_stream_force.fourier_expand.rst", "pg_utils\\pg_utils.pg_model.expand_stream_force.rad_expand.rst", "pg_utils\\pg_utils.pg_model.expand_stream_force.subscript_str.rst", "pg_utils\\pg_utils.pg_model.expand_stream_force.test_s.rst", "pg_utils\\pg_utils.pg_model.expansion.rst", "pg_utils\\pg_utils.pg_model.expansion.ExpansionRecipe.rst", "pg_utils\\pg_utils.pg_model.expansion.FourierExpansions.rst", "pg_utils\\pg_utils.pg_model.expansion.InnerProduct1D.rst", "pg_utils\\pg_utils.pg_model.expansion.InnerProductOp1D.rst", "pg_utils\\pg_utils.pg_model.expansion.RadialExpansions.rst", "pg_utils\\pg_utils.pg_model.expansion.RadialInnerProducts.rst", "pg_utils\\pg_utils.pg_model.expansion.RadialTestFunctions.rst", "pg_utils\\pg_utils.pg_model.expansion.SpectralExpansion.rst", "pg_utils\\pg_utils.pg_model.expansion.SystemEquations.rst", "pg_utils\\pg_utils.pg_model.expansion.SystemMatrix.rst", "pg_utils\\pg_utils.pg_model.expansion.orth_pref_jacobi.rst", "pg_utils\\pg_utils.pg_model.expansion.placeholder_collection.rst", "pg_utils\\pg_utils.pg_model.forcing.rst", "pg_utils\\pg_utils.pg_model.forcing.force_explicit_cg.rst", "pg_utils\\pg_utils.pg_model.params.rst", "pg_utils\\pg_utils.processing.rst", "pg_utils\\pg_utils.processing.postproc.rst", "pg_utils\\pg_utils.processing.postproc.eigen_func_from_conjugate.rst", "pg_utils\\pg_utils.processing.postproc.get_eigen_field_function.rst", "pg_utils\\pg_utils.sympy_supp.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.Scalar3D.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.Tensor3D.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.Vector3D.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.cross.rst", "pg_utils\\pg_utils.sympy_supp.vector_calculus_3d.dot.rst"], "titles": ["pg_utils", "pg_utils.numerics", "pg_utils.numerics.matrices", "pg_utils.numerics.matrices.InnerProdQuad", "pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "pg_utils.numerics.matrices.InnerQuad_Rule", "pg_utils.numerics.matrices.LabeledBlockArray", "pg_utils.numerics.matrices.LabeledBlockMatrix", "pg_utils.numerics.matrices.MatrixExpander", "pg_utils.numerics.matrices.QuadRecipe", "pg_utils.numerics.matrices.invert_block_diag", "pg_utils.numerics.matrices.powers_of", "pg_utils.numerics.utils", "pg_utils.numerics.utils.eigenfreq_Malkus_3d", "pg_utils.numerics.utils.eigenfreq_Malkus_pg", "pg_utils.numerics.utils.eigenfreq_inertial3d", "pg_utils.numerics.utils.eigenfreq_psi_op", "pg_utils.pg_model", "pg_utils.pg_model.base", "pg_utils.pg_model.base.CollectionConjugate", "pg_utils.pg_model.base.CollectionPG", "pg_utils.pg_model.base.LabeledCollection", "pg_utils.pg_model.base.LabeledSubCollection", "pg_utils.pg_model.base.map_PG_fields", "pg_utils.pg_model.base.map_collection", "pg_utils.pg_model.base_utils", "pg_utils.pg_model.base_utils.assemble_background", "pg_utils.pg_model.base_utils.field_to_moment", "pg_utils.pg_model.base_utils.fields_in_term", "pg_utils.pg_model.base_utils.integrate_asym", "pg_utils.pg_model.base_utils.integrate_sym", "pg_utils.pg_model.base_utils.linearize", "pg_utils.pg_model.core", "pg_utils.pg_model.core.H_s", "pg_utils.pg_model.core.PG_to_conjugate", "pg_utils.pg_model.core.U_pg", "pg_utils.pg_model.core.U_sph", "pg_utils.pg_model.core.conjugate_to_PG", "pg_utils.pg_model.core.fe_p", "pg_utils.pg_model.core.map_conjugate_to_pg", "pg_utils.pg_model.core.map_pg_to_conjugate", "pg_utils.pg_model.core.pg_ansatz", "pg_utils.pg_model.core.pgvar_bg", "pg_utils.pg_model.core.pgvar_ptb", "pg_utils.pg_model.core.reduced_var", "pg_utils.pg_model.equations", "pg_utils.pg_model.equations.eqn_PG_to_conjugate", "pg_utils.pg_model.equations.eqs_cg", "pg_utils.pg_model.equations.eqs_pg", "pg_utils.pg_model.expand_conjugate", "pg_utils.pg_model.expand_conjugate.fourier_expand", "pg_utils.pg_model.expand_conjugate.rad_expand", "pg_utils.pg_model.expand_conjugate.subscript_str", "pg_utils.pg_model.expand_conjugate.test_s", "pg_utils.pg_model.expand_daria_malkus", "pg_utils.pg_model.expand_daria_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_malkus.rad_expand", "pg_utils.pg_model.expand_daria_malkus.subscript_str", "pg_utils.pg_model.expand_daria_malkus.test_s", "pg_utils.pg_model.expand_daria_mm_malkus", "pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "pg_utils.pg_model.expand_daria_mm_malkus.test_s", "pg_utils.pg_model.expand_daria_thesis", "pg_utils.pg_model.expand_daria_thesis.fourier_expand", "pg_utils.pg_model.expand_daria_thesis.rad_expand", "pg_utils.pg_model.expand_daria_thesis.subscript_str", "pg_utils.pg_model.expand_daria_thesis.test_s", "pg_utils.pg_model.expand_stream_force", "pg_utils.pg_model.expand_stream_force.fourier_expand", "pg_utils.pg_model.expand_stream_force.rad_expand", "pg_utils.pg_model.expand_stream_force.subscript_str", "pg_utils.pg_model.expand_stream_force.test_s", "pg_utils.pg_model.expansion", "pg_utils.pg_model.expansion.ExpansionRecipe", "pg_utils.pg_model.expansion.FourierExpansions", "pg_utils.pg_model.expansion.InnerProduct1D", "pg_utils.pg_model.expansion.InnerProductOp1D", "pg_utils.pg_model.expansion.RadialExpansions", "pg_utils.pg_model.expansion.RadialInnerProducts", "pg_utils.pg_model.expansion.RadialTestFunctions", "pg_utils.pg_model.expansion.SpectralExpansion", "pg_utils.pg_model.expansion.SystemEquations", "pg_utils.pg_model.expansion.SystemMatrix", "pg_utils.pg_model.expansion.orth_pref_jacobi", "pg_utils.pg_model.expansion.placeholder_collection", "pg_utils.pg_model.forcing", "pg_utils.pg_model.forcing.force_explicit_cg", "pg_utils.pg_model.params", "pg_utils.processing", "pg_utils.processing.postproc", "pg_utils.processing.postproc.eigen_func_from_conjugate", "pg_utils.processing.postproc.get_eigen_field_function", "pg_utils.sympy_supp", "pg_utils.sympy_supp.vector_calculus_3d", "pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "pg_utils.sympy_supp.vector_calculus_3d.cross", "pg_utils.sympy_supp.vector_calculus_3d.dot", "API reference", "PlesioGeostroPy", "pg_utils", "pg_utils.numerics", "pg_utils.numerics.matrices", "pg_utils.numerics.matrices.InnerProdQuad", "pg_utils.numerics.matrices.InnerQuad_GaussJacobi", "pg_utils.numerics.matrices.InnerQuad_Rule", "pg_utils.numerics.matrices.LabeledBlockArray", "pg_utils.numerics.matrices.LabeledBlockMatrix", "pg_utils.numerics.matrices.MatrixExpander", "pg_utils.numerics.matrices.QuadRecipe", "pg_utils.numerics.matrices.invert_block_diag", "pg_utils.numerics.matrices.powers_of", "pg_utils.numerics.utils", "pg_utils.numerics.utils.eigenfreq_Malkus_3d", "pg_utils.numerics.utils.eigenfreq_Malkus_pg", "pg_utils.numerics.utils.eigenfreq_inertial3d", "pg_utils.numerics.utils.eigenfreq_psi_op", "pg_utils.pg_model", "pg_utils.pg_model.base", "pg_utils.pg_model.base.CollectionConjugate", "pg_utils.pg_model.base.CollectionPG", "pg_utils.pg_model.base.LabeledCollection", "pg_utils.pg_model.base.LabeledSubCollection", "pg_utils.pg_model.base.map_PG_fields", "pg_utils.pg_model.base.map_collection", "pg_utils.pg_model.base_utils", "pg_utils.pg_model.base_utils.assemble_background", "pg_utils.pg_model.base_utils.field_to_moment", "pg_utils.pg_model.base_utils.fields_in_term", "pg_utils.pg_model.base_utils.integrate_asym", "pg_utils.pg_model.base_utils.integrate_sym", "pg_utils.pg_model.base_utils.linearize", "pg_utils.pg_model.core", "pg_utils.pg_model.core.H_s", "pg_utils.pg_model.core.PG_to_conjugate", "pg_utils.pg_model.core.U_pg", "pg_utils.pg_model.core.U_sph", "pg_utils.pg_model.core.conjugate_to_PG", "pg_utils.pg_model.core.fe_p", "pg_utils.pg_model.core.map_conjugate_to_pg", "pg_utils.pg_model.core.map_pg_to_conjugate", "pg_utils.pg_model.core.pg_ansatz", "pg_utils.pg_model.core.pgvar_bg", "pg_utils.pg_model.core.pgvar_ptb", "pg_utils.pg_model.core.reduced_var", "pg_utils.pg_model.equations", "pg_utils.pg_model.equations.eqn_PG_to_conjugate", "pg_utils.pg_model.equations.eqs_cg", "pg_utils.pg_model.equations.eqs_pg", "pg_utils.pg_model.expand_conjugate", "pg_utils.pg_model.expand_conjugate.fourier_expand", "pg_utils.pg_model.expand_conjugate.rad_expand", "pg_utils.pg_model.expand_conjugate.subscript_str", "pg_utils.pg_model.expand_conjugate.test_s", "pg_utils.pg_model.expand_daria_malkus", "pg_utils.pg_model.expand_daria_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_malkus.rad_expand", "pg_utils.pg_model.expand_daria_malkus.subscript_str", "pg_utils.pg_model.expand_daria_malkus.test_s", "pg_utils.pg_model.expand_daria_mm_malkus", "pg_utils.pg_model.expand_daria_mm_malkus.fourier_expand", "pg_utils.pg_model.expand_daria_mm_malkus.rad_expand", "pg_utils.pg_model.expand_daria_mm_malkus.subscript_str", "pg_utils.pg_model.expand_daria_mm_malkus.test_s", "pg_utils.pg_model.expand_daria_thesis", "pg_utils.pg_model.expand_daria_thesis.fourier_expand", "pg_utils.pg_model.expand_daria_thesis.rad_expand", "pg_utils.pg_model.expand_daria_thesis.subscript_str", "pg_utils.pg_model.expand_daria_thesis.test_s", "pg_utils.pg_model.expand_stream_force", "pg_utils.pg_model.expand_stream_force.fourier_expand", "pg_utils.pg_model.expand_stream_force.rad_expand", "pg_utils.pg_model.expand_stream_force.subscript_str", "pg_utils.pg_model.expand_stream_force.test_s", "pg_utils.pg_model.expansion", "pg_utils.pg_model.expansion.ExpansionRecipe", "pg_utils.pg_model.expansion.FourierExpansions", "pg_utils.pg_model.expansion.InnerProduct1D", "pg_utils.pg_model.expansion.InnerProductOp1D", "pg_utils.pg_model.expansion.RadialExpansions", "pg_utils.pg_model.expansion.RadialInnerProducts", "pg_utils.pg_model.expansion.RadialTestFunctions", "pg_utils.pg_model.expansion.SpectralExpansion", "pg_utils.pg_model.expansion.SystemEquations", "pg_utils.pg_model.expansion.SystemMatrix", "pg_utils.pg_model.expansion.orth_pref_jacobi", "pg_utils.pg_model.expansion.placeholder_collection", "pg_utils.pg_model.forcing", "pg_utils.pg_model.forcing.force_explicit_cg", "pg_utils.pg_model.params", "pg_utils.processing", "pg_utils.processing.postproc", "pg_utils.processing.postproc.eigen_func_from_conjugate", "pg_utils.processing.postproc.get_eigen_field_function", "pg_utils.sympy_supp", "pg_utils.sympy_supp.vector_calculus_3d", "pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D", "pg_utils.sympy_supp.vector_calculus_3d.Scalar3D", "pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates", "pg_utils.sympy_supp.vector_calculus_3d.Tensor3D", "pg_utils.sympy_supp.vector_calculus_3d.Vector3D", "pg_utils.sympy_supp.vector_calculus_3d.cross", "pg_utils.sympy_supp.vector_calculus_3d.dot"], "terms": {"modul": [0, 1, 17, 31, 32, 45, 49, 54, 59, 64, 69, 87, 90, 94, 106, 107, 108, 124, 138, 139, 152, 156, 161, 166, 171, 176, 194, 197, 201], "symbol": [2, 4, 11, 31, 39, 40, 77, 78, 86, 96, 97, 98, 100, 106, 109, 111, 118, 138, 146, 147, 184, 185, 193, 203, 204, 205, 207], "manipul": [2, 106, 109], "comput": [2, 4, 77, 106, 109, 111, 184], "coeffici": [2, 76, 77, 79, 83, 109, 183, 184, 186, 190], "mass": [2, 109], "stiff": [2, 109], "The": [2, 10, 19, 20, 21, 26, 74, 75, 76, 77, 79, 80, 81, 82, 83, 106, 109, 117, 126, 127, 128, 133, 181, 182, 183, 184, 186, 187, 188, 189, 190], "bridg": [2, 109], "between": [2, 77, 109, 184], "express": [2, 4, 27, 31, 39, 40, 76, 77, 79, 83, 109, 111, 134, 138, 146, 147, 183, 184, 186, 190], "function": [2, 4, 5, 7, 8, 12, 16, 18, 19, 20, 21, 25, 26, 27, 29, 30, 32, 45, 51, 56, 61, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 91, 92, 93, 95, 106, 109, 111, 112, 114, 115, 119, 123, 125, 126, 127, 128, 132, 133, 134, 136, 137, 139, 152, 158, 163, 168, 173, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 198, 199, 200, 202], "class": [2, 3, 4, 5, 6, 7, 8, 9, 18, 19, 20, 21, 22, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 97, 98, 99, 100, 101, 102, 106, 109, 110, 111, 112, 113, 114, 115, 116, 125, 126, 127, 128, 129, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 202, 203, 204, 205, 206, 207, 208, 209], "us": [3, 4, 6, 11, 18, 19, 20, 21, 26, 54, 59, 69, 74, 75, 76, 77, 79, 80, 81, 82, 83, 106, 110, 111, 113, 118, 125, 126, 127, 128, 133, 161, 166, 176, 181, 182, 183, 184, 186, 187, 188, 189, 190], "pg": [0, 14, 18, 19, 20, 21, 25, 26, 32, 33, 34, 36, 37, 39, 40, 41, 69, 74, 79, 106, 107, 121, 125, 126, 127, 128, 132, 133, 139, 140, 141, 143, 144, 146, 147, 148, 176, 181, 186], "model": [0, 14, 18, 21, 25, 32, 45, 87, 106, 107, 121, 125, 128, 132, 139, 152, 194], "jingtao": [18, 25, 32, 45, 49, 54, 59, 64, 69, 87, 91, 125, 132, 139, 152, 156, 161, 166, 171, 176, 194, 198], "min": [18, 25, 32, 45, 49, 54, 59, 64, 69, 87, 91, 125, 132, 139, 152, 156, 161, 166, 171, 176, 194, 198], "eth": [18, 25, 32, 45, 49, 54, 59, 64, 69, 87, 91, 125, 132, 139, 152, 156, 161, 166, 171, 176, 194, 198], "epm": [18, 25, 32, 45, 87, 125, 132, 139, 152, 194], "09": [18, 25, 32, 45, 87, 125, 132, 139, 152, 194], "2023": [18, 25, 32, 45, 49, 54, 59, 64, 69, 87, 91, 125, 132, 139, 152, 156, 161, 166, 171, 176, 194, 198], "util": [25, 32, 38, 74, 91, 132, 139, 145, 181, 198], "coordin": [19, 20, 26, 27, 29, 30, 32, 74, 79, 96, 97, 98, 99, 100, 101, 102, 126, 127, 133, 134, 136, 137, 139, 181, 186, 203, 204, 205, 206, 207, 208, 209], "field": [13, 14, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 35, 36, 42, 54, 59, 74, 75, 76, 79, 80, 81, 82, 83, 92, 93, 120, 121, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 149, 161, 166, 181, 182, 183, 186, 187, 188, 189, 190, 199, 200], "quantiti": [4, 19, 20, 32, 34, 37, 39, 40, 79, 111, 126, 127, 139, 141, 144, 146, 147, 186], "control": [32, 89, 139, 196], "paramet": [4, 5, 6, 7, 8, 19, 20, 21, 23, 24, 26, 27, 28, 31, 32, 34, 37, 39, 40, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 89, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 141, 144, 146, 147, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 196, 203, 204, 205, 206, 207, 208, 209], "attribut": [19, 20, 21, 22, 32, 45, 49, 54, 59, 64, 69, 76, 77, 79, 80, 81, 82, 83, 87, 96, 97, 98, 100, 126, 127, 128, 129, 139, 152, 156, 161, 166, 171, 176, 183, 184, 186, 187, 188, 189, 190, 194, 203, 204, 205, 207], "plesio": [0, 20, 26, 45, 87, 106, 107, 127, 133, 152, 194], "geostrophi": [0, 20, 26, 45, 87, 106, 107, 127, 133, 152, 194], "expans": [4, 5, 8, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 106, 111, 112, 115, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179], "configur": [21, 49, 54, 59, 64, 69, 76, 79, 80, 81, 82, 128, 156, 161, 166, 171, 176, 183, 186, 187, 188, 189], "file": [19, 20, 21, 49, 54, 59, 64, 69, 74, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 156, 161, 166, 171, 176, 181, 183, 186, 187, 188, 189, 190, 191], "conjug": [19, 26, 34, 37, 39, 40, 43, 49, 69, 77, 78, 126, 133, 141, 144, 146, 147, 150, 156, 176, 184, 185], "variabl": [4, 19, 20, 26, 43, 49, 69, 74, 77, 78, 79, 92, 93, 106, 111, 126, 127, 133, 150, 156, 176, 181, 184, 185, 186, 199, 200], "zurich": [49, 54, 59, 64, 69, 91, 156, 161, 166, 171, 176, 198], "daria": [54, 59, 64, 161, 166, 171], "s": [27, 33, 38, 41, 54, 57, 59, 62, 64, 67, 74, 77, 85, 88, 97, 134, 140, 145, 148, 161, 164, 166, 169, 171, 174, 181, 184, 192, 195, 204], "malku": [13, 14, 54, 59, 120, 121, 161, 166], "background": [26, 35, 54, 59, 133, 142, 161, 166], "onli": [3, 54, 59, 69, 77, 79, 110, 161, 166, 176, 184, 186], "coupl": [54, 59, 161, 166], "equatori": [19, 20, 29, 30, 54, 59, 126, 127, 136, 137, 161, 166], "compon": [26, 27, 34, 37, 54, 59, 77, 79, 133, 134, 141, 144, 161, 166, 184, 186], "implement": [22, 54, 59, 74, 77, 79, 106, 129, 161, 166, 181, 184, 186], "consist": [54, 59, 64, 161, 166, 171], "quad_malkus_reg_diff": [54, 59, 161, 166], "nb": [54, 59, 64, 161, 166, 171], "note": [26, 29, 30, 54, 59, 69, 76, 77, 83, 133, 136, 137, 161, 166, 176, 183, 184, 190], "thi": [3, 4, 8, 11, 26, 54, 59, 69, 74, 75, 76, 77, 79, 85, 106, 110, 111, 115, 118, 133, 161, 166, 176, 181, 182, 183, 184, 186, 192], "now": [54, 59, 77, 161, 166, 184], "histor": [54, 161], "version": [54, 161], "code": [54, 59, 161, 166], "longer": [54, 74, 83, 161, 181, 190], "activ": [54, 59, 75, 161, 166, 182], "maintain": [54, 77, 161, 184], "For": [54, 74, 77, 79, 106, 161, 181, 184, 186], "current": [19, 20, 21, 54, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 161, 183, 184, 186, 187, 188, 189, 190], "origin": [54, 59, 77, 161, 166, 184], "document": [54, 59, 64, 161, 166, 171], "mm": [54, 59, 161, 166], "expand_daria_mm_malku": [54, 161], "py": [54, 59, 77, 161, 166, 184], "howev": [3, 59, 77, 83, 110, 166, 184, 190], "contain": [8, 26, 59, 77, 115, 133, 166, 184], "mistak": [59, 166], "lead": [59, 77, 166, 184], "order": [4, 59, 77, 83, 111, 166, 184, 190], "prefactor": [59, 166], "msp": [27, 59, 134, 166], "doe": [59, 77, 166, 184], "therefor": [59, 166], "recommend": [59, 166], "expand_daria_thesi": [59, 166], "full": [59, 69, 77, 166, 176, 184], "correct": [59, 77, 166, 184], "thesi": [59, 77, 166, 184], "dissert": [64, 171], "c1qp_reg_diff_visc_daria": [64, 171], "streamfunct": [69, 176], "forc": [44, 69, 74, 77, 151, 176, 181, 184], "formul": [69, 74, 106, 176, 181], "set": [28, 69, 77, 83, 85, 135, 176, 184, 190, 192], "base": [3, 4, 5, 6, 7, 8, 9, 34, 37, 42, 43, 44, 47, 48, 53, 58, 63, 68, 69, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 141, 144, 149, 150, 151, 154, 155, 160, 165, 170, 175, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 203, 204, 205, 206, 207, 208, 209], "ha": [26, 29, 30, 69, 76, 77, 133, 136, 137, 176, 183, 184], "togeth": [69, 77, 176, 184], "reduc": [3, 69, 76, 81, 110, 176, 183, 188], "system": [8, 69, 77, 83, 84, 99, 101, 102, 106, 115, 176, 184, 190, 191, 206, 208, 209], "equat": [16, 19, 20, 26, 69, 74, 75, 76, 81, 83, 106, 123, 126, 127, 133, 176, 181, 182, 183, 188, 190], "where": [4, 69, 77, 111, 176, 184], "present": [26, 69, 77, 133, 176, 184], "ar": [4, 5, 7, 19, 20, 21, 22, 26, 69, 74, 76, 77, 79, 80, 81, 82, 83, 111, 112, 114, 126, 127, 128, 129, 133, 176, 181, 183, 184, 186, 187, 188, 189, 190], "psi": [16, 19, 20, 26, 41, 52, 57, 62, 67, 69, 72, 123, 126, 127, 133, 148, 159, 164, 169, 174, 176, 179], "f_ext": [69, 176], "relev": [69, 176], "eigenvalu": [69, 74, 106, 176, 181], "problem": [69, 74, 77, 176, 181, 184], "linear": [5, 38, 47, 69, 83, 88, 112, 145, 154, 176, 190, 195], "nonlinear": [26, 69, 133, 176], "do": [69, 77, 176, 184], "gener": [3, 19, 20, 21, 26, 69, 74, 76, 77, 79, 80, 81, 82, 83, 110, 126, 127, 128, 133, 176, 181, 183, 184, 186, 187, 188, 189, 190], "simplifi": [69, 77, 176, 184], "requir": [21, 69, 76, 79, 80, 81, 82, 83, 128, 176, 183, 186, 187, 188, 189, 190], "counterpart": [19, 34, 37, 69, 126, 141, 144, 176], "defin": [21, 74, 75, 77, 78, 83, 128, 181, 182, 184, 185, 190], "method": [3, 4, 5, 6, 7, 8, 9, 11, 19, 20, 21, 22, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 118, 126, 127, 128, 129, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 203, 204, 205, 206, 207, 208, 209], "mainli": [74, 181], "expand": [8, 74, 76, 77, 79, 82, 83, 115, 181, 183, 184, 186, 189, 190], "polar": [74, 181], "unit": [74, 77, 181, 184], "disk": [74, 181], "0": [3, 6, 74, 77, 110, 113, 181, 184], "1": [3, 4, 6, 33, 74, 77, 78, 83, 110, 111, 113, 140, 181, 184, 185, 190], "phi": [38, 41, 57, 62, 67, 74, 88, 145, 148, 164, 169, 174, 181, 195], "pi": [74, 77, 181, 184], "These": [74, 181], "depend": [74, 77, 181, 184], "directli": [3, 26, 74, 77, 110, 133, 181, 184], "link": [74, 181], "As": [74, 79, 181, 186], "result": [26, 74, 77, 91, 133, 181, 184, 198], "bound": [74, 77, 78, 181, 184, 185], "specif": [74, 76, 181, 183], "collectionpg": [23, 24, 26, 34, 37, 39, 40, 42, 43, 46, 48, 74, 130, 131, 133, 141, 144, 146, 147, 149, 150, 153, 155, 181], "work": [74, 77, 106, 181, 184], "labeledcollect": [19, 20, 22, 24, 28, 44, 53, 58, 63, 68, 73, 74, 75, 76, 79, 80, 81, 82, 83, 86, 92, 93, 126, 127, 129, 131, 135, 151, 160, 165, 170, 175, 180, 181, 182, 183, 186, 187, 188, 189, 190, 193, 199, 200], "its": [74, 77, 181, 184], "instanc": [6, 74, 77, 113, 181, 184], "mostli": [74, 77, 181, 184], "flexibl": [74, 181], "radial": [50, 55, 60, 65, 70, 74, 75, 79, 81, 83, 157, 162, 167, 172, 177, 181, 182, 186, 188, 190], "magnet": [19, 20, 26, 27, 74, 126, 127, 133, 134, 181], "boundari": [19, 20, 26, 74, 126, 127, 133, 181], "correspond": [74, 77, 82, 181, 184, 189], "evolut": [74, 181], "often": [74, 181], "replac": [41, 74, 77, 148, 181, 184], "b": [6, 19, 20, 31, 74, 77, 113, 126, 127, 138, 181, 184], "cylindr": [19, 20, 26, 27, 29, 30, 74, 79, 97, 126, 127, 133, 134, 136, 137, 181, 186, 204], "lorentz": [74, 88, 181, 195], "term": [26, 28, 74, 77, 133, 135, 181, 184], "mai": [5, 21, 74, 76, 77, 79, 80, 81, 82, 83, 112, 128, 181, 183, 184, 186, 187, 188, 189, 190], "combin": [74, 77, 181, 184], "one": [3, 7, 23, 24, 26, 74, 77, 110, 114, 130, 131, 133, 181, 184], "singl": [6, 74, 77, 113, 181, 184], "dynam": [74, 79, 181, 186], "etc": [19, 20, 74, 106, 126, 127, 181], "post": [91, 106, 198], "visual": [77, 91, 184, 198], "completemeneri": [95, 202], "common": [77, 95, 184, 202], "vector": [95, 102, 202, 209], "calculu": [95, 202], "sympi": [4, 26, 27, 31, 77, 83, 95, 96, 97, 98, 100, 111, 133, 134, 138, 184, 190, 202, 203, 204, 205, 207], "python": [0, 77, 106, 107, 184], "realiz": [4, 5, 106, 111, 112], "jackson": 106, "maffei": 106, "2020": 106, "type": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 106, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "quasi": 106, "geostroph": 106, "magneto": 106, "hydrodyanm": 106, "planetari": 106, "dynamo": 106, "index": [4, 21, 22, 26, 106, 111, 128, 129, 133], "search": 106, "page": [], "inner_prod": [3, 4, 5, 110, 111, 112], "innerproduct1d": [3, 4, 5, 8, 110, 111, 112, 115], "quad_method": [3, 110], "str": [3, 4, 6, 7, 13, 14, 19, 20, 21, 26, 76, 77, 79, 80, 81, 82, 83, 86, 96, 97, 98, 100, 110, 111, 113, 114, 120, 121, 126, 127, 128, 133, 183, 184, 186, 187, 188, 189, 190, 193, 203, 204, 205, 207], "arg": [3, 5, 11, 77, 84, 110, 112, 118, 184, 191], "kwarg": [3, 4, 5, 77, 84, 99, 101, 102, 110, 111, 112, 184, 191, 206, 208, 209], "object": [3, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 24, 34, 35, 36, 37, 41, 42, 43, 44, 47, 48, 50, 51, 53, 55, 56, 58, 60, 61, 63, 65, 66, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 101, 106, 110, 112, 113, 114, 115, 116, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 157, 158, 160, 162, 163, 165, 167, 168, 170, 172, 173, 175, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 205, 208], "quadratur": [3, 4, 5, 77, 110, 111, 112, 184], "inner": [3, 4, 5, 8, 53, 58, 63, 68, 73, 75, 77, 78, 80, 83, 110, 111, 112, 115, 160, 165, 170, 175, 180, 182, 184, 185, 187, 190], "product": [3, 4, 5, 8, 53, 58, 63, 68, 73, 75, 77, 78, 80, 83, 110, 111, 112, 115, 160, 165, 170, 175, 180, 182, 184, 185, 187, 190], "all": [3, 13, 14, 19, 20, 21, 26, 28, 75, 76, 77, 79, 80, 81, 82, 83, 106, 110, 120, 121, 126, 127, 128, 133, 135, 182, 183, 184, 186, 187, 188, 189, 190], "1d": [3, 110], "compar": [3, 77, 110, 184], "direct": [3, 77, 110, 184], "integr": [3, 4, 27, 29, 30, 77, 78, 110, 111, 134, 136, 137, 184, 185], "form": [3, 4, 5, 7, 19, 20, 21, 31, 76, 77, 79, 80, 81, 82, 83, 85, 110, 111, 112, 114, 126, 127, 128, 138, 183, 184, 186, 187, 188, 189, 190, 192], "calcul": [3, 5, 77, 110, 112, 184], "notat": [3, 77, 86, 110, 184, 193], "allow": [3, 77, 83, 110, 184, 190], "drastic": [3, 110], "save": [3, 19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 110, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "time": [3, 77, 83, 110, 184, 190], "basi": [3, 76, 79, 85, 110, 183, 186, 192], "evalu": [3, 4, 5, 8, 26, 77, 92, 93, 110, 111, 112, 115, 133, 184, 199, 200], "when": [3, 4, 19, 20, 21, 26, 76, 77, 79, 80, 81, 82, 83, 110, 111, 126, 127, 128, 133, 183, 184, 186, 187, 188, 189, 190], "w": [3, 77, 110, 184], "x": [3, 77, 96, 110, 184, 203], "phi1": [3, 110], "l": [3, 5, 110, 112], "phi2": [3, 110], "n": [3, 13, 14, 15, 16, 77, 110, 120, 121, 122, 123, 184], "k": [3, 110], "point": [3, 4, 77, 79, 110, 111, 184, 186], "would": [3, 76, 77, 79, 110, 183, 184, 186], "need": [3, 26, 77, 110, 133, 184], "kn": [3, 110], "2": [3, 4, 6, 33, 77, 78, 88, 110, 111, 113, 140, 184, 185, 195], "both": [3, 77, 110, 184], "fact": [3, 110], "complex": [3, 76, 77, 78, 110, 183, 184, 185], "from": [3, 19, 20, 21, 23, 24, 26, 28, 31, 76, 77, 79, 80, 81, 82, 83, 84, 110, 126, 127, 128, 130, 131, 133, 135, 138, 183, 184, 186, 187, 188, 189, 190, 191], "o": [3, 77, 110, 184], "__init__": [3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 115, 116, 126, 127, 128, 129, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 203, 204, 205, 206, 207, 208, 209], "automat": [4, 111], "bool": [4, 19, 20, 21, 22, 75, 76, 77, 79, 80, 81, 82, 83, 111, 126, 127, 128, 129, 182, 183, 184, 186, 187, 188, 189, 190], "fals": [4, 8, 19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 111, 115, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "alpha": [4, 111], "expr": [4, 11, 26, 28, 31, 41, 76, 77, 78, 79, 81, 82, 83, 85, 111, 118, 133, 135, 138, 148, 183, 184, 185, 186, 188, 189, 190, 192], "beta": [4, 111], "quadn": [4, 111], "option": [4, 75, 77, 78, 96, 97, 98, 100, 111, 182, 184, 185, 203, 204, 205, 207], "none": [4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 26, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 116, 126, 127, 128, 129, 133, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 203, 204, 205, 206, 207, 208, 209], "innerquad_rul": [4, 111], "follow": [4, 6, 21, 22, 77, 106, 111, 113, 128, 129, 184], "gauss": [4, 111], "jacobi": [4, 111], "prod": [4, 111], "int_var": [4, 77, 78, 111, 184, 185], "deduc": [4, 111], "whether": [4, 19, 20, 21, 22, 76, 77, 79, 80, 81, 82, 83, 111, 126, 127, 128, 129, 183, 184, 186, 187, 188, 189, 190], "indic": [4, 5, 6, 7, 19, 20, 21, 75, 76, 77, 79, 80, 81, 82, 83, 111, 112, 113, 114, 126, 127, 128, 182, 183, 184, 186, 187, 188, 189, 190], "idx": [4, 7, 111, 114], "powern": [4, 111], "total": [4, 111], "degre": [4, 111], "initi": [4, 7, 8, 19, 20, 21, 22, 75, 76, 77, 78, 79, 80, 81, 82, 83, 111, 114, 115, 126, 127, 128, 129, 182, 183, 184, 185, 186, 187, 188, 189, 190], "polynomi": [4, 77, 111, 184], "ignor": [4, 19, 20, 21, 77, 80, 81, 111, 126, 127, 128, 184, 187, 188], "true": [4, 19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 111, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "default": [4, 26, 31, 77, 111, 133, 138, 184], "chebyshev": [4, 111], "deduct": [4, 111], "turn": [4, 111], "off": [4, 111], "int": [4, 5, 6, 7, 10, 13, 14, 15, 16, 77, 78, 85, 111, 112, 113, 114, 117, 120, 121, 122, 123, 184, 185, 192], "explicitli": [4, 77, 111, 184], "given": [4, 27, 76, 77, 85, 96, 97, 98, 100, 111, 134, 183, 184, 192, 203, 204, 205, 207], "n_test": [4, 5, 8, 111, 112, 115], "n_trial": [4, 5, 8, 111, 112, 115], "valid": [4, 111], "input": [4, 11, 21, 29, 30, 76, 79, 80, 81, 82, 83, 111, 118, 128, 136, 137, 183, 186, 187, 188, 189, 190], "alwai": [4, 77, 83, 111, 184, 190], "deduce_param": [4, 111], "ntrial": [4, 111], "ntest": [4, 111], "determin": [4, 7, 19, 20, 21, 22, 76, 77, 79, 80, 81, 82, 83, 111, 114, 126, 127, 128, 129, 183, 184, 186, 187, 188, 189, 190], "call": [4, 77, 99, 102, 111, 184, 206, 209], "valu": [4, 6, 7, 19, 20, 21, 77, 80, 81, 111, 113, 114, 126, 127, 128, 184, 187, 188], "dure": [4, 77, 111, 184], "gram": [4, 5, 111, 112], "maximum": [4, 77, 111, 184], "we": [4, 77, 79, 111, 184, 186], "assum": [4, 7, 10, 76, 79, 83, 111, 114, 117, 183, 186, 190], "reach": [4, 111], "return": [4, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 34, 37, 39, 40, 76, 77, 79, 80, 81, 82, 83, 85, 111, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 141, 144, 146, 147, 183, 184, 186, 187, 188, 189, 190, 192], "classmethod": [4, 77, 111, 184], "get_pow": [4, 111], "ndarrai": [4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123], "get": [4, 77, 92, 93, 111, 184, 199, 200], "power": [4, 11, 77, 85, 111, 118, 184, 192], "p1": [4, 111], "xi": [4, 111], "p2": [4, 111], "retriev": [4, 11, 111, 118], "gramian": [4, 5, 111, 112], "nrange_tri": [4, 5, 111, 112], "list": [4, 5, 6, 7, 8, 10, 19, 20, 21, 76, 77, 78, 79, 80, 81, 82, 83, 84, 111, 112, 113, 114, 115, 117, 126, 127, 128, 183, 184, 185, 186, 187, 188, 189, 190, 191], "nrange_test": [4, 5, 111, 112], "backend": [4, 111], "int_opt": [4, 111], "dict": [4, 6, 7, 9, 23, 24, 31, 39, 40, 46, 77, 92, 93, 111, 113, 114, 116, 130, 131, 138, 146, 147, 153, 184, 199, 200], "output": [4, 111], "out_opt": [4, 111], "verbos": [4, 8, 77, 111, 115, 184], "union": [4, 5, 13, 14, 15, 16, 82, 85, 111, 112, 120, 121, 122, 123, 189, 192], "matrix": [4, 5, 6, 7, 8, 10, 84, 111, 112, 113, 114, 115, 117, 191], "mutabledensematrix": [4, 5, 111, 112], "concret": [4, 111], "rang": [4, 5, 8, 28, 77, 111, 112, 115, 135, 184], "trial": [4, 5, 8, 111, 112, 115], "func": [4, 77, 111, 184], "see": [4, 77, 96, 97, 98, 100, 106, 111, 184, 203, 204, 205, 207], "innerquadrul": [4, 111], "test": [4, 5, 8, 51, 56, 61, 66, 71, 75, 77, 81, 111, 112, 115, 158, 163, 168, 173, 178, 182, 184, 188], "which": [4, 19, 28, 75, 77, 78, 83, 106, 111, 126, 135, 182, 184, 185, 190], "done": [4, 26, 77, 111, 133, 184], "evalf": [4, 77, 111, 184], "scipi": [4, 111], "conduct": [4, 111], "numpi": [4, 7, 111, 114], "precis": [4, 77, 111, 184], "limit": [4, 77, 111, 184], "platform": [4, 111], "support": [4, 21, 22, 26, 77, 111, 128, 129, 133, 184], "np": [4, 6, 7, 8, 111, 113, 114, 115], "float": [4, 13, 14, 77, 111, 120, 121, 184], "pass": [4, 19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 111, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "cast": [4, 111], "_output_form": [4, 111], "certain": [5, 112], "rule": [5, 77, 83, 112, 184, 190], "abstract": [5, 21, 112, 128], "quad": [5, 77, 112, 184], "overriden": [5, 83, 112, 190], "actual": [5, 8, 77, 106, 112, 115, 184], "strictli": [5, 112], "speak": [5, 112], "abus": [5, 77, 112, 184], "terminolog": [5, 112], "usual": [5, 112], "vi": [5, 112], "vj": [5, 112], "rather": [5, 77, 112, 184], "ui": [5, 112], "i": [5, 7, 19, 20, 21, 26, 27, 76, 77, 79, 80, 81, 82, 83, 88, 112, 114, 126, 127, 128, 133, 134, 183, 184, 186, 187, 188, 189, 190, 195], "e": [5, 7, 26, 27, 38, 52, 57, 62, 67, 77, 83, 88, 106, 112, 114, 133, 134, 145, 159, 164, 169, 174, 184, 190, 195], "differ": [5, 76, 77, 79, 82, 112, 183, 184, 186, 189], "second": [5, 77, 96, 97, 98, 100, 112, 184, 203, 204, 205, 207], "operand": [5, 77, 112, 184], "well": [5, 112], "involv": [5, 26, 112, 133], "oper": [5, 16, 21, 22, 77, 83, 99, 102, 112, 123, 128, 129, 184, 190, 206, 209], "an": [5, 6, 19, 20, 21, 22, 39, 40, 76, 77, 79, 80, 81, 82, 83, 85, 112, 113, 126, 127, 128, 129, 146, 147, 183, 184, 186, 187, 188, 189, 190, 192], "arrai": [5, 6, 7, 19, 20, 21, 26, 75, 80, 81, 99, 101, 102, 112, 113, 114, 126, 127, 128, 133, 182, 187, 188, 206, 208, 209], "substitut": [5, 26, 77, 112, 133, 184], "block_nam": [6, 113], "block_rang": [6, 113], "block": [6, 7, 10, 113, 114, 117], "d": [6, 77, 78, 83, 101, 113, 184, 185, 190, 208], "label": [6, 7, 21, 22, 113, 114, 128, 129], "assign": [6, 7, 113, 114], "labeledblockmatrix": [6, 113], "wrap": [6, 113], "around": [6, 77, 113, 184], "so": [6, 7, 77, 79, 113, 114, 184, 186], "can": [6, 7, 21, 22, 77, 106, 113, 114, 128, 129, 184], "access": [6, 21, 113, 128], "string": [6, 19, 20, 21, 22, 76, 77, 79, 80, 81, 82, 83, 113, 126, 127, 128, 129, 183, 184, 186, 187, 188, 189, 190], "_block_idx": [6, 113], "kei": [6, 7, 19, 20, 21, 77, 80, 81, 113, 114, 126, 127, 128, 184, 187, 188], "slice": [6, 7, 113, 114], "_arrai": [6, 113], "underli": [6, 7, 77, 113, 114, 184], "like": [6, 7, 19, 20, 21, 26, 77, 80, 81, 99, 101, 102, 113, 114, 126, 127, 128, 133, 184, 187, 188, 206, 208, 209], "name": [6, 7, 19, 20, 21, 80, 81, 83, 86, 96, 97, 98, 100, 113, 114, 126, 127, 128, 187, 188, 190, 193, 203, 204, 205, 207], "integ": [6, 7, 21, 22, 77, 113, 114, 128, 129, 184], "size": [6, 7, 113, 114], "each": [6, 7, 39, 40, 75, 77, 79, 113, 114, 146, 147, 182, 184, 186], "exampl": [6, 77, 113, 184], "arang": [6, 113], "10": [6, 77, 113, 184], "A": [6, 31, 77, 113, 138, 184], "c": [6, 77, 113, 184], "3": [6, 77, 101, 113, 184, 208], "4": [6, 77, 88, 113, 184, 195], "interpret": [6, 77, 113, 184], "sens": [6, 77, 113, 184], "5": [6, 77, 113, 184], "6": [6, 77, 113, 184], "7": [6, 113], "8": [6, 77, 113, 184], "9": [6, 77, 113, 184], "row_nam": [7, 114], "row_rang": [7, 114], "col_nam": [7, 114], "col_rang": [7, 114], "row": [7, 114], "col": [7, 114], "unlik": [7, 76, 114, 183], "g": [7, 77, 106, 114, 184], "segment": [7, 10, 114, 117], "separ": [7, 26, 77, 114, 133, 184], "fix": [7, 114], "grid": [7, 114], "line": [7, 114], "aaa": [7, 114], "bb": [7, 114], "ccc": [7, 114], "dd": [7, 114], "cc": [7, 114], "ddd": [7, 114], "column": [7, 114], "_row_idx": [7, 114], "_col_idx": [7, 114], "_matrix": [7, 114], "number": [7, 31, 77, 114, 138, 184], "systemmatrix": [8, 83, 115, 190], "quad_recip": [8, 115], "ranges_tri": [8, 115], "ranges_test": [8, 115], "element": [8, 21, 79, 83, 99, 101, 102, 115, 128, 186, 190, 206, 208, 209], "either": [8, 77, 115, 184], "zero": [8, 77, 115, 184], "recip": [8, 75, 83, 106, 115, 182, 190], "collect": [8, 19, 20, 21, 22, 24, 26, 28, 34, 39, 40, 76, 77, 79, 80, 81, 82, 83, 86, 115, 126, 127, 128, 129, 131, 133, 135, 141, 146, 147, 183, 184, 186, 187, 188, 189, 190, 193], "quadrecip": [8, 115], "ideal": [8, 115], "futur": [8, 77, 115, 184], "should": [8, 19, 20, 21, 26, 27, 39, 40, 76, 77, 79, 80, 81, 82, 83, 115, 126, 127, 128, 133, 134, 146, 147, 183, 184, 186, 187, 188, 189, 190], "also": [8, 19, 20, 21, 22, 76, 77, 79, 80, 81, 82, 83, 106, 115, 126, 127, 128, 129, 183, 184, 186, 187, 188, 189, 190], "accept": [8, 77, 115, 184], "written": [8, 77, 83, 115, 184, 190], "sum": [8, 77, 115, 184], "robust": [8, 106, 115], "spars": [8, 115], "accord": [8, 77, 115, 184], "init_opt": [9, 116], "gram_opt": [9, 116], "block_seg": [10, 117], "invert": [10, 77, 117, 184], "diagon": [10, 117], "squar": [10, 117], "give": [10, 22, 77, 117, 129, 184], "veri": [11, 118], "intric": [11, 118], "must": [11, 19, 20, 21, 77, 80, 81, 118, 126, 127, 128, 184, 187, 188], "care": [11, 77, 118, 184], "sanit": [11, 21, 76, 79, 80, 81, 82, 83, 118, 128, 183, 186, 187, 188, 189, 190], "m": [13, 14, 15, 16, 52, 77, 120, 121, 122, 123, 159, 184], "le": [13, 14, 120, 121], "mode": [13, 14, 15, 26, 120, 121, 122, 133], "timescal": [13, 14, 120, 121], "spin": [13, 14, 120, 121], "analyt": [13, 14, 15, 16, 120, 121, 122, 123], "eigenfrequ": [13, 14, 15, 16, 120, 121, 122, 123], "3d": [13, 15, 96, 97, 98, 99, 100, 102, 120, 122, 203, 204, 205, 206, 207, 209], "eigemod": [13, 120], "bg": [13, 14, 120, 121], "inerti": [15, 122], "self": [16, 19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 123, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "adjoint": [16, 123], "stream": [16, 26, 123, 133], "vortic": [16, 19, 20, 26, 48, 123, 126, 127, 133, 155], "keyword": [19, 20, 21, 77, 80, 81, 126, 127, 128, 184, 187, 188], "argument": [19, 20, 21, 76, 77, 78, 80, 81, 126, 127, 128, 183, 184, 185, 187, 188], "part": [19, 20, 21, 75, 77, 80, 81, 126, 127, 128, 182, 184, 187, 188], "otherwis": [19, 20, 21, 26, 77, 80, 81, 126, 127, 128, 133, 184, 187, 188], "pair": [19, 20, 21, 77, 80, 81, 126, 127, 128, 184, 187, 188], "rais": [19, 20, 21, 77, 80, 81, 126, 127, 128, 184, 187, 188], "error": [19, 20, 21, 77, 80, 81, 126, 127, 128, 184, 187, 188], "appli": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "fun": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "callabl": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "ani": [19, 20, 21, 26, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 133, 183, 184, 186, 187, 188, 189, 190], "inplac": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "metadata": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "item": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 106, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "how": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "entri": [19, 20, 21, 39, 40, 76, 79, 80, 81, 82, 83, 126, 127, 128, 146, 147, 183, 186, 187, 188, 189, 190], "process": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 105, 106, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "signatur": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "take": [19, 20, 21, 31, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 138, 183, 184, 186, 187, 188, 189, 190], "write": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "chang": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "situ": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "If": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "itself": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "as_empti": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "overrid": [19, 20, 77, 126, 127, 184], "copi": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "deep": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "static": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "deseri": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "obj": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "tupl": [19, 20, 21, 27, 76, 77, 78, 79, 80, 81, 82, 83, 126, 127, 128, 134, 183, 184, 185, 186, 187, 188, 189, 190], "parser": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "lambda": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "generate_collect": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "index_arrai": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "new": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190], "properti": [19, 20, 21, 22, 76, 77, 79, 80, 81, 82, 83, 126, 127, 128, 129, 183, 184, 186, 187, 188, 189, 190], "iter_filt": [19, 20, 21, 22, 76, 79, 80, 81, 82, 83, 126, 127, 128, 129, 183, 186, 187, 188, 189, 190], "skip": [19, 20, 21, 22, 76, 79, 80, 81, 82, 83, 126, 127, 128, 129, 183, 186, 187, 188, 189, 190], "iter_nam": [19, 20, 21, 22, 76, 79, 80, 81, 82, 83, 126, 127, 128, 129, 183, 186, 187, 188, 189, 190], "load_json": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "fp": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190, 191], "textio": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "load": [19, 20, 21, 76, 77, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 184, 186, 187, 188, 189, 190, 191], "json": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "save_json": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "serial": [19, 20, 21, 76, 79, 80, 81, 82, 83, 84, 126, 127, 128, 183, 186, 187, 188, 189, 190, 191], "format": [19, 20, 21, 76, 79, 80, 81, 82, 83, 126, 127, 128, 183, 186, 187, 188, 189, 190], "subset_b_bound": [19, 20, 126, 127], "extract": [19, 20, 21, 28, 77, 126, 127, 128, 135, 184], "subset": [19, 20, 21, 22, 126, 127, 128, 129], "subset_b_bound_cyl": [19, 20, 126, 127], "subset_b_equ": [19, 20, 126, 127], "plane": [19, 20, 126, 127], "subset_mag": [19, 20, 126, 127], "subset_mo": [19, 20, 126, 127], "moment": [19, 20, 27, 126, 127, 134], "basic": [19, 20, 77, 106, 126, 127, 184], "alia": [19, 20, 126, 127], "behaviour": [21, 128], "other": [21, 22, 77, 128, 129, 184], "word": [21, 22, 77, 128, 129, 184], "sort": [21, 22, 77, 128, 129, 184], "In": [21, 22, 77, 79, 128, 129, 184, 186], "addit": [21, 22, 77, 128, 129, 184], "iter": [21, 22, 26, 77, 128, 129, 133, 184], "travers": [21, 22, 77, 128, 129, 184], "subcollect": [21, 128], "same": [21, 76, 77, 79, 80, 81, 82, 83, 128, 183, 184, 186, 187, 188, 189, 190], "slightli": [21, 76, 79, 80, 81, 82, 128, 183, 186, 187, 188, 189], "faster": [21, 76, 77, 79, 80, 81, 82, 128, 183, 184, 186, 187, 188, 189], "than": [21, 76, 77, 79, 80, 81, 82, 128, 183, 184, 186, 187, 188, 189], "base_collect": [22, 129], "sub_slic": [22, 129], "similar": [22, 77, 129, 184], "maps_from": [23, 24, 130, 131], "maps_to": [23, 24, 130, 131], "creat": [23, 24, 77, 130, 131, 184], "map": [23, 24, 31, 39, 40, 77, 130, 131, 138, 146, 147, 184], "anoth": [23, 24, 76, 77, 101, 102, 130, 131, 183, 184, 208, 209], "dictionari": [23, 24, 39, 40, 77, 130, 131, 146, 147, 184], "b0": [26, 31, 133, 138], "psi0": [26, 133], "assembl": [26, 133], "vector3d": [26, 35, 36, 41, 133, 142, 143, 148], "becaus": [26, 77, 133, 184], "veloc": [26, 41, 133, 148], "cannot": [26, 77, 133, 184], "convert": [26, 27, 34, 37, 76, 77, 83, 133, 134, 141, 144, 183, 184, 190], "want": [26, 77, 133, 184], "specifi": [26, 76, 77, 133, 183, 184], "absent": [26, 133], "induct": [26, 133], "u": [26, 77, 133, 184], "instead": [26, 77, 133, 184], "what": [26, 77, 133, 184], "kind": [26, 77, 82, 133, 184, 189], "cg": [26, 133], "thei": [26, 77, 133, 184], "deriv": [26, 77, 88, 133, 184, 195], "undefin": [26, 77, 133, 184], "incorrect": [26, 133], "immedi": [26, 133], "z": [26, 27, 52, 57, 62, 67, 77, 88, 96, 97, 133, 134, 159, 164, 169, 174, 184, 195, 203, 204], "pm": [26, 133], "h": [26, 77, 85, 88, 133, 184, 192, 195], "sinc": [26, 77, 133, 184], "One": [26, 77, 133, 184], "after": [26, 77, 133, 184], "simplif": [26, 77, 133, 184], "b_field": [27, 134], "b_": [27, 88, 134, 195], "p": [27, 77, 97, 100, 134, 184, 204, 207], "b_p": [27, 134], "b_z": [27, 88, 134, 195], "eight": [27, 134], "mss": [27, 134], "mpp": [27, 134], "msz": [27, 134], "mpz": [27, 134], "zmss": [27, 134], "zmpp": [27, 134], "zmsp": [27, 134], "field_collect": [28, 135], "asymmetr": [29, 136], "odd": [29, 136], "symmetr": [30, 137], "even": [30, 77, 79, 137, 184, 186], "subs_map": [31, 46, 138, 153], "perturb_var": [31, 138], "epsilon": [31, 138], "subtitut": [31, 138], "a0": [31, 138], "ep": [31, 138], "a1": [31, 138], "b1": [31, 138], "perturb": [31, 42, 138, 149], "pg_field": [31, 138], "sqrt": [33, 77, 140, 184], "independ": [33, 77, 140, 184], "physic": [33, 140], "pg_comp": [34, 39, 40, 141, 146, 147], "collectionconjug": [34, 37, 39, 40, 47, 141, 144, 146, 147, 154], "sympy_supp": [35, 36, 41, 105, 106, 142, 143, 148], "vector_calculus_3d": [35, 36, 41, 142, 143, 148], "complet": [36, 77, 143, 184], "cg_comp": [37, 39, 40, 144, 146, 147], "f_": [38, 145], "t": [38, 41, 77, 88, 100, 145, 148, 184, 195, 207], "build": [39, 40, 77, 86, 146, 147, 184, 193], "least": [39, 40, 146, 147], "formal_vel": [41, 148], "pg_psi": [41, 148], "formal": [41, 77, 148, 184], "ansatz": [41, 76, 148, 183], "placehold": [44, 86, 151, 193], "eqset_pg": [46, 153], "fourierexpans": [50, 55, 60, 65, 70, 75, 157, 162, 167, 172, 177, 182], "radialexpans": [51, 56, 61, 66, 71, 75, 76, 158, 163, 168, 173, 178, 182, 183], "m1": [52, 159], "zm1": [52, 159], "zm": [52, 159], "ez": [52, 57, 62, 67, 88, 159, 164, 169, 174, 195], "fourier": [52, 57, 62, 67, 72, 75, 76, 77, 83, 159, 164, 169, 174, 179, 182, 183, 184, 190], "ss": [57, 62, 67, 164, 169, 174], "sz": [57, 62, 67, 164, 169, 174], "zss": [57, 62, 67, 164, 169, 174], "zs": [57, 62, 67, 164, 169, 174], "es": [57, 62, 67, 164, 169, 174], "f": [72, 77, 179, 184], "fourier_expand": [75, 182], "rad_expand": [75, 182], "rad_test": [75, 182], "radialtestfunct": [75, 182], "inner_prod_op": [75, 80, 182, 187], "radialinnerproduct": [75, 182], "base_expr": [75, 182], "test_expr": [75, 77, 182, 184], "top": [75, 77, 83, 182, 184, 190], "level": [75, 77, 83, 182, 184, 190], "spectral": [75, 79, 82, 106, 182, 186, 189], "concern": [75, 182], "azimuth": [75, 182], "fourier_ansatz": [75, 83, 182, 190], "consid": [75, 77, 182, 184], "share": [75, 76, 182, 183], "among": [75, 76, 182, 183], "rad_expans": [75, 182], "inner_product": [75, 182], "associ": [75, 182], "eq": [75, 76, 77, 182, 183, 184], "fourier_coeff": [76, 183], "spectralexpans": [76, 79, 183, 186], "domain": [76, 77, 83, 183, 184, 190], "view": [76, 183], "coeff": [76, 77, 79, 82, 83, 183, 184, 186, 189, 190], "to_fourier_domain": [76, 83, 183, 190], "_opd_a": [77, 184], "left": [77, 184], "_opd_b": [77, 184], "right": [77, 184], "_wt": [77, 78, 184, 185], "weight": [77, 78, 184, 185], "_int_var": [77, 78, 184, 185], "_bound": [77, 78, 184, 185], "_print_mid": [77, 184], "print": [77, 184], "middl": [77, 184], "merg": [77, 184], "opd_a": [77, 184], "opd_b": [77, 184], "wt": [77, 78, 184, 185], "lower": [77, 184], "upper": [77, 184], "apart": [77, 184], "poli": [77, 184], "import": [77, 184], "cot": [77, 184], "abc": [77, 184], "y": [77, 96, 184, 203], "never": [77, 184], "_arg": [77, 184], "__new__": [77, 184], "easi": [77, 184], "interfac": [77, 184], "args_cnc": [77, 184], "cset": [77, 184], "warn": [77, 184], "split_1": [77, 184], "commut": [77, 184], "factor": [77, 83, 184, 190], "non": [77, 184], "treat": [77, 184], "mul": [77, 184], "were": [77, 184], "repeat": [77, 184], "happen": [77, 184], "unevalu": [77, 184], "unless": [77, 184], "suppress": [77, 184], "oo": [77, 184], "singleton": [77, 184], "as_coeff_add": [77, 184], "ration": [77, 184], "effici": [77, 106, 184], "summat": [77, 184], "as_coeff_mul": [77, 184], "dep": [77, 184], "add": [77, 184], "ad": [77, 184], "empti": [77, 83, 184, 190], "you": [77, 106, 184], "know": [77, 184], "individu": [77, 79, 184, 186], "tail": [77, 184], "head": [77, 184], "as_two_term": [77, 184], "split": [77, 184], "as_independ": [77, 184], "as_coeff_expon": [77, 184], "multipli": [77, 184], "as_coeffici": [77, 184], "free": [77, 184], "possibl": [77, 184], "sin": [77, 184], "two": [77, 79, 184, 186], "have": [77, 79, 184, 186], "them": [77, 184], "desir": [77, 79, 85, 184, 186, 192], "exactli": [77, 184], "match": [77, 184], "constant": [77, 184], "could": [77, 184], "select": [77, 184], "Or": [77, 184], "greater": [77, 184], "_": [77, 184], "just": [77, 184], "exact": [77, 184], "zz": [77, 184], "coeff_monomi": [77, 184], "nth": [77, 184], "multipl": [77, 184], "polytool": [77, 184], "find": [77, 106, 184], "monomi": [77, 184], "as_coefficients_dict": [77, 184], "sym": [77, 184], "defaultdict": [77, 184], "inquiri": [77, 184], "about": [77, 184], "provid": [77, 106, 184], "regular": [77, 79, 184, 186], "as_content_primit": [77, 184], "radic": [77, 184], "clear": [77, 184], "recurs": [77, 184], "remov": [77, 184], "content": [77, 184], "primit": [77, 184], "posit": [77, 184], "foo": [77, 184], "canon": [77, 184], "try": [77, 184], "preserv": [77, 184], "structur": [77, 184], "expand_mul": [77, 184], "retain": [77, 184], "end": [77, 184], "up": [77, 184], "join": [77, 184], "onc": [77, 184], "11": [77, 184], "121": [77, 184], "84": [77, 184], "out": [77, 83, 106, 184, 190], "distribut": [77, 184], "leav": [77, 184], "more": [77, 106, 184], "as_dummi": [77, 184], "uniqu": [77, 184], "within": [77, 106, 184], "appear": [77, 184], "assumpt": [77, 184], "being": [77, 184], "r": [77, 100, 184, 207], "real": [77, 184], "_0": [77, 184], "is_real": [77, 184], "_r": [77, 184], "bound_symbol": [77, 184], "those": [77, 184], "as_expr": [77, 184], "gen": [77, 184], "as_poli": [77, 184], "hint": [77, 184], "naiv": [77, 184], "To": [77, 184], "obtain": [77, 184], "first": [77, 79, 83, 96, 97, 98, 100, 184, 186, 190, 203, 204, 205, 207], "separatevar": [77, 184], "pow": [77, 184], "includ": [77, 106, 184], "exp": [77, 184], "log": [77, 184], "thing": [77, 184], "here": [77, 106, 184], "respect": [77, 184], "noncommut": [77, 184], "regardless": [77, 184], "nonzero": [77, 184], "equal": [77, 184], "as_add": [77, 184], "co": [77, 184], "n1": [77, 184], "n2": [77, 184], "n3": [77, 184], "anyth": [77, 184], "els": [77, 96, 97, 98, 100, 184, 203, 204, 205, 207], "below": [77, 184], "abov": [77, 184], "make": [77, 184], "former": [77, 184], "while": [77, 184], "latter": [77, 184], "free_symbol": [77, 184], "might": [77, 184], "case": [77, 184], "keep": [77, 184], "track": [77, 184], "send": [77, 184], "routin": [77, 184], "core": [77, 106, 184], "as_leading_term": [77, 184], "logx": [77, 184], "cdir": [77, 184], "seri": [77, 184], "_eval_as_leading_term": [77, 184], "as_numer_denom": [77, 184], "stub": [77, 184], "normal": [77, 184], "as_ordered_factor": [77, 184], "as_ordered_term": [77, 184], "data": [77, 106, 184], "transform": [77, 101, 102, 184, 208, 209], "as_powers_dict": [77, 184], "expon": [77, 184], "caution": [77, 184], "lost": [77, 83, 184, 190], "altern": [77, 184], "applic": [77, 79, 184, 186], "guarante": [77, 85, 184, 192], "as_real_imag": [77, 184], "perform": [77, 78, 184, 185], "imaginari": [77, 184], "confus": [77, 184], "re": [77, 184], "im": [77, 184], "as_term": [77, 184], "aseri": [77, 184], "hir": [77, 184], "asymptot": [77, 184], "equival": [77, 184], "whose": [77, 184], "It": [77, 184], "repres": [77, 184], "boolean": [77, 184], "produc": [77, 184], "hierarch": [77, 184], "stop": [77, 184], "earli": [77, 184], "nicer": [77, 184], "rewrit": [77, 184], "normalis": [77, 184], "24": [77, 184], "without": [77, 184], "algorithm": [77, 184], "induc": [77, 184], "gruntz": [77, 184], "majorli": [77, 184], "mrv": [77, 184], "sub": [77, 184], "overal": [77, 184], "idea": [77, 184], "look": [77, 106, 184], "most": [77, 79, 184, 186], "rapidli": [77, 184], "vari": [77, 184], "subexpress": [77, 184], "Then": [77, 184], "till": [77, 184], "tri": [77, 184], "represent": [77, 184], "belong": [77, 184], "dominik": [77, 184], "proc": [77, 184], "1993": [77, 184], "symp": [77, 184], "algebra": [77, 81, 184, 188], "pp": [77, 184], "239": [77, 184], "244": [77, 184], "p90": [77, 184], "http": [77, 184], "en": [77, 184], "wikipedia": [77, 184], "org": [77, 184], "wiki": [77, 184], "asymptotic_expans": [77, 184], "docstr": [77, 184], "detail": [77, 106, 184], "wrapper": [77, 184], "assumptions0": [77, 184], "besid": [77, 184], "typeinfo": [77, 184], "extended_neg": [77, 184], "extended_nonneg": [77, 184], "extended_nonposit": [77, 184], "extended_nonzero": [77, 184], "extended_posit": [77, 184], "extended_r": [77, 184], "finit": [77, 184], "hermitian": [77, 184], "infinit": [77, 184], "neg": [77, 184], "nonneg": [77, 184], "nonposit": [77, 184], "atom": [77, 184], "By": [77, 184], "truli": [77, 184], "divid": [77, 184], "smaller": [77, 184], "piec": [77, 184], "request": [77, 184], "demonstr": [77, 184], "numbersymbol": [77, 184], "zoo": [77, 184], "infin": [77, 184], "special": [77, 184], "implicitli": [77, 184], "too": [77, 184], "Be": [77, 184], "check": [77, 106, 184], "your": [77, 184], "implicit": [77, 184], "is_integ": [77, 184], "final": [77, 184], "found": [77, 184], "scan": [77, 184], "appliedundef": [77, 184], "cancel": [77, 184], "canonical_vari": [77, 184], "clash": [77, 184], "change_vari": [77, 184], "new_var": [77, 184], "int_var_expr": [77, 184], "inv_expr": [77, 184], "jac_posit": [77, 184], "over": [77, 184], "state": [77, 184], "invers": [77, 184], "class_kei": [77, 184], "nice": [77, 184], "_first": [77, 184], "explicit": [77, 184], "front": [77, 184], "revers": [77, 184], "numer": [77, 105, 106, 184], "factor_term": [77, 184], "distribute_order_term": [77, 184], "combsimp": [77, 184], "commute_factor_in": [77, 184], "opd": [77, 184], "move": [77, 83, 184, 190], "commute_factor_out": [77, 184], "Not": [77, 184], "mathemat": [77, 184], "sorted_class": [77, 184], "compute_leading_term": [77, 184], "could_extract_minus_sign": [77, 184], "liter": [77, 184], "sign": [77, 184], "though": [77, 184], "put": [77, 184], "someth": [77, 184], "wrt": [77, 184], "signsimp": [77, 184], "count": [77, 184], "queri": [77, 184], "count_op": [77, 184], "doit": [77, 184], "some": [77, 184], "speci": [77, 184], "exclud": [77, 184], "via": [77, 184], "wa": [77, 184], "dummy_eq": [77, 184], "handl": [77, 184], "dummi": [77, 184], "failing_express": [77, 184], "did": [77, 184], "signific": [77, 184], "15": [77, 184], "maxn": [77, 184], "100": [77, 184], "chop": [77, 184], "strict": [77, 184], "formula": [77, 184], "accuraci": [77, 184], "digit": [77, 184], "temporari": [77, 184], "tini": [77, 184], "subresult": [77, 184], "standard": [77, 184], "magnitud": [77, 184], "small": [77, 184], "purpos": [77, 184], "1e": [77, 184], "000100000000000000": [77, 184], "precisionexhaust": [77, 184], "fail": [77, 184], "avail": [77, 184], "maxprec": [77, 184], "choos": [77, 83, 184, 190], "tanh": [77, 184], "sinh": [77, 184], "oscillatori": [77, 184], "interv": [77, 184], "osc": [77, 184], "debug": [77, 184], "inform": [77, 106, 184], "advers": [77, 184], "affect": [77, 184], "1e16": [77, 184], "truncat": [77, 184], "subtract": [77, 184], "That": [77, 184], "accur": [77, 184], "wai": [77, 184], "00000000000000": [77, 184], "modulu": [77, 184], "power_bas": [77, 184], "power_exp": [77, 184], "multinomi": [77, 184], "expr_free_symbol": [77, 184], "node": [77, 184], "extract_addit": [77, 184], "toward": [77, 184], "extract_multipl": [77, 184], "extract_branch_factor": [77, 184], "allow_half": [77, 184], "exp_polar": [77, 184], "group": [77, 184], "fourier_seri": [77, 184], "sine": [77, 184], "cosin": [77, 184], "x0": [77, 184], "dir": [77, 184], "hyper": [77, 184], "eg": [77, 184], "indexedbas": [77, 184], "except": [77, 184], "own": [77, 184], "fromit": [77, 184], "conveni": [77, 184], "hold": [77, 184], "gammasimp": [77, 184], "geto": [77, 184], "getn": [77, 184], "pattern": [77, 184], "knowledg": [77, 184], "half": [77, 184], "open": [77, 184], "lopen": [77, 184], "particular": [77, 184], "has_fre": [77, 184], "integral_form": [77, 184], "integrand": [77, 184], "mod": [77, 184], "mod_invers": [77, 184], "is_algebraic_expr": [77, 184], "simpl": [77, 184], "extens": [77, 184], "is_rational_funct": [77, 184], "exponenti": [77, 184], "attempt": [77, 184], "nontrivi": [77, 184], "becom": [77, 184], "algebraic_express": [77, 184], "is_compar": [77, 184], "alreadi": [77, 184], "mean": [77, 184], "rewritten": [77, 184], "dif": [77, 184], "_prec": [77, 184], "is_const": [77, 184], "flag": [77, 184], "constanc": [77, 184], "conclus": [77, 184], "perhap": [77, 184], "necessarili": [77, 184], "few": [77, 184], "strategi": [77, 184], "random": [77, 184], "agre": [77, 184], "decis": [77, 184], "made": [77, 83, 184, 190], "differenti": [77, 81, 184, 188], "omit": [77, 184], "denomin": [77, 184], "answer": [77, 184], "neither": [77, 184], "nor": [77, 184], "prove": [77, 184], "failing_numb": [77, 184], "befor": [77, 184], "is_meromorph": [77, 184], "meromorph": [77, 184], "intend": [77, 184], "quick": [77, 184], "analysi": [77, 184], "multivalu": [77, 184], "branch": [77, 184], "thu": [77, 184], "everywher": [77, 184], "essenti": [77, 184], "singular": [77, 184], "cut": [77, 184], "endpoint": [77, 184], "is_numb": [77, 184], "soon": [77, 184], "hit": [77, 184], "is_polynomi": [77, 184], "abl": [77, 184], "ratio": [77, 184], "rational_funct": [77, 184], "leadterm": [77, 184], "xlim": [77, 184], "lseri": [77, 184], "yield": [77, 184], "exaxmpl": [77, 184], "termin": [77, 184], "advantag": [77, 184], "nseri": [77, 184], "mani": [77, 79, 184, 186], "interest": [77, 184], "next": [77, 184], "ask": [77, 184], "old": [77, 184], "wild": [77, 184], "xreplac": [77, 184], "q": [77, 184], "p_": [77, 184], "q_": [77, 184], "r_": [77, 184], "But": [77, 184], "identifi": [77, 184], "style": [77, 184], "solv": [77, 83, 184, 190], "repl_dict": [77, 184], "helper": [77, 184], "x_": [77, 184], "_eval_nseri": [77, 184], "innermost": [77, 184], "cross": [77, 184], "everyth": [77, 184], "avoid": [77, 184], "place": [77, 184], "fast": [77, 92, 93, 184, 199, 200], "advanc": [77, 184], "disadvantag": [77, 184], "less": [77, 184], "expect": [77, 184], "append": [77, 184], "shorter": [77, 184], "met": [77, 184], "harder": [77, 184], "120": [77, 184], "approach": [77, 184], "traceback": [77, 184], "recent": [77, 184], "last": [77, 184], "poleerror": [77, 184], "nsimplifi": [77, 184], "toler": [77, 184], "powsimp": [77, 184], "everi": [77, 184], "radsimp": [77, 184], "ratsimp": [77, 184], "rcall": [77, 184], "through": [77, 106, 184], "tree": [77, 184], "simul": [77, 184], "refin": [77, 184], "removeo": [77, 184], "simultan": [77, 184], "bottom": [77, 184], "fashion": [77, 184], "target": [77, 184], "caus": [77, 184], "succe": [77, 184], "receiv": [77, 184], "setup": [77, 184], "tan": [77, 184], "newtyp": [77, 184], "ab": [77, 184], "intuit": [77, 184], "behavior": [77, 184], "filter": [77, 184], "twice": [77, 184], "is_mul": [77, 184], "natur": [77, 184], "tricki": [77, 184], "probabl": [77, 184], "better": [77, 184], "describ": [77, 184], "is_pow": [77, 184], "is_add": [77, 184], "themselv": [77, 184], "capabl": [77, 184], "trigonometr": [77, 184], "combinatori": [77, 184], "gamma": [77, 184], "unspecifi": [77, 184], "_eval_rewrit": [77, 184], "mysin": [77, 184], "def": [77, 184], "_eval_rewrite_as_": [77, 184], "backward": [77, 184], "compat": [77, 184], "reason": [77, 184], "discourag": [77, 184], "_eval_rewrite_as_co": [77, 184], "round": [77, 184], "decim": [77, 184], "14": [77, 184], "effect": [77, 184], "31": [77, 184], "72": [77, 184], "isinst": [77, 184], "123": [77, 184], "lazi": [77, 184], "univari": [77, 184], "suppli": [77, 184], "bi": [77, 184], "stand": [77, 184], "smooth": [77, 184], "alter": [77, 184], "17": [77, 184], "typeerror": [77, 184], "sort_kei": [77, 184], "sever": [77, 184], "sympifi": [77, 184], "success": [77, 184], "op": [77, 184], "tie": [77, 184], "default_sort_kei": [77, 184], "previou": [77, 184], "until": [77, 184], "been": [77, 184], "rep": [77, 184], "delai": [77, 184], "nan": [77, 184], "featur": [77, 184], "subsequ": [77, 184], "unord": [77, 184], "length": [77, 184], "break": [77, 184], "ti": [77, 184], "unsort": [77, 184], "reflect": [77, 184], "21": [77, 184], "333333333333333333333": [77, 184], "333333333333333314830": [77, 184], "ensur": [77, 184], "wildcard": [77, 184], "pars": [77, 184], "condit": [77, 184], "evalfmixin": [77, 184], "taylor_term": [77, 184], "previous_term": [77, 184], "taylor": [77, 184], "slow": [77, 184], "subclass": [77, 184], "redefin": [77, 184], "trigsimp": [77, 184], "occurr": [77, 184], "occur": [77, 184], "entir": [77, 184], "valueerror": [77, 184], "invalid": [77, 184], "conj": [78, 185], "space": [78, 85, 185, 192], "_conj": [78, 185], "relat": [79, 82, 186, 189], "tensor": [79, 99, 101, 102, 186, 206, 208, 209], "complic": [79, 186], "aris": [79, 186], "constraint": [79, 186], "fulfil": [79, 186], "potenti": [79, 186], "mixtur": [79, 186], "spheric": [79, 100, 186, 207], "tackl": [79, 186], "henc": [79, 186], "innerproductop1d": [80, 187], "test_funct": [81, 188], "expansion_recip": [83, 190], "expansionrecip": [83, 92, 93, 190, 199, 200], "lh": [83, 190], "dt": [83, 190], "construct": [83, 84, 190, 191], "collect_matric": [83, 190], "factor_lh": [83, 190], "factor_rh": [83, 190], "matric": [83, 190], "user": [83, 190], "ditto": [83, 190], "rh": [83, 190], "due": [83, 190], "shallow": [83, 190], "to_inner_product": [83, 190], "to_radi": [83, 190], "introduc": [83, 190], "rad_xpd": [83, 190], "properli": [83, 190], "matrix_obj": [84, 191], "pow_h": [85, 192], "pow_": [85, 192], "orthogon": [85, 98, 192, 205], "approri": [85, 192], "hilbert": [85, 192], "var": [86, 193], "overlin": [88, 195], "l_": [88, 195], "m_": [88, 195], "m_1": [88, 195], "widetild": [88, 195], "l_z": [88, 195], "xpd_recip": [92, 93, 199, 200], "phys_par": [92, 93, 199, 200], "lambdifi": [92, 93, 199, 200], "x_name": [96, 203], "y_name": [96, 203], "z_name": [96, 97, 203, 204], "orthogonalcoordinates3d": [96, 97, 99, 100, 101, 102, 203, 204, 206, 207, 208, 209], "cartesian": [96, 203], "constructor": [96, 97, 98, 99, 100, 101, 102, 203, 204, 205, 206, 207, 208, 209], "x1": [96, 97, 98, 100, 203, 204, 205, 207], "x2": [96, 97, 98, 100, 203, 204, 205, 207], "x3": [96, 97, 98, 100, 203, 204, 205, 207], "third": [96, 97, 98, 100, 203, 204, 205, 207], "x1_name": [96, 97, 98, 100, 203, 204, 205, 207], "x2_name": [96, 97, 98, 100, 203, 204, 205, 207], "x3_name": [96, 97, 98, 100, 203, 204, 205, 207], "s_name": [97, 204], "p_name": [97, 100, 204, 207], "curvilinear": [98, 205], "scalar": [99, 206], "coord_si": [99, 101, 102, 206, 208, 209], "tensor3d": [99, 102, 206, 209], "grad": [99, 206], "shortcut": [99, 102, 206, 209], "laplacian": [99, 102, 206, 209], "transform_to": [99, 101, 102, 206, 208, 209], "new_si": [99, 101, 102, 206, 208, 209], "remain": [99, 206], "unchang": [99, 206], "r_name": [100, 207], "t_name": [100, 207], "curl": [102, 209], "div": [102, 209], "vec_a": [103, 104, 210, 211], "vec_b": [103, 104, 210, 211], "pg_util": 105, "pg_model": [105, 106], "descript": 106, "holdenri": 106, "chernoff": 106, "2021": 106, "www": [], "research": [], "ethz": [], "ch": [], "20": [], "500": [], "11850": [], "509840": [], "packag": 106, "aim": 106, "solut": 106, "plug": 106, "assimil": 106, "framework": 106, "geomagnet": 106, "gda": 106, "regard": 106, "project": 106, "resourc": 106, "homepag": 106, "gentlemin": [], "github": [], "io": [], "plesio_geostrophi": [], "plesiogeostropi": [0, 107], "realizt": [0, 107], "autosummari": [], "templat": [], "custom": [], "rst": [], "subdivid": 106, "four": 106, "download": 106, "map_pg_field": [], "map_collect": [], "labeledsubcollect": [], "base_util": [], "assemble_background": [], "field_to_mo": [], "fields_in_term": [], "integrate_asym": [], "integrate_sym": [], "h_": [], "u_sph": [], "u_pg": [], "pgvar_bg": [], "pgvar_ptb": [], "reduced_var": [], "fe_p": [], "pg_to_conjug": [], "conjugate_to_pg": [], "map_conjugate_to_pg": [], "map_pg_to_conjug": [], "pg_ansatz": [], "eqs_pg": [], "eqs_cg": [], "eqn_pg_to_conjug": [], "expand_conjug": [], "subscript_str": [], "test_": [], "expand_daria_malku": [], "expand_stream_forc": [], "orth_pref_jacobi": [], "placeholder_collect": [], "systemequ": [], "force_explicit_cg": [], "param": [], "pleas": 106, "jupyt": 106, "notebook": 106, "demo": 106, "nbviewer": [], "blob": [], "main": [], "pg_demo": [], "ipynb": [], "solver": 106, "step": 106, "eigenpg": [], "dot": [], "cartesiancoordinates3d": [], "cylindricalcoordin": [], "scalar3d": [], "sphericalcoordin": [], "invert_block_diag": [], "powers_of": [], "innerprodquad": [], "innerquad_gaussjacobi": [], "labeledblockarrai": [], "matrixexpand": [], "eigenfreq_malkus_3d": [], "eigenfreq_malkus_pg": [], "eigenfreq_inertial3d": [], "eigenfreq_psi_op": [], "postproc": [], "eigen_func_from_conjug": [], "get_eigen_field_funct": [], "refer": 106, "supplementari": 106, "pre": 106, "extend": 106, "api": 106}, "objects": {"": [[107, 0, 0, "-", "pg_utils"]], "pg_utils": [[108, 0, 0, "-", "numerics"], [124, 0, 0, "-", "pg_model"], [197, 0, 0, "-", "processing"], [201, 0, 0, "-", "sympy_supp"]], "pg_utils.numerics": [[109, 0, 0, "-", "matrices"], [119, 0, 0, "-", "utils"]], "pg_utils.numerics.matrices": [[110, 1, 1, "", "InnerProdQuad"], [111, 1, 1, "", "InnerQuad_GaussJacobi"], [112, 1, 1, "", "InnerQuad_Rule"], [113, 1, 1, "", "LabeledBlockArray"], [114, 1, 1, "", "LabeledBlockMatrix"], [115, 1, 1, "", "MatrixExpander"], [116, 1, 1, "", "QuadRecipe"], [117, 3, 1, "", "invert_block_diag"], [118, 3, 1, "", "powers_of"]], "pg_utils.numerics.matrices.InnerProdQuad": [[110, 2, 1, "", "__init__"]], "pg_utils.numerics.matrices.InnerQuad_GaussJacobi": [[111, 2, 1, "", "__init__"], [111, 2, 1, "", "deduce_params"], [111, 2, 1, "", "get_powers"], [111, 2, 1, "", "gramian"]], "pg_utils.numerics.matrices.InnerQuad_Rule": [[112, 2, 1, "", "__init__"], [112, 2, 1, "", "gramian"]], "pg_utils.numerics.matrices.LabeledBlockArray": [[113, 2, 1, "", "__init__"]], "pg_utils.numerics.matrices.LabeledBlockMatrix": [[114, 2, 1, "", "__init__"]], "pg_utils.numerics.matrices.MatrixExpander": [[115, 2, 1, "", "__init__"], [115, 2, 1, "", "expand"]], "pg_utils.numerics.matrices.QuadRecipe": [[116, 2, 1, "", "__init__"]], "pg_utils.numerics.utils": [[120, 3, 1, "", "eigenfreq_Malkus_3d"], [121, 3, 1, "", "eigenfreq_Malkus_pg"], [122, 3, 1, "", "eigenfreq_inertial3d"], [123, 3, 1, "", "eigenfreq_psi_op"]], "pg_utils.pg_model": [[125, 0, 0, "-", "base"], [132, 0, 0, "-", "base_utils"], [139, 0, 0, "-", "core"], [152, 0, 0, "-", "equations"], [156, 0, 0, "-", "expand_conjugate"], [161, 0, 0, "-", "expand_daria_malkus"], [166, 0, 0, "-", "expand_daria_mm_malkus"], [171, 0, 0, "-", "expand_daria_thesis"], [176, 0, 0, "-", "expand_stream_force"], [181, 0, 0, "-", "expansion"], [194, 0, 0, "-", "forcing"], [196, 0, 0, "-", "params"]], "pg_utils.pg_model.base": [[126, 1, 1, "", "CollectionConjugate"], [127, 1, 1, "", "CollectionPG"], [128, 1, 1, "", "LabeledCollection"], [129, 1, 1, "", "LabeledSubCollection"], [130, 3, 1, "", "map_PG_fields"], [131, 3, 1, "", "map_collection"]], "pg_utils.pg_model.base.CollectionConjugate": [[126, 2, 1, "", "__init__"], [126, 2, 1, "", "apply"], [126, 2, 1, "", "as_empty"], [126, 2, 1, "", "copy"], [126, 2, 1, "", "deserialize"], [126, 2, 1, "", "generate_collection"], [126, 4, 1, "", "iter_filter"], [126, 4, 1, "", "iter_name"], [126, 2, 1, "", "load_json"], [126, 2, 1, "", "save_json"], [126, 2, 1, "", "serialize"], [126, 2, 1, "", "subset_B_bound"], [126, 2, 1, "", "subset_B_bound_cyl"], [126, 2, 1, "", "subset_B_equator"], [126, 2, 1, "", "subset_mag"], [126, 2, 1, "", "subset_moments"], [126, 2, 1, "", "vorticity"]], "pg_utils.pg_model.base.CollectionPG": [[127, 2, 1, "", "__init__"], [127, 2, 1, "", "apply"], [127, 2, 1, "", "as_empty"], [127, 2, 1, "", "copy"], [127, 2, 1, "", "deserialize"], [127, 2, 1, "", "generate_collection"], [127, 4, 1, "", "iter_filter"], [127, 4, 1, "", "iter_name"], [127, 2, 1, "", "load_json"], [127, 2, 1, "", "save_json"], [127, 2, 1, "", "serialize"], [127, 2, 1, "", "subset_B_bound"], [127, 2, 1, "", "subset_B_bound_cyl"], [127, 2, 1, "", "subset_B_equator"], [127, 2, 1, "", "subset_mag"], [127, 2, 1, "", "subset_moments"], [127, 2, 1, "", "vorticity"]], "pg_utils.pg_model.base.LabeledCollection": [[128, 2, 1, "", "__init__"], [128, 2, 1, "", "apply"], [128, 2, 1, "", "as_empty"], [128, 2, 1, "", "copy"], [128, 2, 1, "", "deserialize"], [128, 2, 1, "", "generate_collection"], [128, 4, 1, "", "iter_filter"], [128, 4, 1, "", "iter_name"], [128, 2, 1, "", "load_json"], [128, 2, 1, "", "save_json"], [128, 2, 1, "", "serialize"]], "pg_utils.pg_model.base.LabeledSubCollection": [[129, 2, 1, "", "__init__"], [129, 4, 1, "", "iter_filter"], [129, 4, 1, "", "iter_name"]], "pg_utils.pg_model.base_utils": [[133, 3, 1, "", "assemble_background"], [134, 3, 1, "", "field_to_moment"], [135, 3, 1, "", "fields_in_term"], [136, 3, 1, "", "integrate_asym"], [137, 3, 1, "", "integrate_sym"], [138, 3, 1, "", "linearize"]], "pg_utils.pg_model.core": [[140, 5, 1, "", "H_s"], [141, 3, 1, "", "PG_to_conjugate"], [142, 5, 1, "", "U_pg"], [143, 5, 1, "", "U_sph"], [144, 3, 1, "", "conjugate_to_PG"], [145, 5, 1, "", "fe_p"], [146, 3, 1, "", "map_conjugate_to_pg"], [147, 3, 1, "", "map_pg_to_conjugate"], [148, 3, 1, "", "pg_ansatz"], [149, 5, 1, "", "pgvar_bg"], [150, 5, 1, "", "pgvar_ptb"], [151, 5, 1, "", "reduced_var"]], "pg_utils.pg_model.equations": [[153, 3, 1, "", "eqn_PG_to_conjugate"], [154, 5, 1, "", "eqs_cg"], [155, 5, 1, "", "eqs_pg"]], "pg_utils.pg_model.expand_conjugate": [[157, 5, 1, "", "fourier_expand"], [158, 5, 1, "", "rad_expand"], [159, 5, 1, "", "subscript_str"], [160, 5, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_malkus": [[162, 5, 1, "", "fourier_expand"], [163, 5, 1, "", "rad_expand"], [164, 5, 1, "", "subscript_str"], [165, 5, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_mm_malkus": [[167, 5, 1, "", "fourier_expand"], [168, 5, 1, "", "rad_expand"], [169, 5, 1, "", "subscript_str"], [170, 5, 1, "", "test_s"]], "pg_utils.pg_model.expand_daria_thesis": [[172, 5, 1, "", "fourier_expand"], [173, 5, 1, "", "rad_expand"], [174, 5, 1, "", "subscript_str"], [175, 5, 1, "", "test_s"]], "pg_utils.pg_model.expand_stream_force": [[177, 5, 1, "", "fourier_expand"], [178, 5, 1, "", "rad_expand"], [179, 5, 1, "", "subscript_str"], [180, 5, 1, "", "test_s"]], "pg_utils.pg_model.expansion": [[182, 1, 1, "", "ExpansionRecipe"], [183, 1, 1, "", "FourierExpansions"], [184, 1, 1, "", "InnerProduct1D"], [185, 1, 1, "", "InnerProductOp1D"], [186, 1, 1, "", "RadialExpansions"], [187, 1, 1, "", "RadialInnerProducts"], [188, 1, 1, "", "RadialTestFunctions"], [189, 1, 1, "", "SpectralExpansion"], [190, 1, 1, "", "SystemEquations"], [191, 1, 1, "", "SystemMatrix"], [192, 3, 1, "", "orth_pref_jacobi"], [193, 3, 1, "", "placeholder_collection"]], "pg_utils.pg_model.expansion.ExpansionRecipe": [[182, 2, 1, "", "__init__"]], "pg_utils.pg_model.expansion.FourierExpansions": [[183, 2, 1, "", "__init__"], [183, 2, 1, "", "apply"], [183, 2, 1, "", "as_empty"], [183, 2, 1, "", "copy"], [183, 2, 1, "", "deserialize"], [183, 2, 1, "", "generate_collection"], [183, 4, 1, "", "iter_filter"], [183, 4, 1, "", "iter_name"], [183, 2, 1, "", "load_json"], [183, 2, 1, "", "save_json"], [183, 2, 1, "", "serialize"], [183, 2, 1, "", "to_fourier_domain"]], "pg_utils.pg_model.expansion.InnerProduct1D": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "apart"], [184, 4, 1, "", "args"], [184, 2, 1, "", "args_cnc"], [184, 2, 1, "", "as_coeff_Add"], [184, 2, 1, "", "as_coeff_Mul"], [184, 2, 1, "", "as_coeff_add"], [184, 2, 1, "", "as_coeff_exponent"], [184, 2, 1, "", "as_coeff_mul"], [184, 2, 1, "", "as_coefficient"], [184, 2, 1, "", "as_coefficients_dict"], [184, 2, 1, "", "as_content_primitive"], [184, 2, 1, "", "as_dummy"], [184, 2, 1, "", "as_expr"], [184, 2, 1, "", "as_independent"], [184, 2, 1, "", "as_leading_term"], [184, 2, 1, "", "as_numer_denom"], [184, 2, 1, "", "as_ordered_factors"], [184, 2, 1, "", "as_ordered_terms"], [184, 2, 1, "", "as_poly"], [184, 2, 1, "", "as_powers_dict"], [184, 2, 1, "", "as_real_imag"], [184, 2, 1, "", "as_terms"], [184, 2, 1, "", "aseries"], [184, 4, 1, "", "assumptions0"], [184, 2, 1, "", "atoms"], [184, 2, 1, "", "cancel"], [184, 4, 1, "", "canonical_variables"], [184, 2, 1, "", "change_variable"], [184, 2, 1, "", "class_key"], [184, 2, 1, "", "coeff"], [184, 2, 1, "", "collect"], [184, 2, 1, "", "combsimp"], [184, 2, 1, "", "commute_factor_in"], [184, 2, 1, "", "commute_factor_out"], [184, 2, 1, "", "compare"], [184, 2, 1, "", "compute_leading_term"], [184, 2, 1, "", "conjugate"], [184, 2, 1, "", "could_extract_minus_sign"], [184, 2, 1, "", "count"], [184, 2, 1, "", "count_ops"], [184, 2, 1, "", "doit"], [184, 2, 1, "", "dummy_eq"], [184, 2, 1, "", "equals"], [184, 2, 1, "", "evalf"], [184, 2, 1, "", "expand"], [184, 4, 1, "", "expr_free_symbols"], [184, 2, 1, "", "extract_additively"], [184, 2, 1, "", "extract_branch_factor"], [184, 2, 1, "", "extract_multiplicatively"], [184, 2, 1, "", "factor"], [184, 2, 1, "", "find"], [184, 2, 1, "", "fourier_series"], [184, 2, 1, "", "fps"], [184, 4, 1, "", "free_symbols"], [184, 2, 1, "", "fromiter"], [184, 4, 1, "", "func"], [184, 2, 1, "", "gammasimp"], [184, 2, 1, "", "getO"], [184, 2, 1, "", "getn"], [184, 2, 1, "", "has"], [184, 2, 1, "", "has_free"], [184, 2, 1, "", "integral_form"], [184, 2, 1, "", "integrand"], [184, 2, 1, "", "integrate"], [184, 2, 1, "", "invert"], [184, 2, 1, "", "is_algebraic_expr"], [184, 4, 1, "", "is_comparable"], [184, 2, 1, "", "is_constant"], [184, 2, 1, "", "is_meromorphic"], [184, 4, 1, "", "is_number"], [184, 2, 1, "", "is_polynomial"], [184, 2, 1, "", "is_rational_function"], [184, 2, 1, "", "leadterm"], [184, 2, 1, "", "limit"], [184, 2, 1, "", "lseries"], [184, 2, 1, "", "match"], [184, 2, 1, "", "matches"], [184, 2, 1, "", "n"], [184, 2, 1, "", "normal"], [184, 2, 1, "", "nseries"], [184, 2, 1, "", "nsimplify"], [184, 2, 1, "", "powsimp"], [184, 2, 1, "", "primitive"], [184, 2, 1, "", "radsimp"], [184, 2, 1, "", "ratsimp"], [184, 2, 1, "", "rcall"], [184, 2, 1, "", "refine"], [184, 2, 1, "", "removeO"], [184, 2, 1, "", "replace"], [184, 2, 1, "", "rewrite"], [184, 2, 1, "", "round"], [184, 2, 1, "", "separate"], [184, 2, 1, "", "series"], [184, 2, 1, "", "simplify"], [184, 2, 1, "", "sort_key"], [184, 2, 1, "", "split"], [184, 2, 1, "", "subs"], [184, 2, 1, "", "taylor_term"], [184, 2, 1, "", "together"], [184, 2, 1, "", "trigsimp"], [184, 2, 1, "", "xreplace"]], "pg_utils.pg_model.expansion.InnerProductOp1D": [[185, 2, 1, "", "__init__"]], "pg_utils.pg_model.expansion.RadialExpansions": [[186, 2, 1, "", "__init__"], [186, 2, 1, "", "apply"], [186, 2, 1, "", "as_empty"], [186, 2, 1, "", "copy"], [186, 2, 1, "", "deserialize"], [186, 2, 1, "", "generate_collection"], [186, 4, 1, "", "iter_filter"], [186, 4, 1, "", "iter_name"], [186, 2, 1, "", "load_json"], [186, 2, 1, "", "save_json"], [186, 2, 1, "", "serialize"]], "pg_utils.pg_model.expansion.RadialInnerProducts": [[187, 2, 1, "", "__init__"], [187, 2, 1, "", "apply"], [187, 2, 1, "", "as_empty"], [187, 2, 1, "", "copy"], [187, 2, 1, "", "deserialize"], [187, 2, 1, "", "generate_collection"], [187, 4, 1, "", "iter_filter"], [187, 4, 1, "", "iter_name"], [187, 2, 1, "", "load_json"], [187, 2, 1, "", "save_json"], [187, 2, 1, "", "serialize"]], "pg_utils.pg_model.expansion.RadialTestFunctions": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "apply"], [188, 2, 1, "", "as_empty"], [188, 2, 1, "", "copy"], [188, 2, 1, "", "deserialize"], [188, 2, 1, "", "generate_collection"], [188, 4, 1, "", "iter_filter"], [188, 4, 1, "", "iter_name"], [188, 2, 1, "", "load_json"], [188, 2, 1, "", "save_json"], [188, 2, 1, "", "serialize"]], "pg_utils.pg_model.expansion.SpectralExpansion": [[189, 2, 1, "", "__init__"], [189, 2, 1, "", "apply"], [189, 2, 1, "", "as_empty"], [189, 2, 1, "", "copy"], [189, 2, 1, "", "deserialize"], [189, 2, 1, "", "generate_collection"], [189, 4, 1, "", "iter_filter"], [189, 4, 1, "", "iter_name"], [189, 2, 1, "", "load_json"], [189, 2, 1, "", "save_json"], [189, 2, 1, "", "serialize"]], "pg_utils.pg_model.expansion.SystemEquations": [[190, 2, 1, "", "__init__"], [190, 2, 1, "", "apply"], [190, 2, 1, "", "as_empty"], [190, 2, 1, "", "collect_matrices"], [190, 2, 1, "", "copy"], [190, 2, 1, "", "deserialize"], [190, 2, 1, "", "generate_collection"], [190, 4, 1, "", "iter_filter"], [190, 4, 1, "", "iter_name"], [190, 2, 1, "", "load_json"], [190, 2, 1, "", "save_json"], [190, 2, 1, "", "serialize"], [190, 2, 1, "", "to_fourier_domain"], [190, 2, 1, "", "to_inner_product"], [190, 2, 1, "", "to_radial"]], "pg_utils.pg_model.expansion.SystemMatrix": [[191, 2, 1, "", "__init__"], [191, 2, 1, "", "deserialize"], [191, 2, 1, "", "load_json"], [191, 2, 1, "", "save_json"], [191, 2, 1, "", "serialize"]], "pg_utils.pg_model.forcing": [[195, 5, 1, "", "force_explicit_cg"]], "pg_utils.processing": [[198, 0, 0, "-", "postproc"]], "pg_utils.processing.postproc": [[199, 3, 1, "", "eigen_func_from_conjugate"], [200, 3, 1, "", "get_eigen_field_function"]], "pg_utils.sympy_supp": [[202, 0, 0, "-", "vector_calculus_3d"]], "pg_utils.sympy_supp.vector_calculus_3d": [[203, 1, 1, "", "CartesianCoordinates3D"], [204, 1, 1, "", "CylindricalCoordinates"], [205, 1, 1, "", "OrthogonalCoordinates3D"], [206, 1, 1, "", "Scalar3D"], [207, 1, 1, "", "SphericalCoordinates"], [208, 1, 1, "", "Tensor3D"], [209, 1, 1, "", "Vector3D"], [210, 3, 1, "", "cross"], [211, 3, 1, "", "dot"]], "pg_utils.sympy_supp.vector_calculus_3d.CartesianCoordinates3D": [[203, 2, 1, "", "__init__"]], "pg_utils.sympy_supp.vector_calculus_3d.CylindricalCoordinates": [[204, 2, 1, "", "__init__"]], "pg_utils.sympy_supp.vector_calculus_3d.OrthogonalCoordinates3D": [[205, 2, 1, "", "__init__"]], "pg_utils.sympy_supp.vector_calculus_3d.Scalar3D": [[206, 2, 1, "", "__init__"], [206, 2, 1, "", "grad"], [206, 2, 1, "", "laplacian"], [206, 2, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.SphericalCoordinates": [[207, 2, 1, "", "__init__"]], "pg_utils.sympy_supp.vector_calculus_3d.Tensor3D": [[208, 2, 1, "", "__init__"], [208, 2, 1, "", "transform_to"]], "pg_utils.sympy_supp.vector_calculus_3d.Vector3D": [[209, 2, 1, "", "__init__"], [209, 2, 1, "", "curl"], [209, 2, 1, "", "div"], [209, 2, 1, "", "laplacian"], [209, 2, 1, "", "transform_to"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"]}, "titleterms": {"pg_util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "numer": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "matric": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "util": [12, 13, 14, 15, 16, 119, 120, 121, 122, 123], "pg_model": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "base": [18, 19, 20, 21, 22, 23, 24, 125, 126, 127, 128, 129, 130, 131], "base_util": [25, 26, 27, 28, 29, 30, 31, 132, 133, 134, 135, 136, 137, 138], "core": [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "equat": [45, 46, 47, 48, 152, 153, 154, 155], "expand_conjug": [49, 50, 51, 52, 53, 156, 157, 158, 159, 160], "expand_daria_malku": [54, 55, 56, 57, 58, 161, 162, 163, 164, 165], "expand_daria_mm_malku": [59, 60, 61, 62, 63, 166, 167, 168, 169, 170], "expand_daria_thesi": [64, 65, 66, 67, 68, 171, 172, 173, 174, 175], "expand_stream_forc": [69, 70, 71, 72, 73, 176, 177, 178, 179, 180], "expans": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "forc": [87, 88, 194, 195], "param": [89, 196], "process": [90, 91, 92, 93, 197, 198, 199, 200], "postproc": [91, 92, 93, 198, 199, 200], "sympy_supp": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "vector_calculus_3d": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211], "plesiogeostropi": 106, "indic": 106, "tabl": 106, "innerprodquad": [3, 110], "innerquad_gaussjacobi": [4, 111], "innerquad_rul": [5, 112], "labeledblockarrai": [6, 113], "labeledblockmatrix": [7, 114], "matrixexpand": [8, 115], "quadrecip": [9, 116], "invert_block_diag": [10, 117], "powers_of": [11, 118], "eigenfreq_malkus_3d": [13, 120], "eigenfreq_malkus_pg": [14, 121], "eigenfreq_inertial3d": [15, 122], "eigenfreq_psi_op": [16, 123], "collectionconjug": [19, 126], "collectionpg": [20, 127], "labeledcollect": [21, 128], "labeledsubcollect": [22, 129], "map_pg_field": [23, 130], "map_collect": [24, 131], "assemble_background": [26, 133], "field_to_mo": [27, 134], "fields_in_term": [28, 135], "integrate_asym": [29, 136], "integrate_sym": [30, 137], "linear": [31, 138], "h_": [33, 140], "pg_to_conjug": [34, 141], "u_pg": [35, 142], "u_sph": [36, 143], "conjugate_to_pg": [37, 144], "fe_p": [38, 145], "map_conjugate_to_pg": [39, 146], "map_pg_to_conjug": [40, 147], "pg_ansatz": [41, 148], "pgvar_bg": [42, 149], "pgvar_ptb": [43, 150], "reduced_var": [44, 151], "eqn_pg_to_conjug": [46, 153], "eqs_cg": [47, 154], "eqs_pg": [48, 155], "fourier_expand": [50, 55, 60, 65, 70, 157, 162, 167, 172, 177], "rad_expand": [51, 56, 61, 66, 71, 158, 163, 168, 173, 178], "subscript_str": [52, 57, 62, 67, 72, 159, 164, 169, 174, 179], "test_": [53, 58, 63, 68, 73, 160, 165, 170, 175, 180], "expansionrecip": [75, 182], "fourierexpans": [76, 183], "innerproduct1d": [77, 184], "innerproductop1d": [78, 185], "radialexpans": [79, 186], "radialinnerproduct": [80, 187], "radialtestfunct": [81, 188], "spectralexpans": [82, 189], "systemequ": [83, 190], "systemmatrix": [84, 191], "orth_pref_jacobi": [85, 192], "placeholder_collect": [86, 193], "force_explicit_cg": [88, 195], "eigen_func_from_conjug": [92, 199], "get_eigen_field_funct": [93, 200], "cartesiancoordinates3d": [96, 203], "cylindricalcoordin": [97, 204], "orthogonalcoordinates3d": [98, 205], "scalar3d": [99, 206], "sphericalcoordin": [100, 207], "tensor3d": [101, 208], "vector3d": [102, 209], "cross": [103, 210], "dot": [104, 211], "structur": 106, "code": 106, "api": 105, "refer": 105, "tutori": 106}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})